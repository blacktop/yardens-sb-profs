(version 1)
(deny default)
(allow darwin-notification-post)
(allow file-clone)
(allow file-link)
(allow file-lock)
(allow file-read*
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/dev/random")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(require-any (subpath "/private/var/preferences/SystemConfiguration")
(subpath "/private/var/root/Library/Lockdown")
(subpath "/private/var/root/Library/Preferences")
(subpath-prefix "${HOME}/Library/Lockdown")
(subpath-prefix "${FRONT_USER_HOME}/Library/Preferences")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal"))
			(subpath "/Developer")
			(require-any (subpath "/private/var/factory_mount")
(subpath "/private/var/personalized_automation")
(subpath "/private/var/personalized_demo")
(subpath "/private/var/personalized_debug"))
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
			(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
			(require-any (subpath "/AppleInternal/Lockdown")
(subpath "/private/var/log/asl")
(literal "/private/var/db/launchd.db/com.apple.launchd/overrides.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Caches/Checkpoint.plist"))
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
			(literal "/private/var/preferences/com.apple.security.plist")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(subpath "/System/Developer")
			(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
			(subpath-prefix "${FRONT_USER_HOME}/Media")
			(literal "/private/var/run/lockdown.sock")
			(subpath "/private/var/personalized_factory")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(subpath "/private/var/run/lockdown")
			(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
			(subpath "/private/var/logs")
			(subpath "/Applications/Preferences.app")
			(literal "/dev/null")
			(literal "/dev/aes_0")
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
			(literal "/dev/urandom")
			(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
			(subpath "/private/var/db/datadetectors/sys")
			(literal "/dev/dtracehelper")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/zero")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
					(require-all
						(vnode-type REGULAR-FILE)
						(literal "/private/var/run/lockdown_first_run"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Containers")
(subpath-prefix "${FRONT_USER_HOME}/tmp/MediaCache")
(subpath-prefix "${FRONT_USER_HOME}/Library/Calendar")
(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.WebAppCache"))
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Voicemail")
(subpath-prefix "${FRONT_USER_HOME}/Library/Notes"))
					(subpath "/private/var/containers")
					(subpath-prefix "${FRONT_USER_HOME}/Media")
					(subpath "/private/var/tmp/MediaCache")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-any
					(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
					(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(uid 0)
				(literal "/private/etc/master.passwd"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
				(require-any
					(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
					(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Data/System/")
						(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
			(require-all
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(extension "b'com.apple.sandbox.system-group'")
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(entitlement-is-present "b'com.apple.security.system-group-containers'"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
				(extension "b'com.apple.logd.read-only'")
				(require-any
					(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
					(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private")
					(subpath "/Developer")
					(subpath "/private/var/preferences/Logging")
					(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
					(subpath "/System/Library/PrivateFrameworks")
					(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
					(literal "/private/etc/passwd")
					(subpath "/usr/lib")
					(subpath "/private/var/db/timezone")
					(subpath "/Library/RegionFeatures")
					(literal "/System")
					(literal "/private/etc/services")
					(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
					(subpath "/System/Library/Frameworks")
					(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
					(subpath "/System/Cryptexes")
					(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
					(literal "/private/etc/hosts")
					(subpath "/private/preboot/Cryptexes")
					(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
					(literal "/")
					(subpath "/usr/share")
					(literal "/private/etc/fstab")
					(literal "/private/preboot")
					(subpath "/System/Library")
					(subpath "/System/Developer")
					(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-any
							(subpath "/usr/libexec")
							(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
							(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
							(require-all
								(subpath "/usr/local/libexec")
								(debug-mode))))
					(require-all
						(debug-mode)
						(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
					(require-all
						(subpath "/usr/local")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))))
					(require-all
						(subpath "/AppleInternal")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
						(subpath "/private/var/OOPJit")
						(extension "b'com.apple.sandbox.oopjit'"))
					(require-all
						(subpath "/usr/appleinternal")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib"))))))))))
(allow file-read-data
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Preferences")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal "/private/var/run/syslog")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(vnode-type DIRECTORY)
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(process-attribute is-apple-signed-executable)
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-test-existence)
(allow file-write*
	(require-any (subpath "/private/var/preferences/SystemConfiguration")
(subpath "/private/var/root/Library/Lockdown")
(subpath "/private/var/root/Library/Preferences")
(subpath-prefix "${HOME}/Library/Lockdown")
(subpath-prefix "${FRONT_USER_HOME}/Library/Preferences")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge/knowledgeC.db-journal"))
	(subpath "/private/var/logs")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(subpath-prefix "${FRONT_USER_HOME}/Media")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/run/lockdown.sock")
	(subpath "/private/var/run/lockdown")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(vnode-type REGULAR-FILE)
		(literal "/private/var/run/lockdown_first_run"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)))
(allow file-write-data
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/null")
			(literal "/dev/dtracehelper"))))
(allow file-write-mode
	(literal "/private/var/db/timezone"))
(allow file-write-unlink
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-quota-stat)
(allow fs-quota-sync)
(allow fs-snapshot-mount)
(allow iokit-get-properties)
(allow iokit-open-user-client
	(iokit-user-client-class "AppleCredentialManagerUserClient")
	(require-any (iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
(iokit-user-client-class "IODPDeviceUserClient")
(iokit-user-client-class "IOAVDeviceUserClient")
(iokit-user-client-class "IOThunderboltFamilyUserClient")
(iokit-user-client-class "AppleARMIICUserClient")
(iokit-user-client-class "AppleNANDFTLUserClient")
(iokit-user-client-class "AppleH13CamInUserClient")
(iokit-user-client-class "AppleH10CamInUserClient")
(iokit-user-client-class "AppleKMPEndpointUserClient")
(iokit-user-client-class "AppleGasGaugeUpdateUserClient")
(iokit-user-client-class "AppleEffaceableStorageUserClient")
(iokit-user-client-class "AppleSSMAUserClient")
(iokit-user-client-class "AppleSSMAServicesUserClient")
(iokit-user-client-class "AppleSSMAEndpointUserClient"))
	(require-any (iokit-user-client-class "ASPUserClient")
(iokit-user-client-class "AppleNVMeUpdateUC"))
	(iokit-user-client-class "AppleSMCClient")
	(iokit-user-client-class "AppleSEPUserClient")
	(iokit-user-client-class "AppleHPMUserClient")
	(iokit-user-client-class "AppleMobileApNonceUserClient"))
(allow iokit-open-service)
(allow iokit-set-properties
	(require-all
		(iokit-user-client-class "IOUSBDeviceController")
		(iokit-property "USBDeviceCommand")))
(allow job-creation)
(allow lsopen)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.icloud.findmydeviced")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.mobile.installd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.commcenter.xpc")
	(require-any (global-name "com.apple.lockdown.")
(global-name "com.apple.remoted")
(global-name "com.apple.amfi.lockdown")
(global-name "com.apple.mobile.lockbot")
(global-name "com.apple.AOSNotification")
(global-name "com.apple.nearbyd.xpc.diagnostics")
(global-name "com.apple.ULLAConcierge.xpc.diagnostics")
(global-name "com.apple.carkit.service.lockdown")
(global-name "com.apple.commcenter.mobile-helper-cbupdateservice"))
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.wifi.manager")
	(extension "b'com.apple.security.exception.mach-lookup.local-name'")
	(extension "b'com.apple.security.exception.mach-lookup.global-name'")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.SBUserNotification")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.mobile.storage_mounter.xpc")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.PairingManager")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.nfcd.hwmanager")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(require-any (global-name "com.apple.hsdeviceservices")
(global-name "com.apple.fsdhelper")
(global-name "com.apple.fireworkservices")
(global-name "com.apple.factorysupportd")
(global-name "com.apple.factory.FDICommd")
(global-name "com.apple.factorydemod")
(global-name "com.apple.factorydemodhelper"))
	(require-any (global-name "com.apple.fusiond")
(global-name "com.apple.os_trace_relay")
(global-name "com.apple.pcapd")
(global-name "com.apple.preboardservice")
(global-name "com.apple.preboardservice_v2")
(global-name "com.apple.PurpleReverseProxy.Ctrl")
(global-name "com.apple.PurpleReverseProxy.Conn")
(global-name "com.apple.idamd")
(global-name "com.apple.instruments.deviceservice.lockdown")
(global-name "com.apple.instruments.deviceservice.lockdown.secure")
(global-name "com.apple.syslog_relay")
(global-name "com.apple.security.tribeca")
(global-name "com.apple.streaming_zip_conduit")
(global-name "com.apple.bbproxy")
(global-name "com.apple.bluetooth.BTPacketLogger")
(global-name "com.apple.backgroundassets.lockdownservice")
(global-name "com.apple.remotepairingdevice.tunnelmanagement")
(global-name "com.apple.remotepairingdevice.pairingmanagement")
(global-name "com.apple.crash_mover")
(global-name "com.apple.crashreportcopymobile")
(global-name "com.apple.companion_proxy")
(global-name "com.apple.coreautomation.coreautomationd.root")
(global-name "com.apple.coreautomation.coreautomationd.mobile")
(global-name "com.apple.testmanagerd.lockdown")
(global-name "com.apple.testmanagerd.lockdown.secure")
(global-name "com.apple.testmanagerd.remote-automation.lockdown")
(global-name "com.apple.testmanagerd.remote-automation.lockdown.secure")
(global-name "com.apple.mobileactivationd.lockdown")
(global-name "com.apple.mobile.MCInstall")
(global-name "com.apple.mobile.file_relay")
(global-name "com.apple.mobile.house_arrest")
(global-name "com.apple.mobile.assertion_agent")
(global-name "com.apple.mobile.notification_proxy")
(global-name "com.apple.mobile.storage_mounter_proxy")
(global-name "com.apple.mobile.installation_proxy")
(global-name "com.apple.mobile.insecure_notification_proxy")
(global-name "com.apple.atc2")
(global-name "com.apple.afcd")
(global-name "com.apple.accessibility.axAuditDaemon.deviceservice.lockdown")
(global-name "com.apple.dt.devicearbitration")
(global-name "com.apple.dt.remotepairingdeviced.lockdown"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "com.apple.webinspector")
	(global-name "com.apple.coreduetd.knowledge")
	(global-name "com.apple.misagent")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.mobile.heartbeat")
	(global-name "com.apple.managedconfiguration.profiled")
	(global-name "com.apple.OTATaskingAgent")
	(global-name "com.apple.atc")
	(require-all
		(global-name "com.apple.internal.")
		(require-any
			(global-name "com.apple.internal.devicecompute.CoreDeviceProxy")
			(require-all
				(require-any (global-name "com.apple.internal.monkeybars.cameraserver")
(global-name "com.apple.internal.monkeybars.screenserver"))
				(debug-mode))))
	(require-all
		(require-any (global-name "com.apple.xdcd")
(global-name "com.apple.pgtrace")
(global-name "com.apple.fdrhelper")
(global-name "com.apple.Ancd.mobile")
(global-name "com.apple.lsd.diagnostics")
(global-name "com.apple.monkeybars")
(global-name "com.apple.mapinspectord"))
		(require-any
			(debug-mode)
			(global-name "com.apple.internal.devicecompute.CoreDeviceProxy")))
	(require-all
		(xpc-service-name-regex #".+")
		(require-any
			(global-name "com.apple.managedconfiguration.profiled.public")
			(global-name "com.apple.system.logger")
			(global-name "com.apple.mobilegestalt.xpc")
			(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
			(global-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.containermanagerd")
			(global-name "com.apple.containermanagerd.system")
			(local-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.diagnosticd")
			(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
			(global-name "com.apple.logd")
			(global-name "com.apple.logd.events")
			(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
			(global-name "com.apple.lsd.mapdb")
			(global-name "com.apple.lsd.open")
			(global-name "com.apple.distributed_notifications@1v3")
			(global-name "com.apple.analyticsd")
			(global-name "com.apple.ctkd.token-client")
			(global-name "com.apple.CoreAuthentication.daemon")
			(global-name "com.apple.runningboard")
			(global-name "com.apple.system.libinfo.muser")
			(global-name "com.apple.lsd.openurl")
			(global-name "com.apple.tccd")
			(global-name "com.apple.lsd.advertisingidentifiers")
			(global-name "com.apple.aggregated")
			(global-name "com.apple.duetknowledged.activity")
			(require-all
				(global-name "com.apple.coreduetd.people")
				(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
			(require-all
				(global-name "com.apple.osanalytics.osanalyticshelper")
				(process-attribute is-apple-signed-executable)))))
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow necp-client-open)
(allow network*
	(literal "/private/var/run/lockdown.sock")
	(subpath "/private/var/run/lockdown"))
(allow network-inbound
	(local tcp "*:*"))
(allow network-outbound
	(control-name "com.apple.netsrc")
	(control-name "com.apple.flow-divert")
	(control-name "com.apple.network.statistics")
	(literal "/private/var/run/mDNSResponder")
	(literal "/private/var/run/syslog")
	(literal "/private/var/run/lockbot"))
(allow nvram-get)
(allow nvram-set
	(nvram-variable "auto-boot"))
(allow process-codesigning)
(allow process-info-codesignature)
(allow socket-ioctl)
(allow socket-option-get)
(allow socket-option-set)
(allow syscall-unix)
(allow syscall-mach)
(allow syscall-mig)
(allow sysctl-read
	(sysctl-name "net.statistics")
	(sysctl-name "kern.wakereason")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname"))
(allow system-fcntl)
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-necp-client-action)
(allow system-privilege)
(allow user-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.icloud.findmydeviced.notbackedup")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.mobile.ldpair")
	(preference-domain "com.apple.carrier")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.hangtracer")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.demo-settings")
			(preference-domain "com.apple.security"))))
(allow managed-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.icloud.findmydeviced.notbackedup")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.mobile.ldpair")
	(preference-domain "com.apple.carrier")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.hangtracer")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.demo-settings")
			(preference-domain "com.apple.security"))))
(allow process-exec-update-label)
