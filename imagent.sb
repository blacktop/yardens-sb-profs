(version 1)
(deny default)
(allow device-camera)
(allow device-microphone)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.tcc.kTCCServicePhotos'")
				(require-any
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(extension "b'com.apple.avasset.read-only'")
						(extension-class "com.apple.mediaserverd.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath "/private/var/tmp/com.apple.messages")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
					(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
					(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
					(subpath-prefix "${HOME}/Library/MessagesMetaData")
					(subpath-prefix "${HOME}/Library/SMS")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/private/var/tmp/com.apple.messages")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
					(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
					(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
					(subpath-prefix "${HOME}/Library/MessagesMetaData")
					(subpath-prefix "${HOME}/Library/SMS")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath "/private/var/tmp/com.apple.messages")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
					(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
					(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
					(subpath-prefix "${HOME}/Library/MessagesMetaData")
					(subpath-prefix "${HOME}/Library/SMS")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/private/var/tmp/com.apple.messages")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
					(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
					(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
					(subpath-prefix "${HOME}/Library/MessagesMetaData")
					(subpath-prefix "${HOME}/Library/SMS")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.identityservices.send")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(subpath-prefix "${HOME}/Library/SMS")))
			(require-all
				(entitlement-is-bool-true 124)
				(require-any
					(entitlement-is-bool-true 129)
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present 233)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))
(allow file-ioctl
	(subpath-prefix "${HOME}/Library/SMS")
	(require-all
		(subpath-prefix "${HOME}/Media")
		(process-attribute is-apple-signed-executable)))
(allow file-issue-extension)
(allow file-mount
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
			(subpath "/private/var/tmp/com.apple.messages")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
			(subpath "/usr/lib")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(subpath-prefix "${HOME}/Library/CallHistoryDB")
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/MDM.plist")
			(subpath-prefix "${HOME}/Library/AddressBook")
			(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
			(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
			(literal-prefix "${HOME}/Library/Logs/MobileBackup/MobileBackup-imagent.log")
			(subpath-prefix "${HOME}/Media/Purchases")
			(subpath-prefix "${HOME}/Library/SMS")
			(subpath "/usr/share")
			(subpath-prefix "${HOME}/Library/MessagesMetaData")
			(subpath "/System/Library")
			(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(subpath-prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(require-any
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/System")
							(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
							(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
							(subpath "/private/preboot/Cryptexes")
							(literal "/dev/null")
							(entitlement-is-bool-true 129)
							(literal "/dev/aes_0")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(literal "/")
							(literal "/private/preboot")
							(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
							(subpath "/private/var/db/datadetectors/sys")
							(literal "/dev/dtracehelper")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
							(literal "/dev/zero")
							(literal "/dev/random")
							(entitlement-is-bool-true 129)
							(literal "/dev/urandom")
							(subpath-prefix "${HOME}")
							(subpath-prefix "${HOME}/Library/Fonts")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(literal "/private")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imagent")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imagent"))
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
							(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
							(subpath "/System/Cryptexes")
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
								(extension "b'com.apple.identityservices.deliver'"))
							(require-all
								(entitlement-is-bool-true 3206)
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
									(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(entitlement-is-bool-true 408)
								(require-any
									(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
									(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
							(require-all
								(uid 0)
								(literal "/private/etc/master.passwd"))
							(require-all
								(entitlement-is-bool-true 124)
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(require-any
									(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Data/System/")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(extension "b'com.apple.sandbox.system-group'")
								(entitlement-is-present 190)
								(entitlement-is-present 233))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present 190)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
									(require-all
										(entitlement-is-present 233)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
							(require-all
								(entitlement-is-bool-true 511)
								(extension "b'com.apple.logd.read-only'")
								(require-any
									(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
									(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(literal "/private")
									(subpath "/Developer")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Library/PrivateFrameworks")
									(literal "/private/etc/passwd")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
									(literal "/private/etc/services")
									(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
									(subpath "/System/Library/Frameworks")
									(literal "/System")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/private/etc/hosts")
									(subpath "/private/preboot/Cryptexes")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
									(literal "/")
									(literal "/private/etc/fstab")
									(literal "/private/preboot")
									(subpath "/System/Developer")
									(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
											(subpath "/usr/libexec")
											(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
											(require-all
												(subpath "/usr/local/libexec")
												(debug-mode))))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/usr/local")
											(subpath "/AppleInternal")
											(subpath "/usr/appleinternal")))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
										(require-any
											(entitlement-is-bool-true 290)
											(entitlement-is-bool-true 297)))
									(require-all
										(entitlement-is-present 305)
										(subpath "/private/var/OOPJit")
										(extension "b'com.apple.sandbox.oopjit'"))))))))
			(require-all
				(subpath-prefix "${HOME}/Media")
				(require-any
					(require-all
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
							(extension "b'com.apple.avasset.read-only'")
							(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
							(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
							(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
							(subpath-prefix "${HOME}/Media/PhotoStreamsData")
							(subpath-prefix "${HOME}/Media/DCIM")
							(require-all
								(process-attribute is-platform-binary)
								(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
					(require-all
						(require-not (literal "/usr/sbin/fairplayd"))
						(require-any
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/System")
							(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
							(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
							(subpath "/private/preboot/Cryptexes")
							(literal "/dev/null")
							(entitlement-is-bool-true 129)
							(literal "/dev/aes_0")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(literal "/")
							(literal "/private/preboot")
							(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
							(subpath "/private/var/db/datadetectors/sys")
							(literal "/dev/dtracehelper")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
							(literal "/dev/zero")
							(literal "/dev/random")
							(entitlement-is-bool-true 129)
							(literal "/dev/urandom")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
							(subpath-prefix "${HOME}/Library/Fonts")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(literal "/private")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imagent")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imagent"))
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
							(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
							(subpath "/System/Cryptexes")
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
								(extension "b'com.apple.identityservices.deliver'"))
							(require-all
								(entitlement-is-bool-true 3206)
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
									(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(entitlement-is-bool-true 408)
								(require-any
									(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
									(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
							(require-all
								(uid 0)
								(literal "/private/etc/master.passwd"))
							(require-all
								(entitlement-is-bool-true 124)
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(require-any
									(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Data/System/")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(extension "b'com.apple.sandbox.system-group'")
								(entitlement-is-present 190)
								(entitlement-is-present 233))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present 190)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
									(require-all
										(entitlement-is-present 233)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
							(require-all
								(entitlement-is-bool-true 511)
								(extension "b'com.apple.logd.read-only'")
								(require-any
									(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
									(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(literal "/private")
									(subpath "/Developer")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Library/PrivateFrameworks")
									(literal "/private/etc/passwd")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
									(literal "/private/etc/services")
									(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
									(subpath "/System/Library/Frameworks")
									(literal "/System")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/private/etc/hosts")
									(subpath "/private/preboot/Cryptexes")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
									(literal "/")
									(literal "/private/etc/fstab")
									(literal "/private/preboot")
									(subpath "/System/Developer")
									(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
											(subpath "/usr/libexec")
											(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
											(require-all
												(subpath "/usr/local/libexec")
												(debug-mode))))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/usr/local")
											(subpath "/AppleInternal")
											(subpath "/usr/appleinternal")))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
										(require-any
											(entitlement-is-bool-true 290)
											(entitlement-is-bool-true 297)))
									(require-all
										(entitlement-is-present 305)
										(subpath "/private/var/OOPJit")
										(extension "b'com.apple.sandbox.oopjit'"))))))))
			(require-all
				(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
				(require-not (literal "/usr/sbin/fairplayd"))
				(require-any
					(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
					(literal "/System")
					(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
					(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
					(subpath "/private/preboot/Cryptexes")
					(literal "/dev/null")
					(entitlement-is-bool-true 129)
					(literal "/dev/aes_0")
					(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(literal "/")
					(literal "/private/preboot")
					(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
					(subpath "/private/var/db/datadetectors/sys")
					(literal "/dev/dtracehelper")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
					(literal "/dev/zero")
					(literal "/dev/random")
					(entitlement-is-bool-true 129)
					(literal "/dev/urandom")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
					(subpath-prefix "${HOME}/Library/Fonts")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
					(literal "/private")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imagent")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imagent"))
					(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
					(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
					(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
					(subpath "/System/Cryptexes")
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension "b'com.apple.identityservices.deliver'"))
					(require-all
						(entitlement-is-bool-true 3206)
						(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
						(require-any
							(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
							(subpath-prefix "${HOME}/Library/AddressBook")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(entitlement-is-bool-true 408)
						(require-any
							(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
							(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
					(require-all
						(uid 0)
						(literal "/private/etc/master.passwd"))
					(require-all
						(entitlement-is-bool-true 124)
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Data/System/")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(extension "b'com.apple.sandbox.system-group'")
						(entitlement-is-present 190)
						(entitlement-is-present 233))
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present 190)
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
							(require-all
								(entitlement-is-present 233)
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-bool-true 511)
						(extension "b'com.apple.logd.read-only'")
						(require-any
							(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
							(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE)
						(require-any
							(literal "/private")
							(subpath "/Developer")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(subpath "/System/Library/PrivateFrameworks")
							(literal "/private/etc/passwd")
							(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
							(literal "/private/etc/services")
							(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
							(subpath "/System/Library/Frameworks")
							(literal "/System")
							(subpath "/System/Cryptexes")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/private/etc/hosts")
							(subpath "/private/preboot/Cryptexes")
							(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
							(literal "/")
							(literal "/private/etc/fstab")
							(literal "/private/preboot")
							(subpath "/System/Developer")
							(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
									(subpath "/usr/libexec")
									(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
									(require-all
										(subpath "/usr/local/libexec")
										(debug-mode))))
							(require-all
								(debug-mode)
								(require-any
									(subpath "/usr/local")
									(subpath "/AppleInternal")
									(subpath "/usr/appleinternal")))
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
								(require-any
									(entitlement-is-bool-true 290)
									(entitlement-is-bool-true 297)))
							(require-all
								(entitlement-is-present 305)
								(subpath "/private/var/OOPJit")
								(extension "b'com.apple.sandbox.oopjit'")))))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read*
	(vnode-type SYMLINK)
	(subpath "/private/var/tmp/com.apple.messages")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
	(literal-prefix "${HOME}/Library/Logs/MobileBackup")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
	(literal-prefix "${HOME}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal-prefix "${HOME}/Library/Caches")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
	(entitlement-is-bool-true 129)
	(literal-prefix "${HOME}/Library/Preferences")
	(subpath-prefix "${HOME}/Library/SMS")
	(literal "/private/var/run/syslog")
	(subpath-prefix "${HOME}/Library/MessagesMetaData")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(vnode-type DIRECTORY)
	(require-all
		(entitlement-is-bool-true 124)
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-container'"))
	(require-all
		(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(entitlement-is-present 190)
			(entitlement-is-present 233)))
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal-prefix "${HOME}")))
(allow file-revoke)
(allow file-test-existence
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.imagent")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.imagent"))
	(subpath "/private/var/tmp/com.apple.messages")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]MobileSMS/?")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.MobileSMS")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-any (subpath "/private/var/tmp/com.apple.MobileSMS")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.MobileSMS"))
	(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.messages")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(subpath-prefix "${HOME}/Library/SMS")
	(subpath-prefix "${HOME}/Library/MessagesMetaData")
	(literal-prefix "${HOME}/Library/Logs/MobileBackup/MobileBackup-imagent.log")
	(entitlement-is-bool-true 129)
	(require-all
		(entitlement-is-bool-true 3206)
		(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
		(require-any
			(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(literal-prefix "${HOME}/Library/AddressBook/")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS")))))
	(require-all
		(vnode-type REGULAR-FILE)
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
	(require-all
		(vnode-type DIRECTORY)
		(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.MobileSMS"))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/com.apple.MobileSMS$"))
	(require-all
		(entitlement-is-bool-true 124)
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present 190)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present 233)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-write*
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(literal-prefix "${HOME}/Library/Logs/MobileBackup")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
			(literal-prefix "${HOME}/Library/Caches")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}"))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/null")
			(literal "/dev/dtracehelper"))))
(allow file-write-setugid
	(entitlement-is-present 305)
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension "b'com.apple.identityservices.deliver'")
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices"))
	(require-all
		(extension "b'com.apple.sandbox.oopjit'")
		(subpath "/private/var/OOPJit")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true 124)
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present 233)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow iokit-open*)
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-all
		(require-not (xpc-service-name "com.apple.WebKit."))
		(require-any
			(global-name "com.apple.spotlight.IndexDelegateAgent")
			(global-name "com.apple.SystemConfiguration.configd")
			(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
			(global-name "com.apple.accountsd.accountmanager")
			(global-name "com.apple.FileCoordination")
			(global-name "com.apple.wifi.manager")
			(global-name "com.apple.rtcreportingd")
			(global-name "com.apple.imdpersistence.IMDPersistenceAgent")
			(global-name "com.apple.CellularPlanDaemon.xpc")
			(global-name "com.apple.dmd.policy")
			(global-name "com.apple.passd.in-app-payment")
			(xpc-service-name "com.apple.extensionkitservice")
			(global-name "com.apple.apsd")
			(global-name "com.apple.SBUserNotification")
			(global-name "com.apple.system.libinfo.muser")
			(global-name "com.apple.system.logger")
			(global-name "com.apple.assetsd.changehub")
			(global-name "com.apple.telephonyutilities.callservicesdaemon.callprovidermanager")
			(global-name "com.apple.springboard.backgroundappservices")
			(extension "b'com.apple.pluginkit.plugin-service'")
			(require-any (global-name "com.apple.nsurlsessiond.NSURLSessionProxyService")
(global-name "com.apple.telephonyutilities.callservicesdaemon.callhistorymanager"))
			(global-name "com.apple.protectedcloudstorage.protectedcloudkeysyncing")
			(global-name "com.apple.marco")
			(global-name "com.apple.trustd")
			(global-name "com.apple.ckdiscretionaryd")
			(global-name "com.apple.siri.vocabularyupdates")
			(global-name "com.apple.backupd")
			(global-name "com.apple.lsd.openurl")
			(global-name "com.apple.springboard.services")
			(global-name "com.apple.analyticsd")
			(global-name "com.apple.hsa-authentication-server")
			(global-name "com.apple.FSEvents")
			(global-name "com.apple.ctkd.token-client")
			(global-name "com.apple.photos.service")
			(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
			(global-name "com.apple.usernotifications.usernotificationservice")
			(global-name "com.apple.cache_delete")
			(global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller")
			(global-name "com.apple.awdd")
			(global-name "com.apple.managedconfiguration.profiled.public")
			(global-name "com.apple.carkit.dnd.service")
			(global-name "com.apple.managedconfiguration.profiled")
			(global-name "com.apple.spotlight.IndexAgent")
			(global-name "com.apple.cloudd")
			(global-name "com.apple.CoreAuthentication.daemon")
			(global-name "com.apple.iokit.powerdxpc")
			(global-name "com.apple.mobilegestalt.xpc")
			(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
			(global-name "com.apple.pairedsyncd.syncstate")
			(global-name "com.apple.PowerManagement.control")
			(global-name "com.apple.lsd.mapdb")
			(global-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.identityservicesd.embedded.auth")
			(xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent")
			(global-name "com.apple.distributed_notifications@1v3")
			(global-name "com.apple.lsd.open")
			(global-name "com.apple.mobilecheckpoint.checkpointd")
			(global-name "com.apple.logd")
			(global-name "com.apple.ABDatabaseDoctor")
			(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
			(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
			(global-name "com.apple.imtransferservices.IMTransferAgent")
			(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
			(xpc-service-name "com.apple.ImageIOXPCService")
			(global-name "com.apple.tccd")
			(global-name "com.apple.commcenter.coretelephony.xpc")
			(global-name "com.apple.lsd.advertisingidentifiers")
			(global-name "com.apple.audio.SystemSoundServer-iOS")
			(global-name "com.apple.containermanagerd")
			(global-name "com.apple.usernotifications.listener")
			(global-name "com.apple.containermanagerd.system")
			(global-name "com.apple.callkit.callcontrollerhost")
			(global-name "com.apple.frontboard.systemappservices")
			(global-name "com.apple.cmfsyncagent.embedded.auth")
			(local-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.aggregated")
			(global-name "com.apple.duetknowledged.activity")
			(global-name "com.apple.ckdiscretionaryd.debug")
			(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
			(global-name "com.apple.cloudkit.partlycloudd")
			(global-name "com.apple.securityd")
			(global-name "com.apple.diagnosticd")
			(global-name "com.apple.dmd.emergency-mode")
			(global-name "com.apple.powerlog.plxpclogger.xpc")
			(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
			(global-name "com.apple.logd.events")
			(global-name "com.apple.telephonyutilities.callservicesdaemon.conversationmanager")
			(global-name "com.apple.icloud.fmfd")
			(global-name "com.apple.runningboard")
			(global-name "com.apple.usernotifications.remotenotificationservice")
			(global-name "com.apple.commcenter.xpc")
			(global-name "com.apple.identityservicesd.idquery.embedded.auth")
			(global-name "com.apple.contactsd")
			(global-name "com.apple.pluginkit.pkd")
			(global-name "com.apple.nanoprefsync")
			(require-all
				(extension "b'com.apple.tcc.kTCCServicePhotos'")
				(require-any
					(global-name "com.apple.itunescloudd.xpc")
					(global-name "com.apple.itunesstored.xpc")
					(global-name "com.apple.airplay.apsynccontroller.xpc")
					(global-name "com.apple.audio.AudioSession")
					(global-name "com.apple.audioanalyticsd")
					(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
					(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
					(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
					(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
					(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
					(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
					(global-name "com.apple.coremedia.systemcontroller.xpc")
					(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
					(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
					(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
					(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
					(global-name "com.apple.coremedia.videocompositor")
					(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
					(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
					(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
					(global-name "com.apple.coremedia.sts")
					(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
					(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
					(global-name "com.apple.coremedia.sandboxserver.xpc")
					(global-name "com.apple.timesync.ptp.manager")
					(global-name "com.apple.mediaserverd")
					(global-name "com.apple.coremedia.admin")
					(global-name "com.apple.coremedia.asset.xpc")
					(global-name "com.apple.coremedia.visualcontext.xpc")
					(global-name "com.apple.coremedia.assetimagegenerator.xpc")
					(global-name "com.apple.pegasus")
					(global-name "com.apple.coremedia.routingcontext.xpc")
					(global-name "com.apple.coremedia.bytestream.xpc")
					(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
					(global-name "com.apple.coremedia.sandboxserver")
					(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
					(global-name "com.apple.coremedia.customurlloader.xpc")
					(global-name "com.apple.coremedia.endpoint.xpc")
					(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
					(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
					(global-name "com.apple.privacyaccountingd")
					(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
					(global-name "com.apple.coremedia.figcontentkeysession.xpc")
					(global-name "com.apple.coremedia.formatreader.xpc")
					(global-name "com.apple.coremedia.player.xpc")))
			(require-all
				(local-name-regex #".+")
				(extension "b'com.apple.security.exception.mach-lookup.local-name'"))
			(require-all
				(extension "b'com.apple.security.exception.mach-lookup.global-name'")
				(global-name-regex #".+"))
			(require-all
				(xpc-service-name "com.apple.WebKit.")
				(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
				(require-any
					(xpc-service-name-regex #".+")
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-any
							(global-name "com.apple.datamigrator")
							(global-name "com.apple.Honeybee.event-notify")
							(global-name "com.apple.mobile.usermanagerd.xpc")
							(global-name "com.apple.SharedWebCredentials")))))
			(require-all
				(global-name "com.apple.coreduetd.people")
				(entitlement-is-bool-true 408))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true 761))
			(require-all
				(global-name "com.apple.osanalytics.osanalyticshelper")
				(process-attribute is-apple-signed-executable)))))
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow opendirectory-user-modify)
(allow process-fork)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set
	(c1 5a09 6fbc 6fbb)
	(require-all
		(syscall-number SYS_memorystatus_control)
		(debug-mode)))
(allow syscall*)
(allow syscall-unix)
(allow system-automount)
(allow system-debug
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 73)))
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
(allow system-swap
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.MobileSMS")
	(preference-domain "com.apple.AppSupport")
	(require-any (preference-domain "com.apple.sms")
(preference-domain "com.apple.imservice.")
(preference-domain "com.apple.imdbadgeutilities")
(preference-domain "com.apple.iChatAgent")
(preference-domain "com.apple.MobileSMSPreview")
(preference-domain "com.apple.mobileSMS")
(preference-domain "com.apple.messages.commsafety")
(preference-domain "com.apple.messages.statistics")
(preference-domain "com.apple.messages.AttachmentsAutomation"))
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.imdsmsrecordstore")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.mmcs")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.mms_override")
	(preference-domain "com.apple.messages")
	(preference-domain "com.apple.coremedia")
	(require-any (preference-domain "com.apple.private.dmd.policy")
(preference-domain "com.apple.vehiclePolicy.DNDMode")
(preference-domain "com.apple.messages.IMCoreAutomation"))
	(preference-domain "com.apple.messages.nicknames")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.operator")
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.madrid")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.imagent")
	(preference-domain "com.apple.ImageIO")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.purplebuddy.notbackedup")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.pairedsyncd")
	(preference-domain "com.apple.ids.debug")
	(preference-domain "com.apple.Messages")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.registration")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.IMCoreSpotlight")
	(require-all
		(extension "b'com.apple.tcc.kTCCServicePhotos'")
		(require-any
			(preference-domain "com.apple.mobileipod")
			(preference-domain "com.apple.avfoundation")
			(preference-domain "com.apple.corevideo")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true 2843)
				(process-attribute is-apple-signed-executable))))
	(require-all
		(preference-domain "com.apple.security")
		(process-attribute is-apple-signed-executable)))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-read
	(preference-domain "com.apple.MobileSMS")
	(require-any (preference-domain "com.apple.sms")
(preference-domain "com.apple.imservice.")
(preference-domain "com.apple.imdbadgeutilities")
(preference-domain "com.apple.iChatAgent")
(preference-domain "com.apple.MobileSMSPreview")
(preference-domain "com.apple.mobileSMS")
(preference-domain "com.apple.messages.commsafety")
(preference-domain "com.apple.messages.statistics")
(preference-domain "com.apple.messages.AttachmentsAutomation"))
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.ids.debug")
	(preference-domain "com.apple.messages")
	(preference-domain "com.apple.messages.nicknames")
	(preference-domain "com.apple.IMCoreSpotlight")
	(preference-domain "com.apple.madrid")
	(preference-domain "com.apple.imagent")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.Messages")
	(preference-domain "com.apple.facetime.bag"))
