(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
	(subpath-prefix "${HOME}/Library/Mobile Documents")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/private/var/tmp/MediaCache")
					(subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")
					(subpath "/System/Library")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(literal-prefix "${HOME}/Library/SpringBoard")
					(require-any (subpath "/private/var/MobileAsset/AssetsV2")
(subpath "/private/var/MobileAsset/Assets"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any (subpath "/private/var/MobileAsset/AssetsV2")
(subpath "/private/var/MobileAsset/Assets")))
			(require-all
				(subpath-prefix "${HOME}/Library/Cookies")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath-prefix "${HOME}/Media/Debug")
					(subpath-prefix "${HOME}/Media/MediaAnalysis")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
					(subpath-prefix "${HOME}/Media/PhotoData")
					(subpath-prefix "${HOME}/Media/Memories")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
					(subpath-prefix "${HOME}/Library/Cookies")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(subpath-prefix "${HOME}/Media/DCIM")
					(subpath-prefix "${HOME}/Media/Photos")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.sandbox.application-group'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Media/Debug")
					(subpath-prefix "${HOME}/Media/MediaAnalysis")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
					(subpath-prefix "${HOME}/Media/PhotoData")
					(subpath-prefix "${HOME}/Media/Memories")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
					(subpath-prefix "${HOME}/Library/Cookies")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(subpath-prefix "${HOME}/Media/DCIM")
					(subpath-prefix "${HOME}/Media/Photos")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.sandbox.application-group'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Media/Debug")
					(subpath-prefix "${HOME}/Media/MediaAnalysis")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
					(subpath-prefix "${HOME}/Media/PhotoData")
					(subpath-prefix "${HOME}/Media/Memories")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
					(subpath-prefix "${HOME}/Library/Cookies")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(subpath-prefix "${HOME}/Media/DCIM")
					(subpath-prefix "${HOME}/Media/Photos")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.sandbox.application-group'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Media/Debug")
					(subpath-prefix "${HOME}/Media/MediaAnalysis")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
					(subpath-prefix "${HOME}/Media/PhotoData")
					(subpath-prefix "${HOME}/Media/Memories")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
					(subpath-prefix "${HOME}/Library/Cookies")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(subpath-prefix "${HOME}/Media/DCIM")
					(subpath-prefix "${HOME}/Media/Photos")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.sandbox.application-group'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension-class "com.apple.wcd.readonly")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(require-all
						(literal "/private/var/")
						(extension "b'com.apple.sandbox.application-group'")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension "b'com.apple.odr-assets'")
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")
							(require-all
								(extension "b'com.apple.assets.read'")
								(require-any
									(subpath "/private/var/MobileAsset")
									(subpath-prefix "${HOME}/Library/Assets")))))))
			(require-all
				(extension-class "com.apple.spotlight-indexable")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension "b'com.apple.app-sandbox.read-write'")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(extension "b'com.apple.sandbox.application-group'")
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension "b'com.apple.odr-assets'")
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")
							(require-all
								(extension "b'com.apple.assets.read'")
								(require-any
									(subpath "/private/var/MobileAsset")
									(subpath-prefix "${HOME}/Library/Assets")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
						(extension "b'com.apple.tcc.kTCCServicePhotos'"))
					(require-all
						(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
						(extension "b'com.apple.tcc.kTCCServicePhotos'"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension "b'com.apple.odr-assets'")
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")
							(require-all
								(extension "b'com.apple.assets.read'")
								(require-any
									(subpath "/private/var/MobileAsset")
									(subpath-prefix "${HOME}/Library/Assets")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(require-all
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(extension "b'com.apple.avasset.read-only'"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
								(extension "b'com.apple.clouddocs.version'"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
								(extension "b'com.apple.clouddocs.version'"))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/private/var/tmp/MediaCache")
					(subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")))
			(require-all
				(subpath-prefix "${HOME}/Media/Debug")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes")))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(subpath-prefix "${HOME}/Media"))
			(require-all
				(subpath-prefix "${HOME}/Media/MediaAnalysis")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(subpath-prefix "${HOME}/Media/PhotoData")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.fileprovider.read-write'")
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/private/preboot/Cryptexes")
							(subpath "/System/Cryptexes")))))
			(require-all
				(subpath-prefix "${HOME}/Media/Memories")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.fileprovider.read-write'")
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/private/preboot/Cryptexes")
							(subpath "/System/Cryptexes")))))
			(require-all
				(subpath-prefix "${HOME}/Media/DCIM")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(subpath-prefix "${HOME}/Media/Photos")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(subpath-prefix "${HOME}/Media/PhotoStreamsData")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.app-sandbox.read")))))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
(allow file-ioctl
	(require-not (subpath-prefix "${HOME}/Library/AddressBook")))
(allow file-issue-extension)
(allow file-mount
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(subpath-prefix "${HOME}/Library/Fonts")
			(literal "/AppleInternal/Library/Preferences/com.apple.airplay.dashboard.plist")
			(subpath "/usr/lib")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(require-any (subpath-prefix "${HOME}/Library/Siri")
(literal-prefix "${HOME}/Library/SpringBoard")
(subpath-prefix "${HOME}/Library/Application Support/MobileSlideShow")
(subpath-prefix "${HOME}/Library/Application Support/iLifePageLayout")
(subpath-prefix "${HOME}/Library/Caches/com.apple.legacycamera")
(subpath-prefix "${HOME}/Library/Caches/com.apple.springboard.sharedimagecache/Wallpaper")
(literal-prefix "${HOME}/Library/Logs/MobileSlideShow.log")
(literal-prefix "${HOME}/Library/Logs/awd/awdComponent0x19.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-Camera.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-MobileSlideShow.log"))
			(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
			(subpath "/System/Library")
			(subpath "/usr/share")
			(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup")
			(subpath-prefix "${HOME}/Library/SMS")
			(literal-prefix "${HOME}/Library/Logs/awd")
			(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos")
			(subpath-prefix "${HOME}/Library/Cookies")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(literal "/private/var/preferences/com.apple.security.plist")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(subpath-prefix "${HOME}/Library/Cookies")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-any
							(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunes Library.itlp$")
							(regex #"^/private/var/mobile/Library/SpringBoard/Lock.+" #"^/private/var/mobile/Library/SpringBoard/.+Lock.+" #"^/private/var/mobile/Library/SpringBoard/Home.+" #"^/private/var/mobile/Library/SpringBoard/.+Home.+" #"^/private/var/euser[0-9]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/[-0-9A-F]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/Users/[^/]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+")
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
						(subpath-prefix "${HOME}"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
				(require-any
					(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
					(subpath-prefix "${HOME}/Library/AddressBook")
					(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
				(process-attribute is-apple-signed-executable))
			(require-all
				(entitlement-is-present "b'com.apple.private.networkextension.configuration'")
				(literal "/private/var/preferences/com.apple.networkextension.plist"))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
						(subpath-prefix "${HOME}")
						(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
						(subpath-prefix "${HOME}")
						(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))))
			(require-all
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
					(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
					(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
					(subpath "/private/var/containers/Data/System/com.apple.geod")
					(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
					(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(literal "/private/var/preferences/com.apple.security.plist")
					(literal "/private/var/db/com.apple.networkextension.tracker-info")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
					(subpath-prefix "${HOME}/Library/Fonts")
					(subpath "/Library/Audio/Tunings/Generic/Haptics")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
					(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
					(require-all
						(process-attribute is-apple-signed-executable)
						(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
					(require-all
						(extension "b'com.apple.fileprovider.read-write'")
						(require-any
							(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(subpath-prefix "${HOME}/Library/ReplayKit")
						(extension "b'com.apple.replayd.read-only'"))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
						(extension "b'com.apple.Pasteboard-readonly'"))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(extension "b'com.apple.odr-assets'")
						(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
					(require-all
						(extension "b'com.apple.assets.read'")
						(require-any
							(subpath "/private/var/MobileAsset")
							(subpath-prefix "${HOME}/Library/Assets")))
					(require-all
						(extension "b'com.apple.clouddocs.version'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any (subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$"))))
					(require-all
						(extension "b'com.apple.classkit.read-write'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(require-not (subpath "/System/Library/Carrier Bundles"))
						(require-not (subpath-prefix "${HOME}/Library/Carrier Bundles"))
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(subpath "/private/var/tmp/MediaCache")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${PROCESS_TEMP_DIR}/MediaCache")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(literal "/private")
							(require-any (subpath "/AppleInternal/Library/Frameworks/RadarCompose.framework")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.camera.plist")
(literal-prefix "${HOME}/Library/SyncedPreferences/com.apple.mobileslideshow.plist"))
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
							(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(subpath-prefix "${HOME}/Library/WebClips")
							(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
							(subpath-prefix "${HOME}/Media/MediaAnalysis")
							(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
							(subpath "/private/var/tmp")
							(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
							(subpath-prefix "${HOME}/Media/PhotoData")
							(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
							(subpath-prefix "${PROCESS_TEMP_DIR}")
							(subpath-prefix "${HOME}/Media/Memories")
							(subpath "/System/Cryptexes")
							(literal "/private/preboot")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(subpath-prefix "${HOME}/Media/DCIM")
							(literal "/System")
							(subpath-prefix "${HOME}/Library/Cookies")
							(subpath-prefix "${HOME}/Media/Photos")
							(subpath "/private/preboot/Cryptexes")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(subpath-prefix "${HOME}/Media/PhotoStreamsData")
							(subpath-prefix "${HOME}/Media/Purchases")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
							(literal "/")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'")
								(literal "/private/var/preferences/com.apple.networkextension.plist"))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-any
									(subpath-prefix "${HOME}/Media/Safari")
									(subpath-prefix "${HOME}/Media/Debug")
									(require-all
										(extension "b'com.apple.tcc.kTCCServicePhotos'")
										(require-any
											(extension "b'com.apple.avasset.read-only'")
											(subpath-prefix "${HOME}/Media/DCIM")
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
											(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
											(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
											(subpath-prefix "${HOME}/Media/PhotoStreamsData")))
									(require-all
										(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
										(require-any
											(require-not (process-attribute is-platform-binary))
											(extension "b'com.apple.tcc.kTCCServicePhotos'")))))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any
									(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
							(require-all
								(vnode-type DIRECTORY)
								(require-any
									(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera"))))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(require-any
											(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.mobileslideshow-.+[.]plist")
											(regex #"^/private/var/mobile/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/euser[0-9]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/[-0-9A-F]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist" #"^/private/var/Users/[^/]+/Library/SyncedPreferences/com.apple.camera-.+[.]plist")
											(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
											(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
											(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")))))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(require-all (require-not (literal "/usr/sbin/fairplayd"))
(require-not (subpath-prefix "${HOME}/Library/FairPlay")))
								(require-any
									(literal "/private")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/System")
									(subpath "/private/preboot/Cryptexes")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(literal "/")
									(literal "/private/preboot")
									(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
									(literal "/dev/null")
									(literal "/dev/aes_0")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
									(literal "/dev/urandom")
									(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
									(subpath "/private/var/db/datadetectors/sys")
									(literal "/dev/dtracehelper")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
									(literal "/dev/zero")
									(literal "/dev/random")
									(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(require-all
										(uid 0)
										(literal "/private/etc/master.passwd"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
										(require-any
											(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
											(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
											(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
											(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(entitlement-is-bool-true "b'com.apple.security.system-container'")
										(extension "b'com.apple.sandbox.system-container'")
										(require-not (regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple."))
										(require-any
											(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Data/System/")
												(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
									(require-all
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(extension "b'com.apple.sandbox.system-group'")
										(require-not (entitlement-is-present "b'com.apple.security.system-groups'"))
										(require-not (entitlement-is-present "b'com.apple.security.system-group-containers'")))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
										(extension "b'com.apple.logd.read-only'")
										(require-any
											(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
											(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
									(require-all
										(require-not (vnode-type BLOCK-DEVICE))
										(require-not (vnode-type CHARACTER-DEVICE))
										(require-any
											(literal "/private")
											(subpath "/Developer")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Library/PrivateFrameworks")
											(literal "/private/etc/passwd")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
											(literal "/private/etc/services")
											(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
											(subpath "/System/Library/Frameworks")
											(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(literal "/private/etc/hosts")
											(subpath "/private/preboot/Cryptexes")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
											(literal "/")
											(literal "/private/etc/fstab")
											(literal "/private/preboot")
											(subpath "/System/Developer")
											(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
													(subpath "/usr/libexec")
													(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
													(require-all
														(subpath "/usr/local/libexec")
														(debug-mode))))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/usr/local")
													(subpath "/AppleInternal")
													(subpath "/usr/appleinternal")))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/AppleInternal")
													(subpath "/usr/local/lib")))
											(require-all
												(require-not (subpath-prefix "${ANY_USER_HOME}/Containers"))
												(require-not (subpath "/private/var/containers"))
												(require-not (subpath-prefix "${ANY_USER_HOME}/Library")))
											(require-all
												(subpath "/private/var/OOPJit")
												(extension "b'com.apple.sandbox.oopjit'"))))
									(require-all
										(extension "b'com.apple.sandbox.system-group'")
										(require-any
											(require-all
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
											(require-all
												(entitlement-is-present "b'com.apple.security.system-group-containers'")
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read*
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/HTTPStorages")
	(subpath-prefix "${HOME}/Media/Debug")
	(require-any (literal-prefix "${HOME}/Library/Siri")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(require-any (literal-prefix "${HOME}/Library/Caches/Snapshots")
(literal-prefix "${HOME}/Library/Saved Application State")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState"))
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
	(literal-prefix "${HOME}/Library/Mobile Documents")
	(subpath-prefix "${HOME}/Media/MediaAnalysis")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
	(subpath-prefix "${HOME}/Media/PhotoData")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter")
	(literal-prefix "${HOME}")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library")
	(subpath-prefix "${HOME}/Media/Memories")
	(literal-prefix "${HOME}/Library/Caches")
	(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(subpath-prefix "${HOME}/Library/Cookies")
	(extension "b'com.apple.app-sandbox.read-write'")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${HOME}/Library/Preferences")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
	(subpath-prefix "${HOME}/Media/DCIM")
	(subpath-prefix "${HOME}/Media/Photos")
	(literal-prefix "${HOME}/Library")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(require-not (vnode-type DIRECTORY))
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-not (regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
	(require-not (extension "b'com.apple.sandbox.system-group'"))
	(entitlement-is-present "b'com.apple.security.system-groups'")
	(entitlement-is-present "b'com.apple.security.system-group-containers'")
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-any
					(process-attribute is-apple-signed-executable)
					(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
					(literal-prefix "${HOME}/Library/Mobile Documents")
					(literal-prefix "${HOME}/Library/Logs/CrashReporter")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
					(require-any (literal-prefix "${HOME}/Media/Memories")
(literal-prefix "${HOME}/Media/MediaAnalysis"))))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
		(process-attribute is-apple-signed-executable))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(process-attribute is-apple-signed-executable))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(literal-prefix "${HOME}")
		(require-any
			(extension "b'com.apple.tcc.kTCCServicePhotos'")
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${HOME}")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
			(require-all
				(literal-prefix "${HOME}/Library/Preferences")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(require-any
			(extension "b'com.apple.tcc.kTCCServicePhotos'")
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${HOME}")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
			(require-all
				(literal-prefix "${HOME}/Library/Preferences")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-container'")))
(allow file-read-data
	(literal-prefix "${HOME}/Library/Caches")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'")))))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath-prefix "${HOME}/Library/Siri")
(literal-prefix "${HOME}/Library/SpringBoard")
(subpath-prefix "${HOME}/Library/Application Support/MobileSlideShow")
(subpath-prefix "${HOME}/Library/Application Support/iLifePageLayout")
(subpath-prefix "${HOME}/Library/Caches/com.apple.legacycamera")
(subpath-prefix "${HOME}/Library/Caches/com.apple.springboard.sharedimagecache/Wallpaper")
(literal-prefix "${HOME}/Library/Logs/MobileSlideShow.log")
(literal-prefix "${HOME}/Library/Logs/awd/awdComponent0x19.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-Camera.log")
(literal-prefix "${HOME}/Library/Logs/awd/awd-MobileSlideShow.log"))
	(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${HOME}/Library/SMS")
	(subpath-prefix "${HOME}/Library/Cookies")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/Photos")
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-any
			(regex #"^/private/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/DiagnosticLogs/Camera-latest.log")
			(regex #"^/private/var/mobile/Library/SpringBoard/Lock.+" #"^/private/var/mobile/Library/SpringBoard/.+Lock.+" #"^/private/var/mobile/Library/SpringBoard/Home.+" #"^/private/var/mobile/Library/SpringBoard/.+Home.+" #"^/private/var/euser[0-9]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/[-0-9A-F]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+" #"^/private/var/Users/[^/]+/Library/SpringBoard/((.*Lock|Home)|.+Home).+")))
	(require-all
		(vnode-type REGULAR-FILE)
		(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
		(literal-prefix "${HOME}/Library/AddressBook/")
		(extension "b'com.apple.tcc.kTCCServiceAddressBook'"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
		(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
		(extension "b'com.apple.tcc.kTCCServiceAddressBook'"))
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.mobileipod.plist"))
		(require-any
			(literal-prefix "${HOME}/Library/Caches/com.apple.pep.configuration.plist")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.photos.peopleImageCache")
			(require-all
				(literal "/private/var/")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
					(require-all
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.photos.peopleImageCache"))
			(require-all
				(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist"))
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
				(require-any
					(require-any (subpath-prefix "${HOME}/Documents/com.apple.camera.settings")
(subpath-prefix "${HOME}/Documents/com.apple.mobileslideshow.settings")
(subpath-prefix "${HOME}/Library/WebKit")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera-")
(literal-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow-")
(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.mobileslideshow")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState/")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState/"))
					(subpath-prefix "${HOME}/Library/Caches/Snapshots/com.apple.camera")
					(subpath-prefix "${HOME}/Library/WebClips")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.camera")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.mobileslideshow")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.camera"))
					(subpath-prefix "${HOME}/Media/MediaAnalysis")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(subpath "/private/var/tmp")
					(subpath-prefix "${HOME}/Media/PhotoData")
					(subpath-prefix "${HOME}/Media/Photos")
					(subpath-prefix "${HOME}/Media/Memories")
					(subpath-prefix "${HOME}/Media/DCIM")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.mobileslideshow")
					(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")
					(subpath-prefix "${HOME}/Library/Cookies")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(subpath-prefix "${HOME}/Media/Safari")
					(subpath-prefix "${HOME}/Media/Debug")
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.mobileslideshow")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.camera")))
					(require-all
						(process-attribute is-apple-signed-executable)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
					(require-all
						(extension "b'com.apple.classkit.read-write'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(extension "b'com.apple.fileprovider.read-write'")
						(require-any
							(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(vnode-type REGULAR-FILE)
						(extension "b'com.apple.revisiond.staging'")
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")))
					(require-all
						(vnode-type DIRECTORY)
						(extension "b'com.apple.revisiond.staging'")
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")))
					(require-all
						(vnode-type SYMLINK)
						(extension "b'com.apple.revisiond.staging'")
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.security.system-container'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(require-all
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE)
						(literal "/private/var/cores/")
						(regex #"^/private/var/cores/.+[.]core$")
						(process-attribute is-apple-signed-executable))
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
							(require-all
								(entitlement-is-present "b'com.apple.security.system-group-containers'")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))))
(allow file-write*
	(literal-prefix "${HOME}/Library/Logs/awd")
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-any (literal-prefix "${HOME}/Library/Siri")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CloudPhotoLibrary.aslgroup"))
			(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
			(literal-prefix "${HOME}/Library/Logs/CrashReporter")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(literal "/private/var/")
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${HOME}/Library/Caches")
					(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")))
			(require-all
				(require-all (require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist")))
				(require-any
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(literal-prefix "${HOME}/Library/Mobile Documents")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))
					(require-all
						(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
						(vnode-type DIRECTORY)
						(require-any
							(require-any (literal-prefix "${HOME}/Library/Caches/Snapshots")
(literal-prefix "${HOME}/Library/Saved Application State")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.camera[.]savedState")
(regex-prefix #"${HOME}/Library/Saved Application State/com.apple.mobileslideshow[.]savedState"))
							(require-any (literal-prefix "${HOME}/Media/Memories")
(literal-prefix "${HOME}/Media/MediaAnalysis"))
							(literal-prefix "${HOME}/Library/HTTPStorages")
							(literal-prefix "${HOME}/Library/Caches"))))))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/zero")
			(literal "/dev/null"))))
(allow file-write-setugid
	(subpath "/private/var/mnt")
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(extension "b'com.apple.sandbox.oopjit'")
		(subpath "/private/var/OOPJit")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow iokit-issue-extension
	(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
	(iokit-user-client-class "IOGPUDeviceUserClient")
	(iokit-user-client-class "RootDomainUserClient")
	(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "IOSurfaceSendRight")
	(iokit-user-client-class "AGXSharedUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AGXCommandQueue")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
	(require-all
		(process-attribute is-apple-signed-executable)
		(iokit-user-client-class "IOHIDLibUserClient")))
(allow iokit-open*)
(allow iokit-open-user-client
	(require-all
		(require-any (iokit-property "mode")
(iokit-property "useMag"))
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
	(require-all
		(iokit-property "QueueSize")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
	(require-all
		(iokit-property "interval")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
(allow ipc-posix-sem-wait
	(ipc-posix-name "/com.apple.AppSSO.version")
	(ipc-posix-name)
	(ipc-posix-name "apple.cfprefs.")
	(require-all
		(ipc-posix-name "apple.shm.notification_center")
		(require-not (entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))))
(allow ipc-posix-shm-write*
	(ipc-posix-name))
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.fairplayd.versioned")
	(require-any (global-name "AccessibilityDebuggerServices")
(global-name "com.apple.t686.actuationd")
(global-name "com.apple.companion.camera")
(global-name "com.apple.contacts.CNContactsTestsEnvironmentServer")
(global-name "com.apple.xpc.amsengagementd")
(global-name "com.apple.mediaanalysisd.photos")
(global-name "com.apple.sharing.remote-text-editing")
(global-name "com.apple.adid")
(global-name "com.apple.assetsd.nebulad")
(global-name "com.apple.assetsd.keepDaemonAlive")
(global-name "com.apple.rapport.remote-text-input")
(global-name "com.apple.remote-text-editing")
(global-name "com.apple.remote-text-editing-legacy")
(global-name "com.apple.pearld")
(global-name "com.apple.paperboard.services")
(global-name "com.apple.photos.VideoConversionService")
(global-name "com.apple.photos.ImageConversionService")
(global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight")
(global-name "com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite"))
	(global-name "com.apple.coremedia.compressionsession")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.coremedia.videocodecd.decompressionsession")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.accessories.transport-server")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.sociallayerd")
	(global-name "com.apple.coreduetd.context")
	(xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal")
	(require-any (global-name "com.apple.filesystems.userfsd")
(global-name "com.apple.surfboard.applicationservice"))
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(require-any (xpc-service-name "com.apple.WebKit.Networking")
(xpc-service-name "com.apple.WebKit.WebAuthn")
(xpc-service-name "com.apple.WebKit.WebContent"))
	(global-name "com.apple.icloud.fmfd")
	(global-name "com.apple.SystemConfiguration.helper")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.coremedia.decompressionsession")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.lsd.xpc")
	(require-any (global-name "com.apple.coremedia.mutablemovie.xpc")
(global-name "com.apple.coremedia.mutablecomposition.xpc")
(global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc"))
	(global-name "com.apple.contactsd")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc")
	(global-name "com.apple.coremedia.videocodecd.compressionsession")
	(global-name "com.apple.tipsd")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.coreidvd.proofing")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.calaccessd")
	(global-name "com.apple.coremedia.videocodecd.compressionsession.xpc")
	(extension "b'com.apple.sandbox.application-group'")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(xpc-service-name "com.apple.WebKit.GPU")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.mobilemail.services.xpc")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.mediaanalysisd.analysis")
	(global-name "com.apple.internal.studylogd")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.CellularPlanDaemon.xpc")
	(global-name "com.apple.dmd.policy")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.cloudphotod")
	(global-name "com.apple.asd.scoring")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.spotlight.SearchAgent")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.coremedia.sts")
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "PurplePPTServer")
	(global-name "com.apple.parsecd")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.springboard.backgroundappservices")
	(xpc-service-name "com.apple.coremedia.compressionsession.xpc")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.dnssd.service")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.backlightd")
	(xpc-service-name "com.apple.coremedia.decompressionsession.xpc")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(xpc-service-name "com.apple.MTLCompilerService")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.coremedia.mediaplaybackd.videoqueue")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.trustd")
	(xpc-service-name "com.apple.externalaccessory.WACEAService")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.kvsd")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.siri.vocabularyupdates")
	(global-name "com.apple.backupd")
	(global-name "com.apple.mediastream.mstreamd")
	(global-name "com.apple.accessories.externalaccessory-server")
	(global-name "com.apple.accessibility.AXSpringBoardServer")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(local-name "com.apple.iphone.axserver")
	(global-name "com.apple.BarcodeSupport.BarcodeNotificationService")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.cache_delete")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.awdd")
	(global-name "com.apple.suggestd.contacts")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(xpc-service-name "com.apple.siri.context.service")
	(global-name "com.apple.coremedia.videoqueue")
	(require-any (global-name "com.apple.arkit.service.location")
(global-name "com.apple.arkit.service.geoTracking"))
	(xpc-service-name "com.apple.intents.intents-helper")
	(require-any (xpc-service-name "com.apple.OSLogService")
(xpc-service-name "com.apple.mscamerad-xpc")
(xpc-service-name "com.apple.ModelIO.AssetLoader")
(xpc-service-name "com.apple.WorkoutKitXPCService")
(xpc-service-name "com.apple.avkit.SharedPreferences")
(xpc-service-name "com.apple.DocumentManagerCore.Rename")
(xpc-service-name "com.apple.uifoundation-bundle-helper")
(xpc-service-name "com.apple.BarcodeSupport.ParsingService")
(xpc-service-name "com.apple.datadetectors.AddToRecentsService")
(xpc-service-name "com.apple.SafariFoundation.AutoFillHelper")
(xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper"))
	(global-name "com.apple.synapse.backlink-service")
	(require-any (global-name "com.apple.ptpcamerad")
(global-name "com.apple.widget.pushkit")
(global-name "com.apple.relatived.public")
(global-name "com.apple.naturallanguaged")
(global-name "com.apple.translation.text")
(global-name "com.apple.ThreadNetwork.xpc")
(global-name "com.apple.gputools.producer")
(global-name "com.apple.VoiceOverTouch.drag.xpc")
(global-name "com.apple.SensorKit.SKMediaEventsHelper")
(global-name "com.apple.FontServices.FontProviderLoader")
(global-name "com.apple.DragUI.druid.source")
(global-name "com.apple.DragUI.druid.destination")
(global-name "com.apple.storekitservice")
(global-name "com.apple.storekit.configuration.xpc")
(global-name "com.apple.metrickit.xpc")
(global-name "com.apple.metricmeasurement.MetricMeasurementHelper")
(global-name "com.apple.CoreMLModelSecurityService")
(global-name "com.apple.ClockKit.CLKWatchFaceLibrary")
(global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost")
(global-name "com.apple.fullkeyboardaccess.drag.xpc")
(global-name "com.apple.financed.service.financestore")
(global-name "com.apple.homed.xpc.accessory-setup")
(global-name "com.apple.handwritingd.pksettings")
(global-name "com.apple.handwritingd.pkanalytics")
(global-name "com.apple.icprefd-xpc")
(global-name "com.apple.inputservice.keyboardui")
(global-name "com.apple.inputservice.input-ui-host")
(global-name "com.apple.iMessageAppsViewService.warmup-connection")
(global-name "com.apple.assistivetouchd.drag.xpc")
(global-name "com.apple.ap.promotedcontent.attributionservice")
(global-name "com.apple.ap.adprivacyd.attribution")
(global-name "com.apple.ap.adprivacyd.trackingtransparency")
(global-name "com.apple.chrono.widgetcenterconnection")
(global-name "com.apple.corelocation.locationUI")
(global-name "com.apple.commandandcontrol.drag.xpc")
(global-name "com.apple.contactsd.contacts-provider")
(global-name "com.apple.USDLib.FormatLoader")
(global-name "com.apple.USDKit.FormatLoader")
(global-name "com.apple.UIKit.OverlayUI.services")
(global-name "com.apple.UIKit.SecureControlService")
(global-name "com.apple.dasd.end-prewarm")
(global-name "com.apple.dt.xctestd.target")
(global-name "com.apple.dt.testmanagerd.runner")
(global-name "com.apple.dt.testmanagerd.uiprocess")
(global-name "com.apple.donotdisturb.availability.service")
(global-name "com.apple.donotdisturb.appconfiguration.service")
(global-name "com.apple.AppTrackingTransparency.EnforcementService")
(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
	(xpc-service-name "com.apple.accessibility.AccessibilityUIServer")
	(global-name "com.apple.coreduetd.people")
	(global-name "com.apple.sessionservices")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.triald.namespace-management")
	(xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(require-any (global-name "com.apple.cvhwa.xpc")
(global-name "com.apple.Safari.SafeBrowsing.Service"))
	(xpc-service-name "com.apple.textkit.nsattributedstringagent")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.dockaccessoryd")
	(xpc-service-name "com.apple.MTLCompilerService")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.testmanagerd")
	(xpc-service-name "com.apple.accessibility.heard")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.accessibility.heard")
	(global-name "com.apple.nearbyd.xpc.nearbyinteraction")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.storekitd")
	(xpc-service-name "com.apple.AGXCompilerService")
	(xpc-service-name "com.apple.PrintKit.PrinterTool")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.securityd")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.siri.VoiceShortcuts.xpc")
	(global-name "com.apple.sharingd.nsxpc")
	(global-name "com.apple.handwritingd.remoterecognition")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.ind.xpc")
	(global-name "com.apple.duetactivityscheduler")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.diagnosticd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.SiriTTSService.TrialProxy")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.ctkd.slot-client")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.shazamd")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.corespotlightservice")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.mediaanalysisd.analysis")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.symptom_diagnostics")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.cameraviewfinder")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.mediaanalysisd.service.public")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(global-name "com.apple.photoanalysisd")
	(global-name "com.apple.privacyaccountingd")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.trustd")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.webprivacyd")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.AccessibilityUIServer")
	(global-name "com.apple.librariand")
	(global-name "com.apple.synapse.backlink-service")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.businessservicesd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.ScreenTimeAgent")
	(global-name "com.apple.AppSSO.service-xpc")
	(xpc-service-name)
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.ak.authorizationservices.xpc")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.backgroundassets.user")
	(global-name "com.apple.logd.events")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.coreduetd.knowledge")
	(global-name "com.apple.remindd")
	(global-name "com.apple.cache_delete.public")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.fontservicesd")
	(global-name "com.apple.audio.AudioComponentPrefs")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.PointerUI.pointeruid.service")
	(require-any (global-name "ScripterServer")
(global-name "UIASTNotificationCenter")
(global-name "com.apple.ondemandd.client")
(global-name "com.apple.hid.PencilHaptics")
(global-name "com.apple.sharing.sharesheet")
(global-name "com.apple.airplaydiagnostics.server"))
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.appleneuralengine")
	(global-name "com.apple.ClipServices.clipserviced")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.runningboard")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.WebBookmarks.webbookmarksd")
	(global-name "com.apple.networkd")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.UIKit.statusbarserver")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.bird")
	(global-name "com.apple.safarifetcherd")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.assistant.dictation")
	(global-name "com.apple.mediastream.sharing")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.corerecents.recentsd")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.DeviceAccess.xpc")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.TextInput.lexicon-server")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(xpc-service-name "com.apple.tonelibraryd")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(require-any (global-name "com.apple.TextInput.emoji")
(global-name "com.apple.TextInput.shortcuts")
(global-name "com.apple.TextInput.preferences"))
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(xpc-service-name "com.apple.audio.toolbox.reporting.service")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(xpc-service-name "com.apple.iconservices")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.bird.token")
	(global-name "com.apple.system.logger")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.linkd.transcript")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.springboard.backgroundappservices")
	(require-any (global-name "com.apple.TextInput.rdt")
(global-name "com.apple.TextInput.image-cache-server"))
	(local-name "com.apple.assistant.contextprovider.")
	(global-name "com.apple.iconservices")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.ckdiscretionaryd")
	(global-name "com.apple.locationd.registration")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.accessories.externalaccessory-server")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.ctkd.token-client")
	(require-any (global-name "com.apple.linkd.autoShortcut")
(global-name "com.apple.dictationd.recognition")
(global-name "com.apple.speech.localspeechrecognition")
(global-name "com.apple.KeyboardServices.TextReplacementService"))
	(global-name "com.apple.photos.service")
	(global-name "com.apple.accessibility.gax.backboard")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.backboard.hid.services")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.voiceservices.keepalive")
	(global-name "com.apple.assistant.analytics")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.accessibility.mediaaccessibilityd")
	(xpc-service-name)
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.webfilterd")
	(global-name "com.apple.frontboard.workspace")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.pasteboard.pasted")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.coremedia.asset.xpc")
	(xpc-service-name "com.apple.audio.analytics.service")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.UIKit.pasteboardd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.iphone.axserver-systemwide")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.webinspector")
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "com.apple.dt.automationmode.reader")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.audio.hapticd")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.progressd")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.logd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.assistant.settings")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.backboard.hid-services.xpc")
	(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.ckdiscretionaryd.debug")
	(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
	(global-name "com.apple.cloudkit.partlycloudd")
	(require-all
		(local-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-lookup.local-name'"))
	(require-all
		(extension "b'com.apple.security.exception.mach-lookup.global-name'")
		(require-any
			(global-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(global-name "com.apple.SafetyKit")
		(require-any
			(entitlement-is-present "b'com.apple.developer.severe-vehicular-crash-event'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(debug-mode)
		(require-any
			(global-name "com.apple.coremedia.videocodecd.decompressionsession")
			(global-name "com.apple.coremedia.videocodecd.compressionsession")
			(require-any (global-name "com.apple.EventTimingProfileService")
(global-name "com.apple.swiftuitracingsupport.xpc"))))
	(require-all
		(global-name "com.apple.weatherkit.authservice")
		(require-any
			(entitlement-is-present "b'com.apple.developer.weatherkit'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(global-name "com.apple.merchantd.identity")
		(require-any
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.display'")
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.read'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(global-name "com.apple.gputools.service")
		(debug-mode))
	(require-all
		(global-name "com.apple.callkit.networkextension.voip")
		(require-any
			(entitlement-is-present "b'com.apple.developer.networking.networkextension'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(global-name "com.apple.MomentsUIService")
		(require-any
			(entitlement-is-present "b'com.apple.developer.journal.allow'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.dataaccess.dataaccessd")
					(global-name "com.apple.exchangesyncd")
					(xpc-service-name "com.apple.ctcategories.service")
					(xpc-service-name "com.apple.LORemoteUIPinService")))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(global-name "com.apple.SharedWebCredentials")
			(global-name "com.apple.dataaccess.dataaccessd")
			(global-name "com.apple.exchangesyncd")
			(xpc-service-name "com.apple.ctcategories.service")
			(xpc-service-name "com.apple.LORemoteUIPinService")))
	(require-all
		(global-name "com.apple.coreidvd.digital-presentment.xpc")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment.merchant-identifiers'")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment'"))
	(require-all
		(global-name "com.apple.ExposureNotification")
		(entitlement-is-bool-true "b'com.apple.developer.exposure-notification'"))
	(require-all
		(global-name "com.apple.seserviced.session")
		(entitlement-is-bool-true "b'com.apple.developer.carkey.session'"))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))))
	(require-all
		(global-name "com.apple.uikit.viewservice.")
		(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-priv-host-port
	(extension "b'com.apple.sandbox.application-group'")
	(local-name "com.apple.iphone.axserver")
	(local-name "com.apple.assistant.contextprovider.")
	(local-name "com.apple.accessibility.gax.client")
	(require-all
		(global-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-register.global-name'"))
	(require-all
		(local-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-register.local-name'")))
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow necp-client-open
	(entitlement-is-bool-true "b'com.apple.developer.networking.multicast'")
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension "b'com.apple.app-sandbox.read-write'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
(allow network-inbound)
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow opendirectory-user-modify)
(allow process-exec-interpreter)
(allow process-fork)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set)
(allow syscall*)
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "net.statistics")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname")
	(extension "b'com.apple.security.exception.sysctl.read-write'")
	(extension "b'com.apple.security.exception.sysctl.read-only'")
	(sysctl-name "kern.bootsessionuuid")
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.exception.process-info'")
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2.")))
	(require-all
		(require-not (sysctl-name "sysctl.proc_native"))
		(require-any
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "hw.physmem")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cachelinesize_compat"))
			(sysctl-name "hw.physicalcpu")
			(require-any (sysctl-name "security.mac.sandbox.sentinel")
(sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l1dcachesize_compat"))
			(sysctl-name "kern.maxfilesperproc")
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.osrelease"))
			(sysctl-name "hw.targettype")
			(sysctl-name "sysctl.name2oid")
			(sysctl-name "kern.bootsessionuuid")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot"))))))
(allow system-automount)
(allow system-debug
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 72))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 93))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 31))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 71))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 29))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 28))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 18))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 27)))
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
(allow system-swap
	(preference-domain "com.apple.appleaccount")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.aggregated")
	(preference-domain "com.apple.Metal")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.MobileSMS")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.mobilemail")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.VoiceOverTouch")
	(require-any (preference-domain "com.apple.SwiftUI")
(preference-domain "com.apple.morphology")
(preference-domain "com.apple.LinearMediaKit")
(preference-domain "com.apple.MapKit.internal")
(preference-domain "com.apple.Accessibility.speech"))
	(preference-domain "com.apple.EmojiPreferences")
	(require-any (preference-domain "com.apple.nanocamera")
(preference-domain "com.apple.cloud.quota")
(preference-domain "com.apple.legacycamera")
(preference-domain "com.apple.videouploadplugins")
(preference-domain "com.apple.youtubeframework.notbackedup"))
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.mms_override")
	(require-any (preference-domain "com.apple.act")
(preference-domain "com.apple.WebKit"))
	(preference-domain "com.apple.WebUI")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mediaaccessibility")
	(preference-domain "com.apple.avkit")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.camera")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.DataDeliveryServices")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.InputModePreferences")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.spotlightui")
	(preference-domain "com.apple.Maps")
	(preference-domain "com.apple.DataAccess.BehaviorOptions")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.indigo")
	(preference-domain "com.apple.proactive.PersonalizationPortrait")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(preference-domain "com.apple.opengl")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.accountsd")
	(preference-domain "com.apple.Wallet.public")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.lookup.shared")
	(preference-domain "com.apple.PencilKit")
	(preference-domain "com.apple.voiceservices")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.suggestions")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.medialibrary")
	(preference-domain "com.apple.imessage.bag")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.ImageCaptureFramework")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.mobilecal")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.keyboard.preferences")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.homesharing")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.GMM")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.TTY")
	(preference-domain "com.apple.compass")
	(preference-domain "com.apple.mediaanalysis")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.GameController")
	(preference-domain "com.apple.pairedsync")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.morphology.internal")
			(preference-domain "com.apple.security")))
	(require-all
		(preference-domain "com.apple.groupactivities")
		(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
	(require-all
		(preference-domain "com.apple.coremedia")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.corevideo")
		(extension "b'com.apple.tcc.kTCCServicePhotos'")))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-read
	(preference-domain "com.apple.appleaccount")
	(require-any (preference-domain "com.apple.nanocamera")
(preference-domain "com.apple.cloud.quota")
(preference-domain "com.apple.legacycamera")
(preference-domain "com.apple.videouploadplugins")
(preference-domain "com.apple.youtubeframework.notbackedup"))
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.camera")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.keyboard.preferences")
	(preference-domain "com.apple.Preferences"))
(allow user-preference-write)
