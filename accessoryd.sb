(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.nsurlsessiond.readonly")
			(extension-class "com.apple.aned.read-only")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(literal "/private/var/containers/Data/System/")
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/")
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/")
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
	(require-all
		(extension "b'com.apple.fileprovider.read-write'")
		(require-any
			(extension-class "com.apple.app-sandbox.read-write")
			(extension-class "com.apple.app-sandbox.read")))
	(require-all
		(debug-mode)
		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(subpath "/System/Library")
			(subpath "/Library/RegionFeatures")
			(subpath "/System/Library")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(subpath "/Library/RegionFeatures")
			(subpath "/System/Library")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(subpath "/Library/RegionFeatures")
			(subpath "/System/Library")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes"))))))
(allow file-issue-extension)
(allow file-mount
	(require-any (subpath-prefix "${HOME}/Media/Radio")
(subpath-prefix "${HOME}/Library/Caches/com.apple.iap2d")
(subpath-prefix "${HOME}/Library/Logs/com.apple.ioam")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/mp")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/iapd")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/iap2d")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/haywire")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Panics")
(literal-prefix "${HOME}/Library/Preferences/com.apple.assistivetouchd.enabled.launchd"))
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
	(subpath "/usr/sbin")
	(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
	(literal "/private/var/preferences/com.apple.security.plist")
	(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
	(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory")
	(subpath-prefix "${HOME}/Library/CallHistoryDB")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal "/private/var/db/com.apple.networkextension.tracker-info")
	(subpath "/private/var/tmp")
	(literal "/usr/standalone/firmware/apticket.der")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.mobilegestalt.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/accessoryd")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(subpath "/private/preboot")
	(extension "b'com.apple.sandbox.executable'")
	(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
	(extension "b'com.apple.app-sandbox.read-write'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.app-sandbox.read'")
	(subpath "/private/var/hardware/FactoryData")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
	(require-all
		(literal "/private/var/preferences/com.apple.networkextension.plist")
		(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
				(subpath-prefix "${HOME}"))))
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
			(subpath "/private/var/containers/Data/System/com.apple.geod")
			(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
			(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(literal "/dev/null")
			(literal "/dev/aes_0")
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
			(literal "/dev/urandom")
			(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
			(subpath "/private/var/db/datadetectors/sys")
			(literal "/dev/dtracehelper")
			(subpath-prefix "${HOME}/Library/Fonts")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(require-any (subpath-prefix "${HOME}/Library/CoreAccessories")
(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(literal "/dev/zero")
			(literal "/dev/random")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))
			(require-all
				(extension "b'com.apple.assets.read'")
				(require-any
					(subpath "/private/var/MobileAsset")
					(subpath-prefix "${HOME}/Library/Assets")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-any
					(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
					(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
					(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
			(require-all
				(literal "/System/Library/Carrier Bundles/")
				(require-any
					(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
					(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
				(require-any
					(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
					(subpath-prefix "${HOME}/Library/AddressBook")
					(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
			(require-all
				(uid 0)
				(literal "/private/etc/master.passwd"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
				(require-any
					(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
					(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Data/System/")
						(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
			(require-all
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(extension "b'com.apple.sandbox.system-group'")
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(entitlement-is-present "b'com.apple.security.system-group-containers'"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
				(extension "b'com.apple.logd.read-only'")
				(require-any
					(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
					(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private")
					(subpath "/Developer")
					(subpath "/private/var/preferences/Logging")
					(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
					(subpath "/System/Library/PrivateFrameworks")
					(literal "/private/etc/passwd")
					(subpath "/usr/lib")
					(subpath "/private/var/db/timezone")
					(subpath "/Library/RegionFeatures")
					(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
					(literal "/private/etc/services")
					(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
					(subpath "/System/Library/Frameworks")
					(literal "/System")
					(subpath "/System/Cryptexes")
					(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
					(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
					(literal "/private/etc/hosts")
					(subpath "/private/preboot/Cryptexes")
					(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
					(literal "/")
					(subpath "/usr/share")
					(literal "/private/etc/fstab")
					(literal "/private/preboot")
					(subpath "/System/Library")
					(subpath "/System/Developer")
					(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-any
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
							(subpath "/usr/libexec")
							(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
							(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
							(require-all
								(subpath "/usr/local/libexec")
								(debug-mode))))
					(require-all
						(debug-mode)
						(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
					(require-all
						(subpath "/usr/local")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))))
					(require-all
						(subpath "/AppleInternal")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))))
					(require-all
						(subpath "/usr/appleinternal")
						(require-any
							(debug-mode)
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
						(subpath "/private/var/OOPJit")
						(extension "b'com.apple.sandbox.oopjit'"))))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read*
	(vnode-type SYMLINK)
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Caches")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
	(literal-prefix "${HOME}/Library/Preferences")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd")
	(literal-prefix "${HOME}/Library/Caches")
	(literal "/private/var/run/syslog")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(vnode-type DIRECTORY)
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(process-attribute is-apple-signed-executable)
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
		(require-any
			(process-attribute is-apple-signed-executable)
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any
			(process-attribute is-apple-signed-executable)
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences")))
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath-prefix "${HOME}/Media/Radio")
(subpath-prefix "${HOME}/Library/Caches/com.apple.iap2d")
(subpath-prefix "${HOME}/Library/Logs/com.apple.ioam")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/mp")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/iapd")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/iap2d")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/haywire")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Panics")
(literal-prefix "${HOME}/Library/Preferences/com.apple.assistivetouchd.enabled.launchd"))
	(subpath-prefix "${HOME}/Library/CallHistoryDB")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath "/private/var/tmp")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/accessoryd")
	(extension "b'com.apple.app-sandbox.read-write'")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
				(subpath-prefix "${HOME}"))))
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(require-any (subpath-prefix "${HOME}/Library/CoreAccessories")
(subpath-prefix "${HOME}/Library/Caches/com.apple.accessoryd"))
			(subpath-prefix "${HOME}/Library/Caches/com.apple.iapd")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))
					(require-all
						(vnode-type REGULAR-FILE)
						(literal-prefix "${HOME}/Library/AddressBook/")
						(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.accessoryd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.iapd"))
					(require-all
						(vnode-type REGULAR-FILE)
						(literal-prefix "${HOME}/Library/AddressBook/")
						(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
				(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(literal "/private/var/cores/")
				(regex #"^/private/var/cores/.+[.]core$")
				(process-attribute is-apple-signed-executable))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))
(allow file-write*
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory")
			(literal-prefix "${HOME}/Library/Caches"))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-setugid
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control
	(iokit-property "soc-generation")
	(iokit-user-client-class "AppleJPEGDriver")
	(iokit-property "AppleJPEGNumCores")
	(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")
	(require-all
		(iokit-user-client-class "IODPController")
		(require-any (iokit-property "PowerState")
(iokit-property "VirtualMode")))
	(require-all
		(iokit-user-client-class "IOPlatformDevice")
		(require-any (iokit-property "disable-globe-map")
(iokit-property "multiuser-sessions")))
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "IOService")))
(allow iokit-issue-extension
	(require-any (iokit-user-client-class "AppleAuthCPUserClient")
(iokit-user-client-class "IOAccessoryPortUserClient")
(iokit-user-client-class "IOAccessoryEAInterfaceUserClient"))
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "IOAccessoryManagerUserClient")
	(iokit-user-client-class "AppleUSBHostInterfaceUserClient")
	(iokit-user-client-class "AppleUSBHostDeviceUserClient")
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOHIDResourceDeviceUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleCredentialManagerUserClient")
	(require-any (iokit-user-client-class "AppleUSBSerialUserClient")
(iokit-user-client-class "IOAccessoryConfigStreamUserClient")
(iokit-user-client-class "IOAccessoryOOBPairingInterfaceUserClient"))
	(iokit-user-client-class "AppleSMCSensorDispatcherUserClient")
	(iokit-user-client-class "AGXCommandQueue")
	(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
	(iokit-user-client-class "IOGPUDeviceUserClient")
	(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
	(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
	(iokit-user-client-class "AGXSharedUserClient"))
(allow iokit-open*
	(iokit-user-client-class "AppleKeyStore")
	(entitlement-is-bool-true "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "AppleCLCD")
	(iokit-user-client-class "AGXAcceleratorG")
	(iokit-user-client-class "AppleJPEGDriver")
	(iokit-user-client-class "IOSurfaceRoot"))
(allow iokit-open-user-client
	(require-all
		(iokit-user-client-class "IODPController")
		(require-any (iokit-property "PowerState")
(iokit-property "VirtualMode")))
	(require-all
		(iokit-user-client-class "IOUSBHostDevice")
		(require-any (iokit-property "Authenticated")
(iokit-property "InterfaceProperties"))))
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.SystemConfiguration.configd")
	(extension "b'com.apple.security.exception.mach-lookup.local-name'")
	(extension "b'com.apple.security.exception.mach-lookup.global-name'")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.SystemConfiguration.PPPController")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.CallHistorySyncHelper")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset.xpc")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.CarPlayApp.service")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.carkit.service")
	(require-any (global-name "com.apple.accessories.")
(global-name "com.apple.itunescloud.delegation-provider"))
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.dmd.policy")
	(global-name "com.apple.nfcacd.hwmanager")
	(xpc-service-name "com.apple.MTLCompilerService")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.MediaPlayer.MPRadioControllerServer")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.voicemail.vmd")
	(xpc-service-name "com.apple.AGXCompilerService")
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(xpc-service-name "com.apple.externalaccessory.WACEAService")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.containermanagerd.system")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.logd")
	(global-name "com.apple.logd.events")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.runningboard")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-priv-host-port
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server"))
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow necp-client-open
	(local udp "*:*"))
(allow network*
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/euser[0-9]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/[-0-9A-F]+/Library/ExternalAccessory/ea[.0-9]+$" #"^/private/var/Users/[^/]+/Library/ExternalAccessory/ea[.0-9]+$")))
(allow network-inbound
	(control-name "com.apple.flow-divert")
	(remote udp "*:*")
	(control-name "com.apple.netsrc")
	(control-name "com.apple.network.statistics")
	(remote tcp "*:*")
	(remote udp "*:443")
	(literal "/private/var/run/lockdown.sock")
	(literal "/private/var/run/mDNSResponder")
	(literal "/private/var/run/syslog")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow opendirectory-user-modify)
(allow process*
	(require-any (literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iapd")
(literal "/System/Library/PrivateFrameworks/IAP.framework/Support/iap2d")))
(allow process-exec-interpreter)
(allow process-fork)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set)
(allow syscall*)
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "net.statistics")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname"))
(allow system-automount)
(allow system-kext*
	(require-any (kext-bundle-id "com.apple.driver.AppleUSBAudio")
(kext-bundle-id "com.apple.driver.AppleUSBDeviceAudioController")
(kext-bundle-id "com.apple.driver.usb.networking")
(kext-bundle-id "com.apple.driver.usb.IOUSBHostHIDDevice")
(kext-bundle-id "com.apple.driver.usb.cdc")
(kext-bundle-id "com.apple.driver.usb.cdc.ncm")
(kext-bundle-id "com.apple.driver.usb.cdc.ecm")))
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-package-check)
(allow user-preference*
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.Metal")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.accessoryd")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.itunescloud")
	(require-any (preference-domain "com.apple.accessories")
(preference-domain "com.apple.CoreAccessories"))
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.logging")
	(require-any (preference-domain "com.apple.iap2d")
(preference-domain "com.apple.iaptransportd"))
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.homesharing")
	(preference-domain "com.apple.opengl")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.suggestions")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.medialibrary")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.MFAAuthentication")
	(preference-domain "com.apple.keyboard.preferences")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.carplay")
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.Preferences")
	(preference-domain "com.apple.corevideo")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.hangtracer")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.demo-settings")
			(preference-domain "com.apple.security"))))
(allow user-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow managed-preference-read
	(preference-domain "com.apple.accessoryd")
	(preference-domain "com.apple.itunescloud")
	(require-any (preference-domain "com.apple.accessories")
(preference-domain "com.apple.CoreAccessories"))
	(require-any (preference-domain "com.apple.iap2d")
(preference-domain "com.apple.iaptransportd"))
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.itunesstored")
	(preference-domain "com.apple.MFAAuthentication")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.iapd"))
(allow storage-class-map)
