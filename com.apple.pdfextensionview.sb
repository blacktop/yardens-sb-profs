(version 1)
(deny default)
(allow file-issue-extension
	(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches"))))
(allow file-lock)
(allow file-map-executable
	(subpath "/System/Library/PrivateFrameworks")
	(subpath "/usr/lib")
	(subpath "/System/Library/Frameworks")
	(subpath "/System/Library")
	(subpath "/System/Cryptexes")
	(subpath "/private/preboot/Cryptexes"))
(allow file-read*
	(literal "/private/var/Managed Preferences/mobile/com.apple.UIKit.plist")
	(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.Accessibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.Accessibility.plist"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.UIKit.plist")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-any
			(literal "/System")
			(literal "/private/preboot")
			(subpath "/System/Cryptexes")
			(subpath "/private/preboot/Cryptexes")
			(literal "/dev/null")
			(literal "/dev/urandom")
			(literal "/private/etc/passwd")
			(literal "/private/etc/services")
			(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
			(literal "/private/etc/fstab")
			(literal "/dev/zero")
			(literal "/private/etc/hosts")
			(literal "/dev/random")
			(literal "/")
			(literal "/private")
			(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
			(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
			(require-all
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
			(require-all
				(file-mode #o0004)
				(require-any
					(subpath "/System")
					(subpath "/usr/lib")
					(subpath "/usr/share")
					(subpath "/private/var/db/dyld")
					(subpath "/private/var/db/timezone"))))))
(allow file-read-data
	(subpath "/private/var/preferences/Logging")
	(literal "/private/etc/passwd")
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache")
(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles")
(subpath-prefix "${HOME}/Library/UserConfigurationProfiles"))
	(subpath "/System")
	(literal "/")
	(subpath "/usr/share")
	(subpath "/Library"))
(allow file-read-metadata
	(require-any (literal "/etc")
(literal "/var"))
	(literal "/private/var")
	(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences"))
	(literal "/private/etc/passwd")
	(subpath "/usr/lib")
	(subpath "/private/var/db/timezone")
	(subpath "/usr/standalone")
	(literal-prefix "${HOME}")
	(literal "/dev")
	(literal "/private/xarts")
	(subpath "/usr/share")
	(literal "/")
	(subpath "/System")
	(subpath "/Library")
	(literal "/tmp")
	(literal "/private/etc/localtime")
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(literal)
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
				(require-any
					(require-any (literal "/private/var/Managed Preferences/mobile/com.apple.AppSupport.plist")
(literal "/private/var/Managed Preferences/mobile/com.apple.Accessibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.AppSupport.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.Accessibility.plist"))
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.UIKit.plist")
					(require-all
						(literal "/private/var/")
						(require-any
							(literal "/System")
							(literal "/private/preboot")
							(subpath "/System/Cryptexes")
							(subpath "/private/preboot/Cryptexes")
							(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
							(literal "/dev/null")
							(literal "/dev/urandom")
							(literal "/private/etc/passwd")
							(literal "/private/etc/services")
							(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
							(literal "/private/etc/fstab")
							(literal "/dev/zero")
							(literal "/private/etc/hosts")
							(literal "/dev/random")
							(literal "/")
							(literal "/private")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
							(require-all
								(file-mode #o0004)
								(require-any
									(subpath "/System")
									(subpath "/usr/lib")
									(subpath "/usr/share")
									(subpath "/private/var/db/dyld")
									(subpath "/private/var/db/timezone")))))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(require-any
							(literal "/System")
							(literal "/private/preboot")
							(subpath "/System/Cryptexes")
							(subpath "/private/preboot/Cryptexes")
							(extension "b'com.apple.sandbox.container'")
							(literal "/dev/null")
							(literal "/dev/urandom")
							(literal "/private/etc/passwd")
							(literal "/private/etc/services")
							(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
							(literal "/private/etc/fstab")
							(literal "/dev/zero")
							(literal "/private/etc/hosts")
							(literal "/dev/random")
							(literal "/")
							(literal "/private")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(require-all
								(file-mode #o0004)
								(require-any
									(subpath "/System")
									(subpath "/usr/lib")
									(subpath "/usr/share")
									(subpath "/private/var/db/dyld")
									(subpath "/private/var/db/timezone"))))))))))
(allow file-test-existence
	(require-all
		(require-not (subpath "/usr/local"))
		(require-not (subpath "/AppleInternal"))
		(require-any
			(subpath "/usr/lib")
			(subpath "/usr/standalone")
			(literal "/dev")
			(subpath "/System")
			(subpath "/usr/share")
			(subpath "/Library")
			(literal "/")
			(require-any (subpath "/private")
(literal "/etc/passwd")
(subpath "/var/db")
(subpath "/var/mobile/Library")
(subpath "/var/mobile/Containers/Data/PluginKitPlugin")))))
(allow file-write-data
	(literal "/dev/null")
	(literal "/dev/zero"))
(allow iokit-get-properties
	(require-all
		(iokit-user-client-class "AGXAcceleratorG")
		(require-any (iokit-property "MetalPluginName")
(iokit-property "MetalPluginClassName")
(iokit-property "BaseAddressAlignmentRequirement")))
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "AppleM2ScalerCSCDriver"))
	(require-all
		(iokit-user-client-class "AppleJPEGDriver")
		(require-any
			(iokit-property "AppleJPEGSupportsRSTLogging")
			(iokit-property "AppleJPEGNumCores")
			(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))
	(require-all
		(require-any (iokit-property "thin-bezel")
(iokit-property "large-format-phone"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(require-any (iokit-property "external-hdr")
(iokit-property "compatible-app-variant"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(require-any (iokit-property "product-description")
(iokit-property "device-perf-memory-class")
(iokit-property "compatible-device-fallback")
(iokit-property "graphics-featureset-class")
(iokit-property "graphics-featureset-fallbacks")
(iokit-property "artwork-display-gamut")
(iokit-property "artwork-dynamic-displaymode")
(iokit-property "artwork-device-idiom")
(iokit-property "artwork-device-subtype"))
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "product-id")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "device-colors")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "display-corner-radius")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "artwork-scale-factor")
		(iokit-user-client-class "IOPlatformDevice")))
(allow iokit-open-user-client
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "AGXDeviceUserClient"))
(allow iokit-open-service
	(iokit-user-client-class "AppleKeyStore")
	(iokit-user-client-class "AppleJPEGDriver")
	(iokit-user-client-class "AGXAcceleratorG")
	(iokit-user-client-class "IOSurfaceRoot")
	(iokit-user-client-class "AppleM2ScalerCSCDriver"))
(allow iokit-set-properties)
(allow ipc-posix-shm-read-data
	(ipc-posix-name "apple.shm.notification_center")
	(ipc-posix-name "apple.cfprefs."))
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(global-name "com.apple.system.notification_center")
	(global-name "com.apple.MTLCompilerService")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.mediaanalysisd.service.public")
	(global-name "com.apple.fontservicesd")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.PointerUI.pointeruid.service")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.logd")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.frontboard.systemappservices"))
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow process-codesigning)
(allow process-info-pidinfo
	(target others))
(allow syscall-unix
	(c1 4407 9988 b9c1))
(allow syscall-mach
	(cb 4411 9986 b9c1))
(allow syscall-mig
	(cc 4414 9984 b9c1))
(allow sysctl*
	(require-all
		(require-not (sysctl-name "vm.footprint_suspend"))
		(require-not (sysctl-name "vm.task_no_footprint_for_debug"))
		(sysctl-name "kern.wq_limit_cooperative_threads")))
(allow sysctl-read
	(require-all
		(require-not (sysctl-name "vm.footprint_suspend"))
		(require-not (sysctl-name "vm.task_no_footprint_for_debug"))
		(require-any
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "kern.bootargs")
			(require-any (sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.boottime")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.development")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "hw.usermem")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l3settings")
(sysctl-name "hw.l3cachesize_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l1dcachesize_compat"))
			(sysctl-name "hw.ncpu")
			(require-any (sysctl-name "hw.activecpu")
(sysctl-name "hw.pagesize_compat"))
			(sysctl-name "kern.memorystatus_level")
			(sysctl-name "security.mac.lockdown_mode_state")
			(require-any (sysctl-name "hw.optional.")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.physmem")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cacheconfig")
(sysctl-name "hw.cachelinesize_compat"))
			(sysctl-name "kern.hostname")
			(sysctl-name "hw.cachelinesize")
			(sysctl-name "kern.osversion")
			(require-any (sysctl-name "kern.ngroups")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs"))
			(sysctl-name "hw.targettype")
			(require-any (sysctl-name "hw.cpufamily")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.nperflevels"))
			(sysctl-name "vm.loadavg")
			(sysctl-name "kern.secure_kernel")
			(sysctl-name "vm.malloc_ranges")
			(require-any (sysctl-name "kern.usrstack64")
(sysctl-name "hw.cpufrequency_max"))
			(require-any (sysctl-name "kern.osvariant_status")
(sysctl-name "kern.osproductversion"))
			(sysctl-name "hw.product")
			(sysctl-name "sysctl.name2oid")
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.ostype")
(sysctl-name "kern.osrelease"))
			(sysctl-name "hw.tbfrequency_compat")
			(sysctl-name "hw.target")
			(sysctl-name "hw.l2cachesize")
			(sysctl-name "kern.bootsessionuuid")
			(sysctl-name "kern.maxvnodes")
			(require-any (sysctl-name "kern.hostid")
(sysctl-name "hw.tbfrequency"))
			(sysctl-name "hw.vectorunit")
			(require-any (sysctl-name "hw.perflevel")
(sysctl-name "kern.hv_vmm_present"))
			(sysctl-name "hw.physicalcpu")
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "hw.memsize")
(sysctl-name "hw.machine"))
			(require-any (sysctl-name "kern.waketime")
(sysctl-name "machdep.ptrauth_enabled")
(sysctl-name "machdep.virtual_address_size")
(sysctl-name "security.mac.sandbox.sentinel"))
			(require-all
				(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot"))
				(process-attribute is-apple-signed-executable)))))
(allow system-fcntl
	(ce 441a 995a b9c1))
(allow system-mac-syscall
	(mac-syscall-number 2)
	(mac-syscall-number 4)
	(require-not (mac-syscall-number 67))
	(mac-policy-name-regex "b'FSandbox\x0f\x00\x0f'")
	(require-all
		(mac-syscall-number 90)
		(mac-policy-name-regex "b'CAMFI\x0f\x00\x0f'")))
(allow system-memorystatus-control)
(allow system-privilege)
(allow process-exec-update-label)
