(version 1)
(allow default)
(deny darwin-notification-post
	(entitlement-is-bool-true "b'com.apple.developer.cs.allow-jit'")
	(entitlement-is-bool-true "b'com.apple.private.cs.allow-jit'")
	(require-not (entitlement-is-bool-true "b'dynamic-codesigning'"))
	(require-all
		(require-all (require-not (signing-identifier "org.python.python"))
(require-not (signing-identifier "com.apple.python"))
(require-not (signing-identifier "com.apple.Mica-Player"))
(require-not (signing-identifier "com.apple.test.xnu.jitbox"))
(require-not (signing-identifier "com.apple.os_thread_self_restrict"))
(require-not (signing-identifier "com.apple.jsc"))
(require-not (signing-identifier "com.apple.jumbo_va_spaces_28530648")))
		(require-any
			(require-not (process-attribute is-sandboxed))
			(process-attribute is-protoboxed))))
(deny dynamic-code-generation
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'os_eligibility'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(storage-class "b'PassKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(require-not (subpath "/private/var/db/sysdiagnose")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
					(require-all
						(storage-class "b'Safari'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'Calendar'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.scripter"))
(require-not (signing-identifier "com.apple.lockdownd"))
(require-not (signing-identifier "com.apple.calaccessd"))
(require-not (signing-identifier "com.apple.accounts.dom"))
(require-not (signing-identifier "com.apple.dataaccess.dataaccessd"))
(require-not (signing-identifier "com.apple.email.maild"))
(require-not (signing-identifier "com.apple.exchangesyncd"))
(require-not (signing-identifier "com.apple.RemoteManagement.AccountExtension"))
(require-not (signing-identifier "com.apple.mobile_file_relay"))
(require-not (signing-identifier "com.apple.mobilecal"))
(require-not (signing-identifier "com.apple.mobilecal.diagnosticextension")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Suggestions'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.momentsd"))
(require-not (signing-identifier "com.apple.MobileSMS"))
(require-not (signing-identifier "com.apple.assistantd"))
(require-not (signing-identifier "com.apple.dasd"))
(require-not (signing-identifier "com.apple.duetexpertd"))
(require-not (signing-identifier "com.apple.chronod"))
(require-not (signing-identifier "com.apple.coreduetd"))
(require-not (signing-identifier "com.apple.contextstored"))
(require-not (signing-identifier "com.apple.cdknowledgetool"))
(require-not (signing-identifier "com.apple.siriknowledged"))
(require-not (signing-identifier "com.apple.softwareupdateservicesd"))
(require-not (signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService")))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'"))
						(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'"))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (signing-identifier "com.apple.followupd"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-any
							(require-all
								(process-attribute is-protoboxed)
								(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'"))
								(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
								(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'"))
								(require-any
									(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(require-not (process-attribute is-sandboxed))
								(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'"))
								(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
								(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'"))
								(require-any
									(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'")))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'Accounts'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.plphotosctl"))
(require-not (signing-identifier "com.apple.keystorectl"))
(require-not (signing-identifier "com.apple.CacheDeleteDaily"))
(require-not (signing-identifier "com.apple.io_usage"))
(require-not (signing-identifier "com.apple.itunescloudd"))
(require-not (signing-identifier "com.apple.DocumentsApp"))
(require-not (signing-identifier "com.apple.DocumentManagerUICore.Service"))
(require-not (signing-identifier "com.apple.DTServiceHub"))
(require-not (signing-identifier "com.apple.Playgrounds"))
(require-not (signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension"))
(require-not (signing-identifier "com.apple.accountsd"))
(require-not (signing-identifier "com.apple.aggregated"))
(require-not (signing-identifier "com.apple.asd"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.amstool"))
(require-not (signing-identifier "com.apple.amsaccountsd")))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'"))
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'"))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'HomeAI'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.homed"))
(require-not (signing-identifier "com.apple.mediaanalysisd")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'StatusKit'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (signing-identifier "com.apple.StatusKitAgent"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Spotlight'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.xctest"))
(require-not (signing-identifier "com.apple.aggregated"))
(require-not (signing-identifier "com.apple.DTServiceHub"))
(require-not (signing-identifier "com.apple.Search.framework.SpotlightDiagnostic")))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SensorKit'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.siri.embeddedspeech"))
(require-not (signing-identifier "com.apple.siri.speech-model-training"))
(require-not (signing-identifier "com.apple.assistant.assistantd")))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'TPM'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.tpm-authority"))
(require-not (signing-identifier "com.apple.tpm-measurements")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'")))
					(require-all
						(storage-class "b'Cryptex'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'")))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'")))
					(require-all
						(storage-class "b'SoC'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (signing-identifier "com.apple.powerdatad"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'")))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'geod'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.geod'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'")))
					(require-all
						(storage-class "b'demo_backup'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.demod_helper"))
(require-not (signing-identifier "com.apple.finish_demo_restore")))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
					(require-all
						(storage-class "b'familycircled'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'chronod'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
					(require-all
						(storage-class "b'CallHistory'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.geod"))
(require-not (signing-identifier "com.apple.backupd"))
(require-not (signing-identifier "com.apple.imagent"))
(require-not (signing-identifier "com.apple.facetime"))
(require-not (signing-identifier "com.apple.NanoPhone"))
(require-not (signing-identifier "com.apple.assistantd"))
(require-not (signing-identifier "com.apple.BackupAgent2"))
(require-not (signing-identifier "com.apple.tursd"))
(require-not (signing-identifier "com.apple.tincan"))
(require-not (signing-identifier "com.apple.FinishRestoreFromBackup"))
(require-not (signing-identifier "com.apple.nanophoned"))
(require-not (signing-identifier "com.apple.nanobackupd"))
(require-not (signing-identifier "com.apple.duetexpertd"))
(require-not (signing-identifier "com.apple.demod_helper"))
(require-not (signing-identifier "com.apple.InCallService"))
(require-not (signing-identifier "com.apple.InCallService.IntentsUI"))
(require-not (signing-identifier "com.apple.sharingd"))
(require-not (signing-identifier "com.apple.suggestd"))
(require-not (signing-identifier "com.apple.sysdiagnose"))
(require-not (signing-identifier "com.apple.mobilestoredemod"))
(require-not (signing-identifier "com.apple.mobile_obliterator"))
(require-not (signing-identifier "com.apple.mobilephone"))
(require-not (signing-identifier "com.apple.mobilephone.assistant"))
(require-not (signing-identifier "com.apple.TelephonyUtilities"))
(require-not (signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler"))
(require-not (signing-identifier "com.apple.contactsd"))
(require-not (signing-identifier "com.apple.coretelephony"))
(require-not (signing-identifier "com.apple.commcentermobilehelper"))
(require-not (signing-identifier "com.apple.MobileAddressBook"))
(require-not (signing-identifier "com.apple.MobileSMS"))
(require-not (signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.CallHistoryTool"))
(require-not (signing-identifier "com.apple.CallHistorySyncHelper"))
(require-not (signing-identifier "com.apple.CallHistory.DataMigrator"))
(require-not (signing-identifier "com.apple.CommCenterRootHelper"))
(require-not (signing-identifier "com.apple.ContactsUI.ContactsViewService"))
(require-not (signing-identifier "com.apple.ContactsUI.ContactViewViewService")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'"))
						(require-not (signing-identifier "com.apple.CacheDeleteDaily"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Health'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.lsof"))
(require-not (signing-identifier "com.apple.backupd"))
(require-not (signing-identifier "com.apple.keybagd"))
(require-not (signing-identifier "com.apple.healthd"))
(require-not (signing-identifier "com.apple.health.HealthPluginHostService"))
(require-not (signing-identifier "com.apple.TapToRadar"))
(require-not (signing-identifier "com.apple.nanobackupd"))
(require-not (signing-identifier "com.apple.sysdiagnose"))
(require-not (signing-identifier "com.apple.BackupAgent2"))
(require-not (signing-identifier "com.apple.Health"))
(require-not (signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Health'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
					(require-all
						(storage-class "b'HomeKit'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'")))
					(require-all
						(storage-class "b'Voicemail'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.tursd"))
(require-not (signing-identifier "com.apple.backupd"))
(require-not (signing-identifier "com.apple.keybagd"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.NanoPhone"))
(require-not (signing-identifier "com.apple.BackupAgent2"))
(require-not (signing-identifier "com.apple.coretelephony"))
(require-not (signing-identifier "com.apple.TelephonyUtilities"))
(require-not (signing-identifier "com.apple.vmd"))
(require-not (signing-identifier "com.apple.voicemail.vmd"))
(require-not (signing-identifier "com.apple.nanophone"))
(require-not (signing-identifier "com.apple.nanophoned"))
(require-not (signing-identifier "com.apple.nanobackupd"))
(require-not (signing-identifier "com.apple.assistantd"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.siri"))
(require-not (signing-identifier "com.apple.sharingd"))
(require-not (signing-identifier "com.apple.sysdiagnose")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'"))
						(require-not (signing-identifier "com.apple.CacheDeleteDaily"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Notes'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.suggestd"))
(require-not (signing-identifier "com.apple.Spotlight"))
(require-not (signing-identifier "com.apple.MobileSMS"))
(require-not (signing-identifier "com.apple.PeopleViewService"))
(require-not (signing-identifier "com.apple.mobilesms.compose"))
(require-not (signing-identifier "com.apple.imagent"))
(require-not (signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent"))
(require-not (signing-identifier "com.apple.imtransferservices.IMTransferAgent")))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
					(require-all
						(storage-class "b'Messages'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'"))
						(require-not (literal)))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (signing-identifier "com.apple.privacyaccountingd"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'"))
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))
					(require-all
						(storage-class "b'pipelined'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'idcredd'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-all (require-not (signing-identifier "com.apple.nanotimekitd"))
(require-not (signing-identifier "com.apple.nanotimekitcompaniond")))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(storage-class "b'Mail'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'")))
					(require-all
						(storage-class "b'FaceTime'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'")))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-installer))
						(require-not (process-attribute is-datavault-controller))
						(require-any
							(require-all
								(process-attribute is-sandboxed)
								(process-attribute is-protoboxed))
							(require-all
								(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
								(storage-class "b'AppDataContainers'")
								(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'"))
								(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'"))
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.container-manager'"))
								(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
								(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))))))))
(deny file*
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(require-any (literal "/private/var/db/fpsd")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud/CachedRecords"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/private/var/protected")
(literal "/private/var/protected/trustd"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Caches")
(literal-prefix "${FRONT_USER_HOME}/Library/Keyboard")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/")
(literal "/private/var")
(literal "/private/var/db")
(literal "/private/var/tmp")
(literal "/private/var/tmp/com.apple.messages")
(literal "/private/var/containers")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.osanalytics")
(subpath "/private")
(literal-prefix "${ANY_USER_HOME}")
(literal-prefix "${ANY_USER_HOME}/tmp")
(literal-prefix "${ANY_USER_HOME}/Library")
(literal-prefix "${ANY_USER_HOME}/Library/Caches")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp/com.apple.messages"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'os_eligibility'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/wireless"))
(require-not (literal "/private/var/wireless/Library")))
						(require-any
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal "/private/var/root")
(literal "/private/var/root/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(literal-prefix "${FRONT_USER_HOME}/Library/Metadata")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-all
								(storage-class "b'SiriReferenceResolution'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'SiriInference'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'SiriVocabulary'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(subpath "/private/var/db/sysdiagnose")
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'"))
								(literal "/private/var/db/sysdiagnose"))
							(require-all
								(storage-class "b'sysdiagnose.sysdiagnose'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
							(require-all
								(storage-class "b'sysdiagnose.springboard'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
							(require-all
								(storage-class "b'SecureElementService'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'managedassets'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'MobileContainerManager'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
							(require-all
								(storage-class "b'Lockdown'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(signing-identifier "com.apple.apsclient")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'sysdiagnose.ScreenshotServicesService'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")))
							(require-all
								(storage-class "b'BulletinDistributor'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'triald'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
									(entitlement-is-present "b'com.apple.trial.client'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'Safari'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)))
							(require-all
								(storage-class "b'ExposureNotification'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)))
							(require-all
								(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
									(require-all
										(storage-class "b'CoreRoutine'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
											(process-attribute is-datavault-controller)
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'SpeechPersonalizedLM'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
													(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'"))))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'CoreFollowUp'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.followupd")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
											(process-attribute is-datavault-controller)
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'"))))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'MobileDocuments'")
										(require-any
											(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(process-attribute is-protoboxed)
											(require-all
												(process-attribute is-initproc)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(process-attribute is-installer)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(process-attribute is-datavault-controller)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(process-attribute is-sandboxed)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(entitlement-is-bool-true "b'task_for_pid-allow'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
													(process-attribute is-datavault-controller)
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))))
									(require-all
										(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-any
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'HomeAI'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
											(require-all
												(storage-class "b'StatusKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.StatusKitAgent")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'Spotlight'")
												(require-any
													(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'SpeechPersonalizedLM'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
													(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'SensorKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'"))))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'CognitiveHealth'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
									(require-all
										(storage-class "b'Accounts'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-any (signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))))))
							(require-all
								(storage-class "b'TCC'")
								(require-any
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")))
							(require-all
								(storage-class "b'Calendar'")
								(require-any
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
							(require-all
								(storage-class "b'Suggestions'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'coreduet_knowledge_store'")
								(require-any
									(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
									(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'")))))))))
(deny file-chroot
	(file-attribute sip-protected)
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(literal "/dev/ptmx")
				(process-attribute is-sandboxed)
				(require-not (process-attribute is-protoboxed))
				(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'"))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(process-attribute is-datavault-controller)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-initproc)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
(deny file-clone
	(subpath "/private/var/OOPJit")
	(require-all
		(debug-mode)
		(require-any
			(extension "b'com.apple.mediaserverd.read-write'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.mediaserverd.read'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(entitlement-is-bool-true "b'com.apple.security.enterprise-volume-access'")
			(require-all
				(persona-type PERSONA_MANAGED)
				(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Containers"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Notes"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Calendar"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mail"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mobile Documents"))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+$")))))
	(require-all
		(extension-class "com.apple.sandbox.oopjit")
		(require-any
			(require-not (entitlement-is-present "b'com.apple.private.oop-jit.loader'"))
			(require-not (subpath "/private/var/OOPJit"))))
	(require-all
		(extension-class "com.apple.swift-playgrounds.executable")
		(require-not (entitlement-is-bool-true "b'com.apple.private.swift-playgrounds.executable-provider'")))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.rsync")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.PineBoard")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.newsd")
(signing-identifier "com.apple.nanonewscd")
(signing-identifier "com.apple.ReportMemoryException"))
					(require-all
						(storage-class "b'os_eligibility'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-only'")
						(require-not (storage-class "b'DiagnosticReports'")))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(require-not (subpath "/private/var/db/sysdiagnose")))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.home-from-system-session-persona'")
						(process-attribute 14)
						(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
					(require-all
						(process-attribute 14)
						(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(process-attribute is-sandboxed)
						(require-not (process-attribute is-protoboxed))
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-any
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-any
											(require-all
												(require-any (subpath-prefix "${HOME}/Library/Mobile Documents")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
												(require-any (extension-class "com.apple.quicklook.readonly")
(extension-class "com.apple.sharing.airdrop.readonly")
(extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write")))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
												(require-any (extension-class "com.apple.quicklook.readonly")
(extension-class "com.apple.sharing.airdrop.readonly")
(extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write")))))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-any
											(require-all
												(require-any (subpath-prefix "${HOME}/Library/Mobile Documents")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
												(require-any (extension-class "com.apple.quicklook.readonly")
(extension-class "com.apple.sharing.airdrop.readonly")
(extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write")))
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
												(require-any (extension-class "com.apple.quicklook.readonly")
(extension-class "com.apple.sharing.airdrop.readonly")
(extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write")))))
									(require-all
										(extension-class "com.apple.mediaserverd.read-write")
										(require-not (extension "b'com.apple.security.exception.files.home-relative-path.read-write'"))
										(require-not (extension "b'com.apple.security.exception.files.absolute-path.read-write'"))
										(require-not (extension "b'com.apple.app-sandbox.read-write'")))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(require-not (extension "b'com.apple.security.exception.files.home-relative-path.read-only'"))
										(require-not (extension "b'com.apple.security.exception.files.absolute-path.read-only'"))
										(require-not (extension "b'com.apple.security.exception.files.home-relative-path.read-write'"))
										(require-not (extension "b'com.apple.security.exception.files.absolute-path.read-write'"))
										(require-not (extension "b'com.apple.app-sandbox.read-write'")))
									(require-all
										(extension-class "com.apple.quicklook.readonly")
										(require-any
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(require-not (extension "b'com.apple.clouddocs.version'")))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(require-not (extension "b'com.apple.clouddocs.version'")))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE)
												(require-not (extension "b'com.apple.clouddocs.version'")))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE)
												(require-not (extension "b'com.apple.clouddocs.version'")))
											(require-all
												(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write"))
												(require-not (extension "b'com.apple.app-sandbox.read-write'")))))
									(require-all
										(require-any (extension-class "com.apple.sharing.airdrop.readonly")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write"))
										(require-not (extension "b'com.apple.app-sandbox.read-write'")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-all
										(entitlement-is-present "b'com.apple.trial.client'")
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Trial/Treatments/${ENTITLEMENT:com.apple.trial.client}")))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache")
												(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))
											(require-all
												(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write"))
												(require-any
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")
														(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
													(require-all
														(entitlement-is-present "b'com.apple.private.applemediaservices'")
														(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
														(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))
											(require-all
												(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write"))
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.private.applemediaservices'")
														(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
														(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-all
										(entitlement-is-present "b'com.apple.trial.client'")
										(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Trial/Treatments/${ENTITLEMENT:com.apple.trial.client}")))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(require-any
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache")
												(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))
											(require-all
												(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write"))
												(require-any
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")
														(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
													(require-all
														(entitlement-is-present "b'com.apple.private.applemediaservices'")
														(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
														(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))
											(require-all
												(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write"))
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.private.applemediaservices'")
														(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
													(require-all
														(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
														(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))))))
							(require-all
								(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write"))
								(require-any
									(require-all
										(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache")
										(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))
									(require-all
										(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write"))
										(require-any
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")
												(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
											(require-all
												(entitlement-is-present "b'com.apple.private.applemediaservices'")
												(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
												(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))
									(require-all
										(require-any (extension-class "com.apple.mediaserverd.read")
(extension-class "com.apple.mediaserverd.read-write")
(extension-class "com.apple.aned.read-only")
(extension-class "com.apple.app-sandbox.read")
(extension-class "com.apple.app-sandbox.read-write"))
										(require-any
											(require-all
												(entitlement-is-present "b'com.apple.private.applemediaservices'")
												(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
											(require-all
												(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
												(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.followupd")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(process-attribute is-protoboxed)
							(process-attribute is-sandboxed)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Accounts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'HomeAI'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'StatusKit'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.StatusKitAgent")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
					(require-all
						(storage-class "b'Spotlight'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SensorKit'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
					(require-all
						(storage-class "b'TPM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
					(require-all
						(storage-class "b'Cryptex'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SoC'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.powerdatad")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
					(require-all
						(storage-class "b'geod'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
					(require-all
						(storage-class "b'demo_backup'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
					(require-all
						(storage-class "b'familycircled'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
					(require-all
						(storage-class "b'chronod'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CallHistory'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Health'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
					(require-all
						(storage-class "b'HomeKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
					(require-all
						(storage-class "b'Voicemail'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Notes'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
					(require-all
						(storage-class "b'Messages'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
							(literal)))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.privacyaccountingd")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'pipelined'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'idcredd'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(storage-class "b'Mail'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
					(require-all
						(storage-class "b'FaceTime'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(process-attribute is-sandboxed)
						(process-attribute is-protoboxed))
					(require-all
						(storage-class "b'AppDataContainers'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))))))))
(deny file-ioctl
	(file-attribute sip-protected)
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(require-any (literal "/private/var/protected")
(literal "/private/var/protected/trustd"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Caches")
(literal-prefix "${FRONT_USER_HOME}/Library/Keyboard")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(file-attribute datavault)
			(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal "/private/var/tmp")
(literal-prefix "${ANY_USER_HOME}")
(literal-prefix "${ANY_USER_HOME}/tmp")
(literal-prefix "${ANY_USER_HOME}/Library")
(literal-prefix "${ANY_USER_HOME}/Library/Caches"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-any (literal "/private/var/tmp/com.apple.messages")
(literal "/private/var/containers")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.osanalytics")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp/com.apple.messages"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-any (literal "/private/var/db/fpsd")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud/CachedRecords"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'")))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'")))
			(require-all
				(storage-class "b'PassKit'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/wireless"))
(require-not (literal "/private/var/wireless/Library")))
				(require-any
					(require-any (literal "/private/var/root")
(literal "/private/var/root/Library"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(literal-prefix "${FRONT_USER_HOME}/Library/Metadata")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(subpath "/private/var/db/sysdiagnose")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'"))
						(literal "/private/var/db/sysdiagnose"))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
						(require-any
							(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-all
								(storage-class "b'CoreRoutine'")
								(require-any
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'SpeechPersonalizedLM'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
											(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-not (process-attribute is-initproc))
										(require-not (process-attribute is-installer))
										(storage-class "b'ManagedConfiguration'")
										(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
										(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'CoreFollowUp'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(signing-identifier "com.apple.followupd")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-not (process-attribute is-initproc))
										(require-not (process-attribute is-installer))
										(storage-class "b'ManagedConfiguration'")
										(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
										(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'MobileDocuments'")
								(require-any
									(process-attribute is-protoboxed)
									(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-all
										(process-attribute is-initproc)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(process-attribute is-installer)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(process-attribute is-datavault-controller)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(process-attribute is-sandboxed)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(entitlement-is-bool-true "b'task_for_pid-allow'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-not (process-attribute is-initproc))
												(require-not (process-attribute is-installer))
												(storage-class "b'ManagedConfiguration'")
												(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
												(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
							(require-all
								(storage-class "b'CognitiveHealth'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
									(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
							(require-all
								(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
								(require-any
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'HomeAI'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'StatusKit'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.StatusKitAgent")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")))
									(require-all
										(storage-class "b'Spotlight'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
									(require-all
										(storage-class "b'SpeechPersonalizedLM'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
											(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'SensorKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(signing-identifier "com.apple.CacheDeleteDaily")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-not (process-attribute is-initproc))
										(require-not (process-attribute is-installer))
										(storage-class "b'ManagedConfiguration'")
										(require-all (require-not (signing-identifier "com.apple.sysdiagnosed"))
(require-not (signing-identifier "com.apple.containermanagerd_system"))
(require-not (signing-identifier "com.apple.managedconfiguration.profiled")))
										(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'CarrierBundles'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'Accounts'")
								(require-any
									(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
									(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(process-attribute is-datavault-controller)
				(process-attribute is-installer))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'")))))))
(deny file-link
	(literal)
	(require-all
		(require-all (require-not (literal "/Developer/"))
(require-not (literal "/System/Developer/"))
(require-not (literal "/private/var/factory_mount/"))
(require-not (literal "/private/var/personalized_repair/"))
(require-not (literal "/private/var/personalized_quality/"))
(require-not (literal "/private/var/personalized_factory/"))
(require-not (literal "/private/var/personalized_demo/"))
(require-not (literal "/private/var/personalized_debug/"))
(require-not (literal "/private/var/personalized_automation/"))
(require-not (literal "/private/var/run/com.apple.security.cryptexd/mnt/")))
		(require-any
			(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
			(subpath "/private/var/OOPJit")
			(require-all
				(extension "b'com.apple.sandbox.oopjit'")
				(require-not (subpath "/private/var/OOPJit")))
			(require-all
				(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
				(require-all (require-not (subpath "/private/var/containers"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/")))
				(subpath "/private/var")
				(require-any
					(require-not (extension "b'com.apple.swift-playgrounds.executable'"))
					(require-all
						(entitlement-is-bool-true "b'get-task-allow'")
						(require-all (require-not (literal-prefix "${ANY_USER_HOME}/Containers/Data/"))
(require-not (literal-prefix "${ANY_USER_HOME}/Containers/Shared/"))
(require-not (literal-prefix "${ANY_USER_HOME}/Containers/AppGroup/"))))
					(require-all
						(literal "/private/var/MobileSoftwareUpdate/MobileAsset/MobileAssetBrain/")
						(require-all (require-not (signing-identifier "com.apple.mobileassetd"))
(require-not (signing-identifier "com.apple.STExtractionService"))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
						(require-not (entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'"))))))))
(deny file-lock
	(require-all
		(require-not (filesystem-name "devfs"))
		(require-any
			(storage-class-extension 0)
			(file-attribute sip-protected)
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-not (storage-class "b'ManagedConfiguration'"))
			(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
			(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'")))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'")))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'")))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'")))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'")))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.geod'")))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'")))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'")))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'")))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'")))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'")))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'")
					(process-attribute is-initproc))))))
(deny file-map-executable
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-all
		(require-not (process-attribute is-initproc))
		(require-any
			(file-attribute sip-protected)
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(require-all
						(literal "/private/var/CoreRepair/mnt")
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'"))
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/LiveFiles"))
(require-not (literal "/"))
(require-not (regex #"/.b/[0-9]/?")))
						(require-any
							(require-all
								(literal "/private/var/Users/")
								(require-not (regex #"^/private/var/Users/[-0-9A-F]+$" #"^/private/var/Users/[-0-9A-F]+/$")))
							(require-all
								(literal "/mnt")
								(require-not (regex #"^/mnt[1-9]/" #"^/mnt[1-9]$" #"^/mnt[1-9][0-9]+/" #"^/mnt[1-9][0-9]+$")))))
					(require-all
						(require-all (require-not (literal "/private/xarts"))
(require-not (literal "/private/preboot"))
(require-not (literal "/private/exclaves"))
(require-not (literal "/private/system_data"))
(require-not (literal "/private/var"))
(require-not (subpath "/private/var/mnt"))
(require-not (literal "/private/var/hardware"))
(require-not (subpath "/private/var/MobileSoftwareUpdate"))
(require-not (literal "/private/var/wireless/baseband_data"))
(require-not (literal "/private/var/cryptex_smartforwarder")))
						(require-any
							(require-all
								(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/LiveFiles"))
(require-not (literal "/"))
(require-not (regex #"/.b/[0-9]/?")))
								(require-any
									(require-all
										(literal "/private/var/Users/")
										(require-not (regex #"^/private/var/Users/[-0-9A-F]+$" #"^/private/var/Users/[-0-9A-F]+/$")))
									(require-all
										(literal "/mnt")
										(require-not (regex #"^/mnt[1-9]/" #"^/mnt[1-9]$" #"^/mnt[1-9][0-9]+/" #"^/mnt[1-9][0-9]+$")))))
							(require-all
								(require-ancestor-with-entitlement "b'com.apple.private.bindfs-allow'")
								(require-all (require-not (literal "/System/Library/Pearl/ReferenceFrames"))
(require-not (literal "/System/Library/Caches/com.apple.factorydata"))
(require-not (literal "/usr/standalone/firmware"))
(require-not (literal "/usr/local/standalone/firmware"))))))))
			(require-all
				(subpath "/private/var/run/com.apple.security.cryptexd/mnt")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'"))
				(require-not (signing-identifier "com.apple.MobileStorageMounter")))
			(require-all
				(require-any (subpath "/Developer")
(subpath "/System/Developer")
(subpath "/private/var/factory_mount")
(subpath "/private/var/personalized_automation")
(subpath "/private/var/personalized_repair")
(subpath "/private/var/personalized_factory")
(subpath "/private/var/personalized_quality")
(subpath "/private/var/personalized_demo")
(subpath "/private/var/personalized_debug"))
				(require-not (signing-identifier "com.apple.MobileStorageMounter")))
			(require-all
				(signing-identifier "com.apple.mobile_obliterator")
				(require-all (require-not (literal "/private/var"))
(require-not (literal "/private/var/mobile"))
(require-not (literal "/private/var/tmp"))
(require-not (subpath "/private/var/tmp/alt_root"))
(require-not (literal-prefix "${FRONT_USER_HOME}/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/alt_root"))))
			(require-all
				(ancestor-signing-identifier "com.apple.mobile_obliterator")
				(require-all (require-not (literal "/private/var"))
(require-not (literal "/private/var/mobile"))
(require-not (literal "/private/var/tmp"))
(require-not (subpath "/private/var/tmp/alt_root"))
(require-not (literal-prefix "${FRONT_USER_HOME}/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/alt_root"))))
			(require-all
				(literal "/private/var/mobile")
				(require-all (require-not (signing-identifier "com.apple.keybagd"))
(require-not (signing-identifier "com.apple.usermanagerd")))
				(require-not (ancestor-signing-identifier "com.apple.usermanagerd")))
			(require-all
				(require-not (storage-class-extension 0))
				(require-any
					(require-any (literal "/private/var/protected")
(literal "/private/var/protected/trustd"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Caches")
(literal-prefix "${FRONT_USER_HOME}/Library/Keyboard")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(file-attribute datavault)
					(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal "/private/var/tmp")
(literal-prefix "${ANY_USER_HOME}")
(literal-prefix "${ANY_USER_HOME}/tmp")
(literal-prefix "${ANY_USER_HOME}/Library")
(literal-prefix "${ANY_USER_HOME}/Library/Caches"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (literal "/private/var/tmp/com.apple.messages")
(literal "/private/var/containers")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.osanalytics")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp/com.apple.messages"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/private/var/db/fpsd")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud/CachedRecords"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'os_eligibility'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(storage-class "b'MobileBackupTmp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(signing-identifier "com.apple.MobileInstallationHelperService")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
					(require-all
						(storage-class "b'MobileBackup'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'")))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'MobileStorageMounter'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'")))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'trustd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/wireless"))
(require-not (literal "/private/var/wireless/Library")))
						(require-any
							(require-any (literal "/private/var/root")
(literal "/private/var/root/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(literal-prefix "${FRONT_USER_HOME}/Library/Metadata")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-all
								(storage-class "b'SiriReferenceResolution'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(subpath "/private/var/db/sysdiagnose")
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'"))
								(literal "/private/var/db/sysdiagnose"))
							(require-all
								(storage-class "b'SiriInference'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'SiriVocabulary'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'sysdiagnose.sysdiagnose'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
							(require-all
								(storage-class "b'sysdiagnose.springboard'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
							(require-all
								(storage-class "b'managedassets'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'sysdiagnose.ScreenshotServicesService'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
							(require-all
								(storage-class "b'SecureElementService'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'MobileContainerManager'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
									(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
							(require-all
								(storage-class "b'Lockdown'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(signing-identifier "com.apple.apsclient")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'BulletinDistributor'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'triald'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
									(entitlement-is-present "b'com.apple.trial.client'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")))
							(require-all
								(storage-class "b'Safari'")
								(require-any
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)))
							(require-all
								(storage-class "b'ExposureNotification'")
								(require-any
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)))
							(require-all
								(storage-class "b'TCC'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
								(require-any
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'CoreRoutine'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'SpeechPersonalizedLM'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
													(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
											(require-all
												(storage-class "b'WebClips'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'mis-profiles'")
												(require-any
													(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'automation-mode'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
											(require-all
												(storage-class "b'AppBundles'")
												(require-any
													(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(storage-class "b'ManagedConfiguration'")
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'amfid'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'CoreFollowUp'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.followupd")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
											(require-all
												(storage-class "b'WebClips'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'mis-profiles'")
												(require-any
													(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'automation-mode'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
											(require-all
												(storage-class "b'AppBundles'")
												(require-any
													(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(storage-class "b'ManagedConfiguration'")
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'amfid'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'MobileDocuments'")
										(require-any
											(process-attribute is-protoboxed)
											(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
											(require-all
												(process-attribute is-initproc)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(process-attribute is-installer)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(process-attribute is-datavault-controller)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(process-attribute is-sandboxed)
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(entitlement-is-bool-true "b'task_for_pid-allow'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))
											(require-all
												(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(process-attribute is-initproc)
													(process-attribute is-installer)))))
									(require-all
										(storage-class "b'CognitiveHealth'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
									(require-all
										(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal "/private/var/networkd")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
											(require-all
												(storage-class "b'TPM'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
											(require-all
												(storage-class "b'HomeAI'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
											(require-all
												(storage-class "b'SymptomFramework'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
											(require-all
												(storage-class "b'StatusKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.StatusKitAgent")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
											(require-all
												(storage-class "b'geod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
											(require-all
												(storage-class "b'Cryptex'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
											(require-all
												(storage-class "b'Spotlight'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
											(require-all
												(storage-class "b'demo_backup'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
											(require-all
												(storage-class "b'familycircled'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
											(require-all
												(storage-class "b'SoC'")
												(require-any
													(signing-identifier "com.apple.powerdatad")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
											(require-all
												(storage-class "b'SpeechPersonalizedLM'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
													(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
											(require-all
												(storage-class "b'chronod'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
											(require-all
												(storage-class "b'pipelined'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
											(require-all
												(storage-class "b'adprivacyd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
											(require-all
												(storage-class "b'idcredd'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
											(require-all
												(storage-class "b'SensorKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
											(require-all
												(storage-class "b'Shortcuts'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
											(require-all
												(storage-class "b'NanoTimeKit.FaceSupport'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
											(require-all
												(storage-class "b'CallHistory'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
													(signing-identifier "com.apple.CacheDeleteDaily")))
											(require-all
												(storage-class "b'Health'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
											(require-all
												(storage-class "b'WebClips'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
											(require-all
												(storage-class "b'Mail'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
											(require-all
												(storage-class "b'AppleMediaServices'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
											(require-all
												(storage-class "b'HomeKit'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
											(require-all
												(storage-class "b'FaceTime'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
											(require-all
												(storage-class "b'Voicemail'")
												(require-any
													(signing-identifier "com.apple.CacheDeleteDaily")
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
											(require-all
												(storage-class "b'PhotosLibraries'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
											(require-all
												(storage-class "b'mis-profiles'")
												(require-any
													(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")))
											(require-all
												(storage-class "b'Notes'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
											(require-all
												(storage-class "b'automation-mode'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
													(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
											(require-all
												(storage-class "b'AppBundles'")
												(require-any
													(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(storage-class "b'ManagedConfiguration'")
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))
											(require-all
												(storage-class "b'AppDataContainers'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
													(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
													(entitlement-is-bool-true "b'task_for_pid-allow'")
													(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
													(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
													(require-all
														(process-attribute is-sandboxed)
														(process-attribute is-protoboxed))))
											(require-all
												(storage-class "b'MessagesMetaData'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
													(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
											(require-all
												(storage-class "b'AppStoreCache'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
											(require-all
												(storage-class "b'Messages'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
													(literal)))
											(require-all
												(storage-class "b'amfid'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
													(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
											(require-all
												(storage-class "b'PrivacyAccounting'")
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(process-attribute is-datavault-controller)
													(signing-identifier "com.apple.privacyaccountingd")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
													(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
											(require-all
												(storage-class "b'IdentityServices'")
												(require-any
													(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
													(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
									(require-all
										(storage-class "b'CarrierBundles'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
											(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
									(require-all
										(storage-class "b'Accounts'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")
											(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))))
							(require-all
								(storage-class "b'Calendar'")
								(require-any
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
							(require-all
								(storage-class "b'coreduet_knowledge_store'")
								(require-any
									(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
									(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
							(require-all
								(storage-class "b'Suggestions'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(process-attribute is-datavault-controller)
						(process-attribute is-installer))
					(require-all
						(storage-class "b'Wireless'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'")))))))))
(deny file-mount
	(require-all
		(debug-mode)
		(persona-type PERSONA_MANAGED)
		(require-any
			(extension "b'com.apple.mediaserverd.read-write'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.mediaserverd.read'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Containers"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Notes"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Calendar"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mail"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mobile Documents")))))
	(require-all
		(literal "/private/var/PersonaVolumes/")
		(debug-mode)
		(require-any
			(persona-type PERSONA_MANAGED)
			(entitlement-is-bool-true "b'com.apple.security.enterprise-volume-access'")
			(extension "b'com.apple.mediaserverd.read-write'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.mediaserverd.read'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+$"))))
	(require-all
		(subpath "/private/var/OOPJit")
		(require-not (entitlement-is-present "b'com.apple.private.oop-jit.loader'"))
		(require-not (extension "b'com.apple.sandbox.oopjit'"))
		(require-any
			(require-not (signing-identifier "com.apple.mobile_obliterator"))
			(literal "/private/var/OOPJit/anchor")
			(require-not (literal "/private/var/OOPJit"))
			(require-not (vnode-type DIRECTORY))))
	(require-all
		(extension "b'com.apple.swift-playgrounds.executable'")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
		(require-not (entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
	(require-all
		(subpath "/private/var/CoreRepair/mnt")
		(require-any
			(require-not (process-attribute is-apple-signed-executable))
			(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'"))))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.rsync")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.PineBoard")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.newsd")
(signing-identifier "com.apple.nanonewscd")
(signing-identifier "com.apple.ReportMemoryException"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'os_eligibility'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readonly'"))
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-only'")
						(require-not (storage-class "b'DiagnosticReports'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(require-not (subpath "/private/var/db/sysdiagnose")))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined.read-only'")
						(require-not (subpath "/private/var/root/Library/Caches/com.apple.pipelined")))
					(require-all
						(storage-class "b'idcredd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.home-from-system-session-persona'")
						(process-attribute 14)
						(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(process-attribute is-sandboxed)
						(require-not (process-attribute is-protoboxed))
						(require-any
							(require-all
								(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
								(require-all (require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.StoreServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")))
								(require-any
									(require-not (literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored"))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
										(require-not (subpath-prefix "${HOME}")))))
							(require-all
								(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.librarian.ubiquity-revision'"))
								(require-any
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.librarian.ubiquity-revision'"))
								(require-any
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.clouddocs.version'")))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.clouddocs.version'")))
							(require-all
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-any
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
							(require-all
								(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
								(vnode-type REGULAR-FILE)
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.clouddocs.version'")))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
								(vnode-type REGULAR-FILE)
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-not (extension "b'com.apple.clouddocs.version'")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.watchlist.private'")
								(require-all (require-not (subpath-prefix "${HOME}/Library/com.apple.WatchListKit"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache"))))
							(require-all
								(entitlement-is-present "b'com.apple.trial.client'")
								(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Trial/NamespaceDescriptors"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Trial/Treatments/${ENTITLEMENT:com.apple.trial.client}"))))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")
								(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")
								(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")
								(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.proactive.AppPrediction.predictions'")
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/DuetExpertCenter/caches")))
							(require-all
								(subpath-prefix "${HOME}/Library/Caches/com.apple.proactive.eventtracker")
								(require-not (entitlement-is-bool-true "b'com.apple.proactive.eventtracker'")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.avatar.store'")
								(require-all (require-not (subpath-prefix "${HOME}/Library/Avatar"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AvatarUI"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AvatarKit"))))
							(require-all
								(subpath-prefix "${HOME}/Library/Assets")
								(entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'")
								(require-not (extension "b'com.apple.assets.read'")))
							(require-all
								(subpath "/private/var/MobileAsset")
								(entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'")
								(require-not (extension "b'com.apple.assets.read'")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.coreduetd.allow'")
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.contactsui'")
								(require-all (require-not (literal-prefix "${HOME}/Library/Caches/PassKit/cache.plist"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist"))))
							(require-all
								(literal "/dev/ttys")
								(extension "b'com.apple.sandbox.pty'")
								(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
								(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'"))
							(require-all
								(literal "/dev/ptmx")
								(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'"))))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(process-attribute 14)
						(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
					(require-all
						(storage-class "b'Mail'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.followupd")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'FaceTime'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(process-attribute is-protoboxed)
							(process-attribute is-sandboxed)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Accounts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'HomeAI'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(process-attribute is-sandboxed)
						(process-attribute is-protoboxed))
					(require-all
						(storage-class "b'StatusKit'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.StatusKitAgent")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Spotlight'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
					(require-all
						(storage-class "b'AppDataContainers'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SensorKit'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
					(require-all
						(storage-class "b'TPM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
					(require-all
						(storage-class "b'Cryptex'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SoC'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.powerdatad")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
					(require-all
						(storage-class "b'geod'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
					(require-all
						(storage-class "b'demo_backup'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
					(require-all
						(storage-class "b'familycircled'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
					(require-all
						(storage-class "b'chronod'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
							(process-attribute is-installer)))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")))
					(require-all
						(storage-class "b'CallHistory'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Health'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'HomeKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
					(require-all
						(storage-class "b'Voicemail'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Notes'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Messages'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
							(literal)
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.privacyaccountingd")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'pipelined'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'"))))))))
(deny file-mount-update
	(require-all
		(vnode-type DIRECTORY)
		(entitlement-is-present "b'com.apple.private.security.storage.tmp'")
		(require-all (require-not (subpath "/private/var/tmp"))
(require-not (literal "/private/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp"))))
	(require-all
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.stockholm.allow'")
			(require-all
				(mount-relativeliteral)
				(require-all (require-not (signing-identifier "com.apple.pair_stockholm"))
(require-not (signing-identifier "com.apple.ramrod"))
(require-not (signing-identifier "com.apple.restored"))
(require-not (signing-identifier "com.apple.restored_update"))
(require-not (signing-identifier "com.apple.restored_external"))))))
	(require-all
		(device-conforms-to "b'IOMedia'")
		(require-not (entitlement-is-bool-true "b'com.apple.private.security.disk-device-access'")))
	(require-all
		(vnode-type DIRECTORY)
		(require-not (entitlement-is-bool-true "b'com.apple.rootless.datavault.metadata'")))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'os_eligibility'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readonly'"))
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-only'")
						(require-not (storage-class "b'DiagnosticReports'")))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(require-not (subpath "/private/var/db/sysdiagnose")))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Safari"))
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(process-attribute is-sandboxed)
						(require-any
							(process-attribute is-protoboxed)
							(require-all
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-any
									(require-all
										(vnode-type REGULAR-FILE)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(require-not (extension "b'com.apple.revisiond.staging'")))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(require-not (extension "b'com.apple.revisiond.revision'")))))
									(require-all
										(vnode-type DIRECTORY)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(require-not (extension "b'com.apple.revisiond.staging'")))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(require-not (extension "b'com.apple.revisiond.revision'")))))
									(require-all
										(vnode-type SYMLINK)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(require-not (extension "b'com.apple.revisiond.staging'")))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(require-not (extension "b'com.apple.revisiond.revision'")))))))))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.followupd")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(require-all
								(process-attribute is-sandboxed)
								(require-any
									(process-attribute is-protoboxed)
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(vnode-type DIRECTORY)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(vnode-type SYMLINK)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))))))))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'Accounts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'HomeAI'")
						(require-any
							(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'StatusKit'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.StatusKitAgent")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Spotlight'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SensorKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'TPM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Cryptex'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
					(require-all
						(storage-class "b'SoC'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.powerdatad")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
					(require-all
						(storage-class "b'geod'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
					(require-all
						(storage-class "b'demo_backup'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'familycircled'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'chronod'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'CallHistory'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Health'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'HomeKit'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'Voicemail'")
						(require-any
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Notes'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Messages'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
							(literal)
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.privacyaccountingd")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'pipelined'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'idcredd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Mail'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
					(require-all
						(storage-class "b'FaceTime'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'AppDataContainers'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
							(require-all
								(process-attribute is-sandboxed)
								(require-any
									(process-attribute is-protoboxed)
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(vnode-type DIRECTORY)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(vnode-type SYMLINK)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'"))))))))))))))))
(deny file-read*
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal "/private/var/CoreRepair/mnt")
		(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'")))
	(require-all
		(require-not (entitlement-is-bool-true "b'com.apple.rootless.datavault.metadata'"))
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(entitlement-is-present "b'com.apple.private.security.storage.tmp'")
				(require-all (require-not (subpath "/private/var/tmp"))
(require-not (literal "/private/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp"))))
			(require-all
				(require-not (storage-class "b'AppDataContainers'"))
				(require-any
					(require-all
						(storage-class "b'os_eligibility'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readonly'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-only'")))
					(require-all
						(require-not (file-attribute sip-protected))
						(require-any
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
								(require-not (subpath "/private/var/db/sysdiagnose")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
								(require-not (literal-prefix "${FRONT_USER_HOME}/Library/Safari"))
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
								(require-not (subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(process-attribute is-sandboxed)
								(require-any
									(process-attribute is-protoboxed)
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-all (require-not (literal-prefix "${HOME}/Library"))
(require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))
									(require-all
										(require-any (literal-prefix "${HOME}")
(literal-prefix "${HOME}/Library/Preferences"))
										(require-not (entitlement-is-present "b'com.apple.developer.icloud-services'"))
										(require-any
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.ids.remotecredentials'")
												(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
											(require-all
												(require-not (entitlement-is-bool-true "b'com.apple.private.ids.remoteurlconnection'"))
												(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'"))
												(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'"))
												(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'"))
												(require-not (entitlement-is-bool-true "b'com.apple.private.avatar.store'"))
												(require-not (entitlement-is-bool-true "b'com.apple.avfoundation.allows-access-to-device-list'"))
												(require-not (entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'"))
												(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'"))
												(require-not (entitlement-is-bool-true "b'com.apple.bulletinboard.dataprovider'"))
												(require-not (entitlement-is-bool-true "b'com.apple.coreduetd.allow'")))))
									(require-all
										(vnode-type DIRECTORY)
										(require-any
											(require-all
												(require-any (literal-prefix "${HOME}/Library/Mobile Documents")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
												(require-not (entitlement-is-present "b'com.apple.developer.icloud-services'")))
											(require-all
												(entitlement-is-present "b'com.apple.developer.icloud-services'")
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
														(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
													(require-all
														(vnode-type SYMLINK)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(extension "b'com.apple.librarian.ubiquity-container'")
														(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))))
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-all (require-not (literal-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(vnode-type SYMLINK)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(vnode-type SYMLINK)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(require-not (extension "b'com.apple.revisiond.staging'")))
													(require-all
														(vnode-type REGULAR-FILE)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(vnode-type DIRECTORY)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))
													(require-all
														(vnode-type SYMLINK)
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(require-not (extension "b'com.apple.revisiond.revision'")))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.watchlist.private'")
										(require-all (require-not (literal-prefix "${HOME}/Library/Caches/sharedCaches"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
										(require-all (require-not (literal-prefix "${HOME}/Library/Caches/sharedCaches"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache"))))
									(require-all
										(entitlement-is-present "b'com.apple.private.applemediaservices'")
										(require-all (require-not (literal-prefix "${FRONT_USER_HOME}/Library/Caches"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))))))))))))
(deny file-read-data
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(require-all
				(require-not (file-attribute sip-protected))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-all
						(storage-class "b'os_eligibility'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readonly'"))
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-only'")
						(require-not (storage-class "b'DiagnosticReports'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))
							(process-attribute is-initproc)
							(process-attribute is-datavault-controller)
							(process-attribute is-installer)))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
					(require-all
						(storage-class "b'PassKit'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(require-not (subpath "/private/var/db/sysdiagnose")))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(process-attribute is-sandboxed)
						(require-any
							(process-attribute is-protoboxed)
							(require-all
								(entitlement-is-present "b'com.apple.developer.icloud-services'")
								(require-any
									(require-all
										(vnode-type REGULAR-FILE)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(extension "b'com.apple.revisiond.staging'"))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(extension "b'com.apple.revisiond.revision'"))))
									(require-all
										(vnode-type DIRECTORY)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(extension "b'com.apple.revisiond.staging'"))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(extension "b'com.apple.revisiond.revision'"))))
									(require-all
										(vnode-type SYMLINK)
										(require-any
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
												(extension "b'com.apple.revisiond.staging'"))
											(require-all
												(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
												(extension "b'com.apple.revisiond.revision'"))))))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.followupd")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(require-all
								(process-attribute is-sandboxed)
								(require-any
									(process-attribute is-protoboxed)
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'"))))
											(require-all
												(vnode-type DIRECTORY)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'"))))
											(require-all
												(vnode-type SYMLINK)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'"))))))))))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'")))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")))
					(require-all
						(storage-class "b'Accounts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'HomeAI'")
						(require-any
							(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'StatusKit'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.StatusKitAgent")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
					(require-all
						(storage-class "b'Spotlight'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SensorKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'TPM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'")))
					(require-all
						(storage-class "b'Cryptex'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'")))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'")))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")))
					(require-all
						(storage-class "b'SoC'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.powerdatad")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'")))
					(require-all
						(storage-class "b'geod'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.geod'")))
					(require-all
						(storage-class "b'demo_backup'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'familycircled'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'chronod'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'CallHistory'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Health'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'HomeKit'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'Voicemail'")
						(require-any
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Notes'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Messages'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
							(literal)
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.privacyaccountingd")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'pipelined'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'idcredd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Mail'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'")))
					(require-all
						(storage-class "b'FaceTime'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'")))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'AppDataContainers'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(require-any (signing-identifier "com.apple.rsync")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.PineBoard")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.newsd")
(signing-identifier "com.apple.nanonewscd")
(signing-identifier "com.apple.ReportMemoryException"))
							(require-all
								(process-attribute is-sandboxed)
								(require-any
									(process-attribute is-protoboxed)
									(require-all
										(entitlement-is-present "b'com.apple.developer.icloud-services'")
										(require-any
											(require-all
												(vnode-type REGULAR-FILE)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'"))))
											(require-all
												(vnode-type DIRECTORY)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'"))))
											(require-all
												(vnode-type SYMLINK)
												(require-any
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))
														(extension "b'com.apple.revisiond.staging'"))
													(require-all
														(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
														(extension "b'com.apple.revisiond.revision'")))))))))))))))
(deny file-read-metadata
	(file-attribute sip-protected)
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'Safari'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'"))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'"))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'Calendar'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'"))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'"))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'"))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'"))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(signing-identifier "com.apple.followupd")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'"))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (process-attribute is-datavault-controller))
				(require-any
					(require-all
						(process-attribute is-protoboxed)
						(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'"))
						(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'"))
						(require-any
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(require-not (process-attribute is-sandboxed))
						(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'"))
						(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'"))
						(require-any
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'"))
				(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
			(require-all
				(storage-class "b'Accounts'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
				(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'"))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'"))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(signing-identifier "com.apple.StatusKitAgent")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'"))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'"))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'"))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'"))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'TPM'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")))
			(require-all
				(storage-class "b'Cryptex'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(signing-identifier "com.apple.powerdatad")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'geod'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))
			(require-all
				(storage-class "b'demo_backup'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'"))
			(require-all
				(storage-class "b'familycircled'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'"))
			(require-all
				(storage-class "b'chronod'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'"))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'adprivacyd'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'"))
			(require-all
				(storage-class "b'Shortcuts'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'"))
			(require-all
				(storage-class "b'CallHistory'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
				(signing-identifier "com.apple.CacheDeleteDaily")
				(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
			(require-all
				(storage-class "b'Health'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'"))
			(require-all
				(storage-class "b'HomeKit'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))
			(require-all
				(storage-class "b'Voicemail'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
				(signing-identifier "com.apple.CacheDeleteDaily")
				(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'"))
			(require-all
				(storage-class "b'Notes'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'"))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
				(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'"))
			(require-all
				(storage-class "b'Messages'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
				(literal))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(signing-identifier "com.apple.privacyaccountingd")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'"))
			(require-all
				(storage-class "b'IdentityServices'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
				(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files")))
			(require-all
				(storage-class "b'pipelined'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'"))
			(require-all
				(storage-class "b'idcredd'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'"))
			(require-all
				(storage-class "b'WebClips'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'"))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'")))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'"))
			(require-all
				(storage-class "b'Mail'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'"))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
				(entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))
			(require-all
				(storage-class "b'FaceTime'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))
			(require-all
				(storage-class "b'AppStoreCache'")
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(process-attribute is-datavault-controller)
				(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
				(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'"))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (process-attribute is-datavault-controller))
				(require-any
					(require-all
						(process-attribute is-protoboxed)
						(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.container-manager'"))
						(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
						(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException"))))
					(require-all
						(require-not (process-attribute is-sandboxed))
						(require-not (entitlement-is-bool-true "b'com.apple.system-task-ports.control'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'"))
						(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.container-manager'"))
						(require-not (entitlement-is-bool-true "b'task_for_pid-allow'"))
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
						(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException"))))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-all (require-not (signing-identifier "com.apple.Preferences"))
(require-not (signing-identifier "com.apple.containermanagerd")))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'")))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'"))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'")))
			(require-all
				(storage-class "b'automation-mode'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'"))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'")))
			(require-all
				(storage-class "b'amfid'")
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-installer))
				(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'")))
			(require-all
				(process-attribute is-initproc)
				(process-attribute is-installer)
				(storage-class "b'ManagedConfiguration'")
				(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
				(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))
(deny file-revoke
	(require-all
		(require-not (process-attribute is-protoboxed))
		(process-attribute is-sandboxed)
		(require-not (file-attribute sip-protected))
		(require-any
			(require-all
				(entitlement-is-bool-true "b'com.apple.watchlist.private'")
				(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache")))
			(require-all
				(entitlement-is-present "b'com.apple.private.applemediaservices'")
				(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices")))
			(require-all
				(entitlement-is-present "b'com.apple.developer.icloud-services'")
				(require-any
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
			(require-all
				(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
(deny file-search
	(require-all
		(require-not (process-attribute is-initproc))
		(require-not (signing-identifier "com.apple.restored"))
		(regex #".+")
		(require-any
			(file-attribute sip-protected)
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(require-all
						(literal "/private/var/CoreRepair/mnt")
						(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'"))
						(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/LiveFiles"))
(require-not (regex #"/.b/[0-9]/?")))
						(require-any
							(require-all
								(literal "/private/var/Users/")
								(require-not (regex #"^/private/var/Users/[-0-9A-F]+$" #"^/private/var/Users/[-0-9A-F]+/$")))
							(require-all
								(literal "/mnt")
								(require-not (regex #"^/mnt[1-9]/" #"^/mnt[1-9]$" #"^/mnt[1-9][0-9]+/" #"^/mnt[1-9][0-9]+$")))))
					(require-all
						(require-all (require-not (literal "/private/xarts"))
(require-not (literal "/private/preboot"))
(require-not (literal "/private/exclaves"))
(require-not (literal "/private/system_data"))
(require-not (literal "/private/var"))
(require-not (subpath "/private/var/mnt"))
(require-not (literal "/private/var/hardware"))
(require-not (subpath "/private/var/MobileSoftwareUpdate"))
(require-not (literal "/private/var/wireless/baseband_data"))
(require-not (literal "/private/var/cryptex_smartforwarder")))
						(require-any
							(require-all
								(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/LiveFiles"))
(require-not (regex #"/.b/[0-9]/?")))
								(require-any
									(require-all
										(literal "/private/var/Users/")
										(require-not (regex #"^/private/var/Users/[-0-9A-F]+$" #"^/private/var/Users/[-0-9A-F]+/$")))
									(require-all
										(literal "/mnt")
										(require-not (regex #"^/mnt[1-9]/" #"^/mnt[1-9]$" #"^/mnt[1-9][0-9]+/" #"^/mnt[1-9][0-9]+$")))))
							(require-all
								(require-ancestor-with-entitlement "b'com.apple.private.bindfs-allow'")
								(require-all (require-not (literal "/System/Library/Pearl/ReferenceFrames"))
(require-not (literal "/System/Library/Caches/com.apple.factorydata"))
(require-not (literal "/usr/standalone/firmware"))
(require-not (literal "/usr/local/standalone/firmware"))))))))
			(require-all
				(subpath "/private/var/run/com.apple.security.cryptexd/mnt")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'"))
				(require-not (signing-identifier "com.apple.MobileStorageMounter")))
			(require-all
				(require-any (subpath "/Developer")
(subpath "/System/Developer")
(subpath "/private/var/factory_mount")
(subpath "/private/var/personalized_automation")
(subpath "/private/var/personalized_repair")
(subpath "/private/var/personalized_factory")
(subpath "/private/var/personalized_quality")
(subpath "/private/var/personalized_demo")
(subpath "/private/var/personalized_debug"))
				(require-not (signing-identifier "com.apple.MobileStorageMounter")))
			(require-all
				(signing-identifier "com.apple.mobile_obliterator")
				(require-all (require-not (literal "/private/var"))
(require-not (literal "/private/var/mobile"))
(require-not (literal "/private/var/tmp"))
(require-not (subpath "/private/var/tmp/alt_root"))
(require-not (literal-prefix "${FRONT_USER_HOME}/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/alt_root"))))
			(require-all
				(ancestor-signing-identifier "com.apple.mobile_obliterator")
				(require-all (require-not (literal "/private/var"))
(require-not (literal "/private/var/mobile"))
(require-not (literal "/private/var/tmp"))
(require-not (subpath "/private/var/tmp/alt_root"))
(require-not (literal-prefix "${FRONT_USER_HOME}/tmp"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/alt_root"))))
			(require-all
				(literal "/private/var/mobile")
				(require-all (require-not (signing-identifier "com.apple.keybagd"))
(require-not (signing-identifier "com.apple.usermanagerd")))
				(require-not (ancestor-signing-identifier "com.apple.usermanagerd")))
			(require-all
				(require-not (storage-class-extension 0))
				(require-any
					(file-attribute datavault)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(storage-class "b'ManagedConfiguration'")
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")
					(require-all
						(storage-class "b'os_eligibility'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'")))
					(require-all
						(storage-class "b'MobileBackupTmp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(signing-identifier "com.apple.MobileInstallationHelperService")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'")))
					(require-all
						(storage-class "b'MobileBackup'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'")))
					(require-all
						(storage-class "b'MobileStorageMounter'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
						(subpath "/private/var/db/sysdiagnose"))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'")))
					(require-all
						(storage-class "b'PassKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'")))
					(require-all
						(storage-class "b'DiagnosticReports'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark"))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'")))
					(require-all
						(storage-class "b'DoNotDisturb'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'")))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Weather'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'")))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'")))
					(require-all
						(storage-class "b'SoundProfileAsset'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)))
					(require-all
						(storage-class "b'fpsd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'")))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
					(require-all
						(storage-class "b'CoreRoutine'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SiriSELF'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'")))
					(require-all
						(storage-class "b'CoreFollowUp'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.followupd")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'IntelligencePlatform'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'")))
					(require-all
						(storage-class "b'MobileDocuments'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(process-attribute is-protoboxed)
							(process-attribute is-sandboxed)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
							(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'DumpPanic'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'")))
					(require-all
						(storage-class "b'trustd-private'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'")))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'CognitiveHealth'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'")))
					(require-all
						(storage-class "b'trustd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'")))
					(require-all
						(storage-class "b'CarrierBundles'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'clipserviced'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'")))
					(require-all
						(storage-class "b'Accounts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
					(require-all
						(storage-class "b'sessionkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'")))
					(require-all
						(storage-class "b'HomeAI'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
					(require-all
						(storage-class "b'driverkitd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'")))
					(require-all
						(storage-class "b'StatusKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.StatusKitAgent")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'ContactlessReader'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'")))
					(require-all
						(storage-class "b'Spotlight'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SensorKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'PineBoard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'")))
					(require-all
						(storage-class "b'SpeechPersonalizedLM'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
					(require-all
						(storage-class "b'kbd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'")))
					(require-all
						(storage-class "b'TPM'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'")))
					(require-all
						(storage-class "b'Biome'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Cryptex'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'")))
					(require-all
						(storage-class "b'Wireless'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
					(require-all
						(storage-class "b'SymptomFramework'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'")))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SoC'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.powerdatad")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'")))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'geod'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.geod'")))
					(require-all
						(storage-class "b'demo_backup'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")))
					(require-all
						(storage-class "b'familycircled'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
					(require-all
						(storage-class "b'chronod'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'adprivacyd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Shortcuts'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'CallHistory'")
						(require-any
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)))
					(require-all
						(storage-class "b'Health'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
					(require-all
						(storage-class "b'HomeKit'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'")))
					(require-all
						(storage-class "b'Voicemail'")
						(require-any
							(signing-identifier "com.apple.CacheDeleteDaily")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
					(require-all
						(storage-class "b'PhotosLibraries'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'Notes'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'MessagesMetaData'")
						(require-any
							(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'Messages'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
							(literal)))
					(require-all
						(storage-class "b'PrivacyAccounting'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.privacyaccountingd")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
					(require-all
						(storage-class "b'IdentityServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'pipelined'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'idcredd'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'WebClips'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")))
					(require-all
						(storage-class "b'NanoTimeKit.FaceSupport'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
					(require-all
						(storage-class "b'Mail'")
						(require-any
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
					(require-all
						(storage-class "b'AppleMediaServices'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'")))
					(require-all
						(storage-class "b'FaceTime'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'")))
					(require-all
						(storage-class "b'AppStoreCache'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
					(require-all
						(storage-class "b'AppDataContainers'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(process-attribute is-protoboxed)
							(process-attribute is-sandboxed)
							(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
							(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
							(entitlement-is-bool-true "b'task_for_pid-allow'")
							(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
							(require-any (signing-identifier "com.apple.rsync")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.PineBoard")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.newsd")
(signing-identifier "com.apple.nanonewscd")
(signing-identifier "com.apple.ReportMemoryException"))))
					(require-all
						(storage-class "b'AppBundles'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")))
					(require-all
						(storage-class "b'mis-profiles'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
							(entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'")))
					(require-all
						(storage-class "b'automation-mode'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'")))
					(require-all
						(storage-class "b'amfid'")
						(require-any
							(process-attribute is-installer)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'")
							(process-attribute is-initproc))))))))
(deny file-test-existence
	(subpath "/private/var/OOPJit")
	(literal "/private/var/MobileSoftwareUpdate/MobileAsset/MobileAssetBrain/")
	(subpath "/private/var/CoreRepair/mnt")
	(entitlement-is-bool-true "b'com.apple.private.security.disk-device-access'")
	(literal "/private/var/MobileSoftwareUpdate/mnt")
	(file-attribute sip-protected)
	(device-conforms-to "b'IOMedia'")
	(require-all
		(debug-mode)
		(persona-type PERSONA_MANAGED)
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Containers"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Notes"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Calendar"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mail"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mobile Documents")))
			(extension "b'com.apple.mediaserverd.read-write'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.mediaserverd.read'")))
	(require-all
		(literal "/private/var/PersonaVolumes/")
		(debug-mode)
		(require-any
			(persona-type PERSONA_MANAGED)
			(entitlement-is-bool-true "b'com.apple.security.enterprise-volume-access'")
			(extension "b'com.apple.mediaserverd.read-write'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.mediaserverd.read'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+$"))))
	(require-all
		(signing-identifier "com.apple.mobile_obliterator")
		(require-not (literal "/private/var/OOPJit/anchor")))
	(require-all
		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
		(require-not (subpath "/private/var/OOPJit")))
	(require-all
		(require-any (signing-identifier "com.apple.mobileassetd")
(signing-identifier "com.apple.STExtractionService"))
		(require-not (literal "/private/var/MobileSoftwareUpdate/MobileAsset/MobileAssetBrain/")))
	(require-all
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.stockholm.allow'")
			(require-all
				(mount-relativeliteral)
				(require-all (require-not (signing-identifier "com.apple.pair_stockholm"))
(require-not (signing-identifier "com.apple.ramrod"))
(require-not (signing-identifier "com.apple.restored"))
(require-not (signing-identifier "com.apple.restored_update"))
(require-not (signing-identifier "com.apple.restored_external"))))))
	(require-all
		(subpath "/private/var/CoreRepair/mnt/System/Library/Caches/com.apple.factorydata")
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-ancestor-with-entitlement "b'com.apple.private.core-repair'")))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(subpath "/private/var/db/com.apple.xpc.roleaccountd.staging")
			(subpath "/private/var/run/com.apple.security.cryptexd/mnt")
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
			(require-all
				(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.dt.xctest.automation-mode.plist")
				(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.home-from-system-session-persona'")
				(process-attribute 14)
				(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
			(require-all
				(signing-identifier "com.apple.NRD.UpdateBrainService")
				(require-not (literal "/private/var/db/com.apple.xpc.roleaccountd.staging/exec/com.apple.NRD.UpdateBrainService")))
			(require-all
				(process-attribute 14)
				(require-not (subpath-prefix "/private/var/Users/${ANY_UUID}")))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(signing-identifier "com.apple.xpc.roleaccountd")
				(require-not (subpath "/private/var/db/com.apple.xpc.roleaccountd.staging")))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(signing-identifier "com.apple.MobileSoftwareUpdate.UpdateBrainService")
				(require-not (literal "/private/var/db/com.apple.xpc.roleaccountd.staging/exec/com.apple.MobileSoftwareUpdate.UpdateBrainService")))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")))
			(require-all
				(process-attribute is-sandboxed)
				(require-not (process-attribute is-protoboxed))
				(require-any
					(require-all
						(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
						(require-all (require-not (subpath-prefix "${HOME}/Library/Logs/com.apple.StoreServices"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")))
						(require-any
							(require-not (literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
								(require-not (subpath-prefix "${HOME}")))))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(entitlement-is-present "b'com.apple.developer.icloud-services'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'"))
						(require-not (extension "b'com.apple.librarian.ubiquity-container'"))
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type DIRECTORY)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type SYMLINK)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))
						(entitlement-is-present "b'com.apple.developer.icloud-services'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'"))
						(require-not (extension "b'com.apple.librarian.ubiquity-container'"))
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type DIRECTORY)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type SYMLINK)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
						(entitlement-is-present "b'com.apple.developer.icloud-services'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'"))
						(require-not (extension "b'com.apple.librarian.ubiquity-container'"))
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type DIRECTORY)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type SYMLINK)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))))
					(require-all
						(entitlement-is-present "b'com.apple.developer.icloud-services'")
						(require-any
							(require-all
								(vnode-type REGULAR-FILE)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type DIRECTORY)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))
							(require-all
								(vnode-type SYMLINK)
								(extension "b'com.apple.revisiond.staging'")
								(require-all (require-not (subpath "/private/var/.DocumentRevisions-V100/staging"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging"))))))
					(require-all
						(entitlement-is-present "b'com.apple.private.applemediaservices'")
						(require-any
							(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppleMediaServices"))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")))
							(require-all
								(vnode-type DIRECTORY)
								(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleMediaServices")))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.watchlist.private'")
						(require-all (require-not (subpath-prefix "${HOME}/Library/com.apple.WatchListKit"))
(require-not (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache"))))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/com.apple.proactive.eventtracker")
						(require-not (entitlement-is-bool-true "b'com.apple.proactive.eventtracker'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.contactsui'")
						(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/CoreDuet/Knowledge")
						(entitlement-is-bool-true "b'com.apple.coreduetd.allow'"))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.avatar.store'")
						(require-all (require-not (subpath-prefix "${HOME}/Library/Avatar"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AvatarUI"))
(require-not (subpath-prefix "${HOME}/Library/Caches/com.apple.AvatarKit"))))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(process-attribute is-initproc)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'")))))))
(deny file-unmount
	(file-attribute sip-protected)
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
(deny file-write*
	(literal "/AppleInternal")
	(file-attribute sip-protected)
	(require-all
		(require-any (subpath "/System/Developer")
(subpath "/Developer"))
		(require-not (signing-identifier "com.apple.MobileStorageMounter")))
	(require-all
		(subpath "/private/var/run/com.apple.security.cryptexd/mnt")
		(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'"))
		(require-not (signing-identifier "com.apple.MobileStorageMounter")))
	(require-all
		(require-any (subpath "/private/var/factory_mount")
(subpath "/private/var/personalized_debug")
(subpath "/private/var/personalized_demo")
(subpath "/private/var/personalized_repair")
(subpath "/private/var/personalized_factory")
(subpath "/private/var/personalized_quality")
(subpath "/private/var/personalized_automation"))
		(require-not (signing-identifier "com.apple.MobileStorageMounter")))
	(require-all
		(literal "/private/var/OOPJit")
		(vnode-type DIRECTORY)
		(require-not (signing-identifier "com.apple.mobile_obliterator")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(literal "/private/var/CoreRepair/mnt")
		(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'")))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(file-attribute datavault)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(require-any (literal-prefix "${HOME}/Library/Mobile Documents")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))
						(process-attribute is-sandboxed)
						(require-any
							(process-attribute is-protoboxed)
							(require-all
								(require-not (entitlement-is-present "b'com.apple.developer.icloud-services'"))
								(require-any
									(vnode-type DIRECTORY)
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
										(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
						(literal-prefix "${HOME}/Library/Caches/sharedCaches")
						(process-attribute is-sandboxed)
						(process-attribute is-protoboxed))
					(require-all
						(process-attribute is-sandboxed)
						(require-any
							(vnode-type DIRECTORY)
							(process-attribute is-protoboxed)
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
								(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
							(require-all
								(literal-prefix "${HOME}/Library/Caches/sharedCaches")
								(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.WatchListKit.NSURLCache")
				(entitlement-is-bool-true "b'com.apple.watchlist.private'")
				(process-attribute is-sandboxed)
				(require-not (process-attribute is-protoboxed)))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
				(literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.iTunesStore.NSURLCache")
				(process-attribute is-sandboxed)
				(require-not (process-attribute is-protoboxed)))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-initproc)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
(deny file-write-acl
	(file-attribute sip-protected)
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(process-attribute is-sandboxed)
				(require-any
					(process-attribute is-protoboxed)
					(require-all
						(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'")
						(require-any
							(require-not (literal "/dev/ptmx"))
							(require-all
								(literal "/dev/ttys")
								(extension "b'com.apple.sandbox.pty'")
								(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))))))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(require-all
						(process-attribute is-sandboxed)
						(require-any
							(process-attribute is-protoboxed)
							(require-all
								(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'")
								(require-any
									(require-not (literal "/dev/ptmx"))
									(require-all
										(literal "/dev/ttys")
										(extension "b'com.apple.sandbox.pty'")
										(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))))))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
					(require-all
						(process-attribute is-sandboxed)
						(require-any
							(process-attribute is-protoboxed)
							(require-all
								(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'")
								(require-any
									(require-not (literal "/dev/ptmx"))
									(require-all
										(literal "/dev/ttys")
										(extension "b'com.apple.sandbox.pty'")
										(require-not (regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")))))))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
(deny file-write-finderinfo
	(file-attribute sip-protected)
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(file-attribute datavault)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'")
				(require-not (subpath "/private/var/db/sysdiagnose")))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'"))))
			(require-all
				(storage-class "b'sysdiagnose.sysdiagnose'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
			(require-all
				(storage-class "b'sysdiagnose.springboard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
			(require-all
				(storage-class "b'sysdiagnose.ScreenshotServicesService'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'"))))
			(require-all
				(storage-class "b'managedassets'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")))
			(require-all
				(storage-class "b'BulletinDistributor'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'Safari'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'ExposureNotification'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'")
				(literal "/dev/ttys")
				(extension "b'com.apple.sandbox.pty'")
				(regex #"^/dev/ttys[0-9]" #"^/dev/ttys[0-9]+")
				(process-attribute is-sandboxed)
				(process-attribute is-protoboxed))
			(require-all
				(storage-class "b'MobileContainerManager'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'Calendar'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")))
			(require-all
				(storage-class "b'Lockdown'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.apsclient")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'triald'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
					(entitlement-is-present "b'com.apple.trial.client'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Suggestions'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'coreduet_knowledge_store'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))
			(require-all
				(storage-class "b'CoreRoutine'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'CoreFollowUp'")
				(require-any
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.followupd")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(storage-class "b'MobileDocuments'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
					(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'TCC'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))))
			(require-all
				(storage-class "b'CognitiveHealth'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'CarrierBundles'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'Accounts'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'HomeAI'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'"))))
			(require-all
				(storage-class "b'StatusKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.StatusKitAgent")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(storage-class "b'Spotlight'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'SensorKit'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SpeechPersonalizedLM'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'TPM'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
			(require-all
				(storage-class "b'SiriReferenceResolution'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'SiriInference'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Cryptex'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
			(require-all
				(storage-class "b'SymptomFramework'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
			(require-all
				(storage-class "b'SiriVocabulary'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
					(process-attribute is-initproc)
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-installer)))
			(require-all
				(storage-class "b'SoC'")
				(require-any
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.powerdatad")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")))
			(require-all
				(storage-class "b'geod'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
			(require-all
				(storage-class "b'demo_backup'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
			(require-all
				(storage-class "b'familycircled'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
			(require-all
				(storage-class "b'SecureElementService'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'chronod'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
			(require-all
				(storage-class "b'adprivacyd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Shortcuts'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")))
			(require-all
				(storage-class "b'CallHistory'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'Health'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
			(require-all
				(storage-class "b'HomeKit'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
			(require-all
				(storage-class "b'Voicemail'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
					(signing-identifier "com.apple.CacheDeleteDaily")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'PhotosLibraries'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)))
			(require-all
				(storage-class "b'Notes'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
			(require-all
				(storage-class "b'MessagesMetaData'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
			(require-all
				(storage-class "b'Messages'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
					(literal)))
			(require-all
				(storage-class "b'PrivacyAccounting'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(signing-identifier "com.apple.privacyaccountingd")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
			(require-all
				(storage-class "b'IdentityServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'pipelined'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
			(require-all
				(storage-class "b'idcredd'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
			(require-all
				(storage-class "b'WebClips'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
			(require-all
				(storage-class "b'NanoTimeKit.FaceSupport'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
			(require-all
				(storage-class "b'Mail'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
			(require-all
				(storage-class "b'AppleMediaServices'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
			(require-all
				(storage-class "b'FaceTime'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))))
			(require-all
				(storage-class "b'AppStoreCache'")
				(require-any
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
			(require-all
				(storage-class "b'AppDataContainers'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(process-attribute is-protoboxed)
					(process-attribute is-sandboxed)
					(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
					(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
					(entitlement-is-bool-true "b'task_for_pid-allow'")
					(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
					(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))))
			(require-all
				(storage-class "b'AppBundles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
					(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
			(require-all
				(storage-class "b'mis-profiles'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
			(require-all
				(storage-class "b'automation-mode'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
			(require-all
				(storage-class "b'amfid'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
			(require-all
				(storage-class "b'ManagedConfiguration'")
				(require-any
					(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
					(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'"))))))
(deny file-write-setugid
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(file-attribute sip-protected)
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
	(require-all
		(require-any (subpath "/private/var/tmp")
(literal "/private/tmp")
(subpath-prefix "${FRONT_USER_HOME}/tmp"))
		(require-not (entitlement-is-present "b'com.apple.private.security.storage.tmp'"))
		(require-any (literal "/private/tmp")
(literal "/private/var/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal "/private/var/CoreRepair/mnt")
		(require-not (require-ancestor-with-entitlement "b'com.apple.private.core-repair'")))
	(require-all
		(subpath "/private/var/OOPJit")
		(require-not (extension "b'com.apple.sandbox.oopjit'")))
	(require-all
		(require-not (storage-class-extension 0))
		(require-any
			(require-any (literal "/private/var/protected")
(literal "/private/var/protected/trustd"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Caches")
(literal-prefix "${FRONT_USER_HOME}/Library/Keyboard")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(file-attribute datavault)
			(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal "/private/var/tmp")
(literal-prefix "${ANY_USER_HOME}")
(literal-prefix "${ANY_USER_HOME}/tmp")
(literal-prefix "${ANY_USER_HOME}/Library")
(literal-prefix "${ANY_USER_HOME}/Library/Caches"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(require-any (literal "/private/var/tmp/com.apple.messages")
(literal "/private/var/containers")
(literal "/private/var/containers/Shared")
(literal "/private/var/containers/Shared/SystemGroup")
(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.osanalytics")
(literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp/com.apple.messages"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-any (literal "/private/var/db/fpsd")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud")
(literal-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud/CachedRecords"))
			(process-attribute is-initproc)
			(process-attribute is-installer)
			(process-attribute is-datavault-controller)
			(require-all
				(storage-class "b'MobileBackupTmp'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(signing-identifier "com.apple.MobileInstallationHelperService")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackupTmp'"))))
			(require-all
				(storage-class "b'os_eligibility'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.os_eligibility.readwrite'"))))
			(require-all
				(storage-class "b'MobileBackup'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileBackup'")))
			(require-all
				(storage-class "b'DoNotDisturb'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DoNotDisturb'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DoNotDisturb'"))))
			(require-all
				(storage-class "b'fpsd'")
				(require-any
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.fpsd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.fpsd'"))
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'SiriSELF'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriSELF'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SiriSELF'"))))
			(require-all
				(storage-class "b'DiagnosticReports'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DiagnosticReports.read-write'"))))
			(require-all
				(storage-class "b'MobileStorageMounter'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.MobileStorageMounter'")))
			(require-all
				(storage-class "b'IntelligencePlatform'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.IntelligencePlatform'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.IntelligencePlatform'"))))
			(require-all
				(storage-class "b'PassKit'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.PassKit'")))
			(require-all
				(storage-class "b'Weather'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Weather'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Weather'"))))
			(require-all
				(storage-class "b'trustd-private'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.trustd-private'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.trustd-private'"))))
			(require-all
				(storage-class "b'SoundProfileAsset'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.SoundProfileAsset'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SoundProfileAsset'"))))
			(require-all
				(storage-class "b'trustd'")
				(require-any
					(process-attribute is-installer)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.trustd'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.trustd'"))
					(process-attribute is-datavault-controller)
					(process-attribute is-initproc)))
			(require-all
				(storage-class "b'clipserviced'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.private.security.storage.clipserviced'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.clipserviced'"))))
			(require-all
				(storage-class "b'kbd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.kbd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.kbd'"))))
			(require-all
				(storage-class "b'sessionkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.sessionkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sessionkitd'"))))
			(require-all
				(storage-class "b'driverkitd'")
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(entitlement-is-bool-true "b'com.apple.rootless.storage.driverkitd'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'"))))
			(require-all
				(storage-class "b'DumpPanic'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.DumpPanic'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.DumpPanic'"))))
			(require-all
				(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/wireless"))
(require-not (literal "/private/var/wireless/Library")))
				(require-any
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(literal-prefix "${FRONT_USER_HOME}/Library/Metadata")
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal-prefix "${FRONT_USER_HOME}")
(literal-prefix "${FRONT_USER_HOME}/Library"))
					(process-attribute is-initproc)
					(process-attribute is-installer)
					(process-attribute is-datavault-controller)
					(require-any (literal "/private/var/root")
(literal "/private/var/root/Library"))
					(require-all
						(storage-class "b'SiriReferenceResolution'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriReferenceResolution'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriReferenceResolution'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(subpath "/private/var/db/sysdiagnose")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose'"))
						(literal "/private/var/db/sysdiagnose"))
					(require-all
						(storage-class "b'SiriInference'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriInference'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriInference'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SiriVocabulary'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-any (signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.siri.ContinuousDialogManagerService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SiriVocabulary'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SiriVocabulary'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'sysdiagnose.sysdiagnose'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.sysdiagnose'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.sysdiagnose'"))))
					(require-all
						(storage-class "b'sysdiagnose.springboard'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.springboard'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.springboard'"))))
					(require-all
						(storage-class "b'managedassets'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.managedassets'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.managedassets'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'MobileContainerManager'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileContainerManager'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.MobileContainerManager'"))))
					(require-all
						(storage-class "b'Lockdown'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(signing-identifier "com.apple.apsclient")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Lockdown'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Lockdown'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'SecureElementService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.rootless.storage.SecureElementService'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.SecureElementService'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Safari/Bookmark" #"^/private/var/mobile/Library/Safari/com[.]apple[.]Bookmark" #"^/private/var/euser[0-9]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/[-0-9A-F]+/Library/Safari/(com[.]apple[.])?Bookmark" #"^/private/var/Users/[^/]+/Library/Safari/(com[.]apple[.])?Bookmark")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.Safari.bookmarks'")))
					(require-all
						(storage-class "b'triald'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.rootless.storage.triald'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.triald'")
							(entitlement-is-present "b'com.apple.trial.client'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'sysdiagnose.ScreenshotServicesService'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.sysdiagnose.ScreenshotServicesService'")
							(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.sysdiagnose.ScreenshotServicesService'"))))
					(require-all
						(storage-class "b'BulletinDistributor'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.BulletinDistributor'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.BulletinDistributor'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Safari'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Safari'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Safari'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'ExposureNotification'")
						(require-any
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(entitlement-is-bool-true "b'com.apple.private.security.storage.ExposureNotification'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.ExposureNotification'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)))
					(require-all
						(storage-class "b'TCC'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.TCC'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.TCC'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
						(require-any
							(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
							(process-attribute is-initproc)
							(process-attribute is-installer)
							(process-attribute is-datavault-controller)
							(require-all
								(storage-class "b'CoreRoutine'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreRoutine'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreRoutine'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'SpeechPersonalizedLM'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
											(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(storage-class "b'ManagedConfiguration'")
												(require-any
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'CoreFollowUp'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(signing-identifier "com.apple.followupd")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CoreFollowUp'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CoreFollowUp'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(storage-class "b'ManagedConfiguration'")
												(require-any
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'MobileDocuments'")
								(require-any
									(process-attribute is-protoboxed)
									(require-any (signing-identifier "com.apple.UserEventAgent")
(signing-identifier "com.apple.fileecoordinationd")
(signing-identifier "com.apple.FileProvider.LocalStorage")
(signing-identifier "com.apple.CloudDocsDaemon.container-metadata-extractor"))
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))
									(require-all
										(process-attribute is-initproc)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(process-attribute is-installer)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(process-attribute is-datavault-controller)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(process-attribute is-sandboxed)
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.security.storage.MobileDocuments'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(entitlement-is-bool-true "b'task_for_pid-allow'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.rootless.storage.MobileDocuments'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
												(require-any
													(process-attribute is-initproc)
													(process-attribute is-installer)
													(require-all
														(storage-class "b'ManagedConfiguration'")
														(require-any
															(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
															(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))))))
							(require-all
								(storage-class "b'CognitiveHealth'")
								(require-any
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CognitiveHealth'")
									(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.CognitiveHealth'"))))
							(require-all
								(require-all (require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
								(require-any
									(require-any (literal "/")
(literal "/private")
(literal "/private/var")
(literal "/private/var/db")
(literal-prefix "${FRONT_USER_HOME}/Library/Assistant"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/root")
(literal "/private/var/root/Library")
(literal "/private/var/root/Library/Caches"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(literal "/private/var/networkd")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit")
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(require-any (literal "/private/var/containers")
(literal "/private/var/MobileDevice")
(literal-prefix "${FRONT_USER_HOME}/Containers"))
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(process-attribute is-datavault-controller)
									(process-attribute is-initproc)
									(process-attribute is-installer)
									(require-all
										(storage-class "b'TPM'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tpm-authority")
(signing-identifier "com.apple.tpm-measurements"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.TPM'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.TPM'"))))
									(require-all
										(storage-class "b'SymptomFramework'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SymptomFramework'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.SymptomFramework'"))))
									(require-all
										(storage-class "b'geod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.geod'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.geod'"))))
									(require-all
										(storage-class "b'Cryptex'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Cryptex'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.Cryptex'"))))
									(require-all
										(storage-class "b'demo_backup'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.finish_demo_restore"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.demo_backup'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.demo_backup'")))
									(require-all
										(storage-class "b'HomeAI'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.HomeAI'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeAI'")
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.homed")
(signing-identifier "com.apple.mediaanalysisd"))))
									(require-all
										(storage-class "b'SpeechPersonalizedLM'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SpeechPersonalizedLM'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SpeechPersonalizedLM'")
											(require-any (signing-identifier "com.apple.siri.embeddedspeech")
(signing-identifier "com.apple.siri.speech-model-training")
(signing-identifier "com.apple.assistant.assistantd"))))
									(require-all
										(storage-class "b'SoC'")
										(require-any
											(signing-identifier "com.apple.powerdatad")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SoC'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.SoC'"))))
									(require-all
										(storage-class "b'pipelined'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.pipelined'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.pipelined'")))
									(require-all
										(storage-class "b'StatusKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.StatusKitAgent")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.StatusKit'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.StatusKit'")))
									(require-all
										(storage-class "b'familycircled'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.familycircled'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.familycircled'")))
									(require-all
										(storage-class "b'chronod'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.chronod'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.chronod'")))
									(require-all
										(storage-class "b'idcredd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.idcredd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.idcredd'")))
									(require-all
										(storage-class "b'Spotlight'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.xctest")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Search.framework.SpotlightDiagnostic"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Spotlight'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Spotlight'")))
									(require-all
										(storage-class "b'adprivacyd'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.adprivacyd'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.adprivacyd'")))
									(require-all
										(storage-class "b'Shortcuts'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Shortcuts'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.shortcuts'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Shortcuts'")
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'NanoTimeKit.FaceSupport'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.nanotimekitd")
(signing-identifier "com.apple.nanotimekitcompaniond"))
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(storage-class "b'WebClips'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.WebClips.read-write'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.WebClips'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.WebClips'"))))
									(require-all
										(storage-class "b'CallHistory'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.geod")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.facetime")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.tincan")
(signing-identifier "com.apple.FinishRestoreFromBackup")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.demod_helper")
(signing-identifier "com.apple.InCallService")
(signing-identifier "com.apple.InCallService.IntentsUI")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.mobilestoredemod")
(signing-identifier "com.apple.mobile_obliterator")
(signing-identifier "com.apple.mobilephone")
(signing-identifier "com.apple.mobilephone.assistant")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.TelephonyUtilities.PhoneIntentHandler")
(signing-identifier "com.apple.contactsd")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.commcentermobilehelper")
(signing-identifier "com.apple.MobileAddressBook")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.MobileSMS.MessagesAssistantExtension")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.CallHistoryTool")
(signing-identifier "com.apple.CallHistorySyncHelper")
(signing-identifier "com.apple.CallHistory.DataMigrator")
(signing-identifier "com.apple.CommCenterRootHelper")
(signing-identifier "com.apple.ContactsUI.ContactsViewService")
(signing-identifier "com.apple.ContactsUI.ContactViewViewService"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.CallHistory'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.CallHistory'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'Mail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Mail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Mail'")))
									(require-all
										(storage-class "b'SensorKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.SensorKit'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.SensorKit'")))
									(require-all
										(storage-class "b'Health'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.lsof")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.healthd")
(signing-identifier "com.apple.health.HealthPluginHostService")
(signing-identifier "com.apple.TapToRadar")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.sysdiagnose")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.Health")
(signing-identifier "com.apple.HealthKit.HealthDiagnosticExtension"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Health'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Health'")))
									(require-all
										(storage-class "b'AppleMediaServices'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppleMediaServices'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppleMediaServices'"))))
									(require-all
										(storage-class "b'HomeKit'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.HomeKit'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.HomeKit'"))))
									(require-all
										(storage-class "b'FaceTime'")
										(require-any
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.FaceTime'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.FaceTime'"))
											(process-attribute is-initproc)
											(process-attribute is-installer)))
									(require-all
										(storage-class "b'Voicemail'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.tursd")
(signing-identifier "com.apple.backupd")
(signing-identifier "com.apple.keybagd")
(signing-identifier "com.apple.Carousel")
(signing-identifier "com.apple.NanoPhone")
(signing-identifier "com.apple.BackupAgent2")
(signing-identifier "com.apple.coretelephony")
(signing-identifier "com.apple.TelephonyUtilities")
(signing-identifier "com.apple.vmd")
(signing-identifier "com.apple.voicemail.vmd")
(signing-identifier "com.apple.nanophone")
(signing-identifier "com.apple.nanophoned")
(signing-identifier "com.apple.nanobackupd")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.siri")
(signing-identifier "com.apple.sharingd")
(signing-identifier "com.apple.sysdiagnose"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Voicemail'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Voicemail'")
											(signing-identifier "com.apple.CacheDeleteDaily")))
									(require-all
										(storage-class "b'PhotosLibraries'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PhotosLibraries'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PhotosLibraries'")))
									(require-all
										(storage-class "b'mis-profiles'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.mis-profiles'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.mis-profiles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.mis.profiles.write'"))))
									(require-all
										(storage-class "b'Notes'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Notes'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Notes'")))
									(require-all
										(storage-class "b'automation-mode'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
											(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.automation-mode'"))))
									(require-all
										(storage-class "b'AppBundles'")
										(require-any
											(require-any (signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.containermanagerd"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppBundles'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.AppBundles'"))))
									(require-all
										(storage-class "b'AppDataContainers'")
										(require-any
											(entitlement-is-bool-true "b'task_for_pid-allow'")
											(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
											(require-all (require-not (signing-identifier "com.apple.rsync"))
(require-not (signing-identifier "com.apple.Carousel"))
(require-not (signing-identifier "com.apple.PineBoard"))
(require-not (signing-identifier "com.apple.assistant_service"))
(require-not (signing-identifier "com.apple.newsd"))
(require-not (signing-identifier "com.apple.nanonewscd"))
(require-not (signing-identifier "com.apple.ReportMemoryException")))
											(entitlement-is-bool-true "b'com.apple.system-task-ports.control'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppDataContainers'")
											(entitlement-is-bool-true "b'com.apple.private.security.container-manager'")
											(require-all
												(process-attribute is-sandboxed)
												(process-attribute is-protoboxed))))
									(require-all
										(storage-class "b'MessagesMetaData'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(require-any (signing-identifier "com.apple.suggestd")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.PeopleViewService")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.imagent")
(signing-identifier "com.apple.imdpersistence.IMDPersistenceAgent")
(signing-identifier "com.apple.imtransferservices.IMTransferAgent"))
											(entitlement-is-bool-true "b'com.apple.rootless.storage.MessagesMetaData'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.MessagesMetaData'")))
									(require-all
										(require-all (require-not (literal "/"))
(require-not (literal "/private"))
(require-not (literal "/private/var"))
(require-not (literal "/private/var/containers"))
(require-not (literal "/private/var/containers/Shared"))
(require-not (literal "/private/var/containers/Shared/SystemGroup"))
(require-not (literal-prefix "${FRONT_USER_HOME}"))
(require-not (literal-prefix "${FRONT_USER_HOME}/Library")))
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(require-all
												(storage-class "b'ManagedConfiguration'")
												(require-any
													(require-any (signing-identifier "com.apple.sysdiagnosed")
(signing-identifier "com.apple.containermanagerd_system")
(signing-identifier "com.apple.managedconfiguration.profiled"))
													(entitlement-is-bool-true "b'com.apple.private.security.storage.ManagedConfiguration'")))))
									(require-all
										(storage-class "b'AppStoreCache'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.AppStoreCache'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.AppStoreCache'")))
									(require-all
										(storage-class "b'Messages'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(entitlement-is-bool-true "b'com.apple.private.security.storage.Messages'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.Messages'")
											(literal)))
									(require-all
										(storage-class "b'PrivacyAccounting'")
										(require-any
											(process-attribute is-initproc)
											(process-attribute is-installer)
											(process-attribute is-datavault-controller)
											(signing-identifier "com.apple.privacyaccountingd")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.PrivacyAccounting'")
											(entitlement-is-bool-true "b'com.apple.rootless.storage.PrivacyAccounting'")))
									(require-all
										(storage-class "b'amfid'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.amfid'")
											(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.amfid'"))))
									(require-all
										(storage-class "b'IdentityServices'")
										(require-any
											(entitlement-is-bool-true "b'com.apple.rootless.storage.IdentityServices'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.IdentityServices'")
											(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/incomingfiles")
(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices/files"))))))
							(require-all
								(storage-class "b'CarrierBundles'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.rootless.storage.CarrierBundles'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.CarrierBundles'")
									(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
							(require-all
								(storage-class "b'Accounts'")
								(require-any
									(require-any (signing-identifier "com.apple.plphotosctl")
(signing-identifier "com.apple.keystorectl")
(signing-identifier "com.apple.CacheDeleteDaily")
(signing-identifier "com.apple.io_usage")
(signing-identifier "com.apple.itunescloudd")
(signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")
(signing-identifier "com.apple.DTServiceHub")
(signing-identifier "com.apple.Playgrounds")
(signing-identifier "com.apple.Playgrounds.AssetCatalogCompilerExtension")
(signing-identifier "com.apple.accountsd")
(signing-identifier "com.apple.aggregated")
(signing-identifier "com.apple.asd")
(signing-identifier "com.apple.assistant_service")
(signing-identifier "com.apple.amstool")
(signing-identifier "com.apple.amsaccountsd"))
									(require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'")
									(entitlement-is-bool-true "b'com.apple.rootless.storage.Accounts'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.Accounts'")))))
					(require-all
						(storage-class "b'Calendar'")
						(require-any
							(require-any (signing-identifier "com.apple.scripter")
(signing-identifier "com.apple.lockdownd")
(signing-identifier "com.apple.calaccessd")
(signing-identifier "com.apple.accounts.dom")
(signing-identifier "com.apple.dataaccess.dataaccessd")
(signing-identifier "com.apple.email.maild")
(signing-identifier "com.apple.exchangesyncd")
(signing-identifier "com.apple.RemoteManagement.AccountExtension")
(signing-identifier "com.apple.mobile_file_relay")
(signing-identifier "com.apple.mobilecal")
(signing-identifier "com.apple.mobilecal.diagnosticextension"))
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Calendar'")
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Calendar'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'Suggestions'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.security.storage.Suggestions'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.Suggestions'")
							(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
					(require-all
						(storage-class "b'coreduet_knowledge_store'")
						(require-any
							(require-any (signing-identifier "com.apple.momentsd")
(signing-identifier "com.apple.MobileSMS")
(signing-identifier "com.apple.assistantd")
(signing-identifier "com.apple.dasd")
(signing-identifier "com.apple.duetexpertd")
(signing-identifier "com.apple.chronod")
(signing-identifier "com.apple.coreduetd")
(signing-identifier "com.apple.contextstored")
(signing-identifier "com.apple.cdknowledgetool")
(signing-identifier "com.apple.siriknowledged")
(signing-identifier "com.apple.softwareupdateservicesd")
(signing-identifier "com.apple.intelligenceplatform.IntelligencePlatformComputeService"))
							(entitlement-is-bool-true "b'com.apple.private.security.storage.coreduet_knowledge_store'")
							(entitlement-is-bool-true "b'com.apple.rootless.storage.coreduet_knowledge_store'")))))
			(require-all
				(storage-class "b'PineBoard'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.PineBoard'")
					(require-not (entitlement-is-bool-true "b'com.apple.rootless.storage.PineBoard'"))))
			(require-all
				(process-attribute is-datavault-controller)
				(process-attribute is-installer))
			(require-all
				(storage-class "b'Wireless'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.preferences'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Wireless'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Wireless'")))
			(require-all
				(storage-class "b'Biome'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.Biome'")
					(entitlement-is-bool-true "b'com.apple.rootless.storage.Biome'")
					(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
			(require-all
				(storage-class "b'ContactlessReader'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.rootless.storage.ContactlessReader'")
					(require-not (entitlement-is-bool-true "b'com.apple.private.security.storage.ContactlessReader'")))))))
(deny iokit-issue-extension
	(require-all
		(process-attribute is-sandboxed)
		(require-any
			(process-attribute is-protoboxed)
			(require-all
				(require-all (require-not (signing-identifier "com.apple.ramrod"))
(require-not (signing-identifier "com.apple.dt.xctest.tool")))
				(require-any
					(require-all
						(iokit-user-client-class "IOMobileFramebufferUserClient")
						(require-all (require-not (signing-identifier "com.apple.IOMFB_FDR_Loader"))
(require-not (signing-identifier "com.apple.TVIdleScreen"))
(require-not (signing-identifier "com.apple.TVDisplayAssistant"))
(require-not (signing-identifier "com.apple.DocumentManagerUITests.xctrunner"))
(require-not (signing-identifier "com.apple.audio.virtualaudio.FeatureTests.xctrunner"))
(require-not (signing-identifier "com.apple.iOS-Tests-Host"))
(require-not (signing-identifier "com.apple.iron.Iron-UITests-iOS.xctrunner"))
(require-not (signing-identifier "com.apple.AskPermissionUI"))
(require-not (signing-identifier "com.apple.ApplicationTechnologiesTestLibraryUITests.xctrunner"))
(require-not (signing-identifier "com.apple.chronod"))
(require-not (signing-identifier "com.apple.corespotlight.TestsHost"))
(require-not (signing-identifier "com.apple.corespotlight.InternalTestsHost"))
(require-not (signing-identifier "com.apple.contacts.UnitTestsHost-iOS"))
(require-not (signing-identifier "com.apple.com.QuickNoteTestUITests.xctrunner"))
(require-not (signing-identifier "com.apple.com.MultiWindowTests-iOS.xctrunner"))
(require-not (signing-identifier "com.apple.com.IOSPencilUITests.xctrunner"))
(require-not (signing-identifier "com.apple.com.IOSFunctionalUITests.xctrunner"))
(require-not (signing-identifier "com.apple.SetupHarness"))
(require-not (signing-identifier "com.apple.SetupHarnessUITests.xctrunner"))
(require-not (signing-identifier "com.apple.StorageSettingsUITests.xctrunner"))
(require-not (signing-identifier "com.apple.CUTests.xctrunner"))
(require-not (signing-identifier "com.apple.CyclerTests.xctrunner"))
(require-not (signing-identifier "com.apple.CoreSpeech.SpeakerRecognitionTests.xctrunner"))
(require-not (signing-identifier "com.apple.CorePass.xctrunner"))
(require-not (signing-identifier "com.apple.CorePassiCloud.xctrunner"))
(require-not (signing-identifier "com.apple.CorePassDetails.xctrunner")))
						(require-not (signing-identifier "com.apple.TapToRadar"))
						(require-any
							(require-all
								(iokit-user-client-class "IOSurfaceRootUserClient")
								(require-not (signing-identifier "com.homekitqa.HMToolbox")))
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
								(require-not (signing-identifier "com.example.MultiTaskApp"))
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-not (signing-identifier "com.appleinternal.fencelog")))))
					(require-all
						(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOHIDLibUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient")
(iokit-user-client-class "IOAccelSharedUserClient2"))
						(require-not (signing-identifier "com.apple.TapToRadar"))
						(require-any
							(require-all
								(iokit-user-client-class "IOSurfaceRootUserClient")
								(require-not (signing-identifier "com.homekitqa.HMToolbox")))
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
								(require-not (signing-identifier "com.example.MultiTaskApp"))
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-not (signing-identifier "com.appleinternal.fencelog")))))
					(require-all
						(require-any (iokit-user-client-class "AppleH10CamInUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.example.MultiTaskApp"))
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.appleinternal.fencelog")))
					(require-all
						(signing-identifier "com.apple.wifid")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "ApplePPMUserClient"))
(require-not (iokit-user-client-class "AppleT8006PPMUserClient"))))
					(require-all
						(signing-identifier "com.apple.xctest")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "IOReportUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
(require-not (iokit-user-client-class "AGXGLContext"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleBasebandUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AppleMobileApNonceUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.vetap.STRecorder"))
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
						(require-not (signing-identifier "com.apple.tvphotosourcesd"))
						(require-not (signing-identifier "com.apple.tvairplayd")))
					(require-all
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "AppleH10CamInUserClient"))
						(require-not (signing-identifier "com.apple.vetap.STRecorder"))
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
						(require-not (signing-identifier "com.apple.tvphotosourcesd"))
						(require-not (signing-identifier "com.apple.tvairplayd")))
					(require-all
						(iokit-user-client-class "IOTimeSyncClockManagerUserClient")
						(require-not (signing-identifier "com.apple.tvairplayd")))
					(require-all
						(iokit-user-client-class "RootDomainUserClient")
						(require-not (signing-identifier "com.apple.remindd")))
					(require-all
						(iokit-user-client-class "AppleExternalPowerMonitorUserClient")
						(require-not (signing-identifier "com.apple.pmond")))
					(require-all
						(iokit-user-client-class "AppleMobileApNonceUserClient")
						(require-not (signing-identifier "com.apple.mobile_diagnostics_relay")))
					(require-all
						(iokit-user-client-class "AppleSSEUserClient")
						(require-not (signing-identifier "com.apple.pairedunlockd")))
					(require-all
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-all (require-not (signing-identifier "com.apple.swe.BRB"))
(require-not (signing-identifier "com.apple.swe.Livability")))
						(require-all (require-not (signing-identifier "com.apple.internal.carkitd"))
(require-not (signing-identifier "com.apple.tdg.ros-qe.MRUIQuickLook")))
						(require-not (signing-identifier "com.apple.tdg.ros-qe.LinkQuickLook"))
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.ReportMemoryException")))
					(require-all
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
						(require-all (require-not (signing-identifier "com.apple.internal.carkitd"))
(require-not (signing-identifier "com.apple.tdg.ros-qe.MRUIQuickLook")))
						(require-not (signing-identifier "com.apple.tdg.ros-qe.LinkQuickLook"))
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.ReportMemoryException")))
					(require-all
						(signing-identifier "com.apple.NRD.UpdateBrainService")
						(require-all (require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleMobileApNonceUserClient"))))
					(require-all
						(signing-identifier "com.apple.sysdiagnose_helper")
						(require-all (require-not (iokit-user-client-class "ASPUserClient"))
(require-not (iokit-user-client-class "AppleNVMeUpdateUC"))))
					(require-all
						(iokit-user-client-class "IOMobileFramebufferUserClient")
						(require-not (signing-identifier "com.apple.ios.keyboards.JustMyType"))
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.internal.recap")))
					(require-all
						(signing-identifier "com.apple.CITests.xctrunner")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.ios.keyboards.JustMyType"))
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.internal.recap")))
					(require-all
						(signing-identifier "com.apple.itunescloudd")
						(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))))
					(require-all
						(signing-identifier "com.apple.sentry.iosapp")
						(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(signing-identifier "com.apple.proactive.PersonalizationPortraitTests.xctrunner")
						(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient")))
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(signing-identifier "com.apple.SoundBoard")
						(require-all (require-not (iokit-user-client-class "ApplePeppyUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceUserClient"))))
					(require-all
						(process-name "/usr/libexec/mobile_obliterator")
						(require-all (require-not (iokit-user-client-class "IOWatchdogUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "AppleSEPUserClient"))
(require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleEffaceableStorageUserClient"))))
					(require-all
						(signing-identifier "com.apple.MobileSoftwareUpdate.UpdateBrainService")
						(require-all (require-not (iokit-user-client-class "IOAESAcceleratorUserClient"))
(require-not (iokit-user-client-class "AppleEmbeddedSimpleSPINORFlasherDriverUC"))))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
						(require-not (signing-identifier "com.apple.translationd"))
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-all (require-not (signing-identifier "com.apple.Terminal"))
(require-not (signing-identifier "com.apple.Terminal-iOS"))))
					(require-all
						(signing-identifier "com.apple.siri.Astroyd-iOS")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(signing-identifier "com.apple.gputools.DysonSourceGenProject")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
					(require-all
						(process-name "/usr/local/libexec/Astroyd/astroydd_iOS")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(signing-identifier "com.apple.PineBoard")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOHIDLibUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IODPDeviceConcreteUserClient"))
(require-not (iokit-user-client-class "IODPServiceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVDeviceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVServiceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVControllerConcreteUserClient"))))
					(require-all
						(signing-identifier "com.apple.PerfPowerServicesExtended")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOGPUMemoryInfoUserClient"))))
					(require-all
						(signing-identifier "com.apple.fillmoretool")
						(require-all (require-not (iokit-user-client-class "AppleFillmoreUserClient"))
(require-not (iokit-user-client-class "AppleAstrisGpioProbeUserClient"))))
					(require-all
						(iokit-user-client-class "ProvInfoIOKitUserClient")
						(require-not (signing-identifier "com.apple.amsaccountsd")))
					(require-all
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
						(require-not (signing-identifier "com.apple.backboard.display.archive"))
						(require-any (iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXCommandQueue"))
						(require-not (signing-identifier "com.apple.avfoundation.AVFoundation-Embedded-Unit-Tests.xctrunner")))
					(require-all
						(signing-identifier "com.apple.corecaptured")
						(require-all (require-not (iokit-user-client-class "CCLogPipeUserClient"))
(require-not (iokit-user-client-class "CCDataPipeUserClient"))
(require-not (iokit-user-client-class "RootDomainUserClient"))))
					(require-all
						(iokit-user-client-class "IOKitDiagnosticsClient")
						(require-not (signing-identifier "com.apple.ioclasscount")))
					(require-all
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.apple.TVSystemMenuService")))
					(require-all
						(iokit-user-client-class "AppleExternalAmpControllerUserClient")
						(require-not (signing-identifier "com.apple.ampctl")))
					(require-all
						(signing-identifier "com.apple.TVSystemBulletinService")
						(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOMobileFramebufferUserClient"))
						(require-not (signing-identifier "com.apple.avfoundation.AVFoundation-Embedded-Unit-Tests.xctrunner")))
					(require-all
						(iokit-user-client-class "RootDomainUserClient")
						(require-not (signing-identifier "com.apple.vmd")))
					(require-all
						(signing-identifier "com.apple.sidecar-relay")
						(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
						(require-all (require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))))
					(require-all
						(signing-identifier "com.apple.pencilkit.TestingHarness")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOAVDeviceConcreteUserClient")
(iokit-user-client-class "IOAVServiceConcreteUserClient")
(iokit-user-client-class "IODPDeviceConcreteUserClient")
(iokit-user-client-class "IODPServiceConcreteUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
						(require-not (signing-identifier "com.apple.TVSettings"))
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
						(require-not (signing-identifier "com.apple.TVPhotos"))
						(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
						(require-not (signing-identifier "com.apple.SharingViewService"))
						(require-any
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-not (signing-identifier "com.apple.RETestBed"))
								(iokit-user-client-class "AGXDeviceUserClient")
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
							(require-all
								(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
					(require-all
						(signing-identifier "com.apple.audiotest")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))))
					(require-all
						(require-any (iokit-user-client-class "AGXGLContext")
(iokit-user-client-class "IOMobileFramebufferUserClient"))
						(require-not (signing-identifier "com.apple.TVPhotos"))
						(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
						(require-not (signing-identifier "com.apple.SharingViewService"))
						(require-any
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-not (signing-identifier "com.apple.RETestBed"))
								(iokit-user-client-class "AGXDeviceUserClient")
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
							(require-all
								(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
					(require-all
						(signing-identifier "com.apple.audio.virtualaudio.IntegrationTests.xctrunner")
						(require-all (require-not (iokit-user-client-class "IOAudio2DeviceUserClient"))
(require-not (iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient"))
(require-not (iokit-user-client-class "AppleAOPAudioUserClient"))
(require-not (iokit-user-client-class "AppleAOPVoiceTriggerUserClient"))))
					(require-all
						(signing-identifier "com.Apple.RgbIrTestApp")
						(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
					(require-all
						(signing-identifier "com.apple.internal.JasperViewer")
						(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
					(require-all
						(signing-identifier "com.apple.arkit.ARKit-iOS-tests-app")
						(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
						(require-not (signing-identifier "com.apple.SharingViewService"))
						(require-any
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-not (signing-identifier "com.apple.RETestBed"))
								(iokit-user-client-class "AGXDeviceUserClient")
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
							(require-all
								(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
								(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
					(require-all
						(signing-identifier "com.apple.PreBoard")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOAVControllerConcreteUserClient")))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
					(require-all
						(signing-identifier "com.apple.PowerlogPresubmissionTests.xctrunner")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOReportUserClient"))
(require-not (iokit-user-client-class "IOGPUMemoryInfoUserClient"))
(require-not (iokit-user-client-class "IOAccelMemoryInfoUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(signing-identifier "com.apple.soundanalysisd")
						(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXGLContext")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.Photo-Booth"))
						(iokit-user-client-class "AGXDeviceUserClient")
						(require-not (signing-identifier "com.apple.PassKitCoreXPCService")))
					(require-all
						(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
						(require-not (signing-identifier "com.apple.PassKitCoreXPCService")))
					(require-all
						(signing-identifier "com.apple.NPKCompanionAgent")
						(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(iokit-user-client-class "AppleEmbeddedGPSControlUserClient")
						(require-not (signing-identifier "com.apple.gpsd")))
					(require-all
						(iokit-user-client-class "AppleMultitouchDeviceUserClient")
						(require-not (signing-identifier "com.apple.Flounder")))
					(require-all
						(require-any (signing-identifier "com.apple.metalAR")
(signing-identifier "com.apple.recorderapp.recorder.iphone"))
						(require-all (require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
					(require-all
						(signing-identifier "com.apple.cloudphotod")
						(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))))
					(require-all
						(signing-identifier "com.apple.itunesstored")
						(require-all (require-not (iokit-user-client-class "ProvInfoIOKitUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")))
						(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "RootDomainUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.Bridge"))
						(require-any
							(require-all
								(signing-identifier "com.apple.AKTester")
								(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-all (require-not (subpath "/private/var/tmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))
(require-not (subpath "/private/var/roletmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))))
							(require-all
								(iokit-user-client-class "IOMobileFramebufferUserClient")
								(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))))
					(require-all
						(signing-identifier "com.apple.Family-Ties")
						(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient")
(iokit-user-client-class "IOTimeSyncUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
						(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))
					(require-all
						(signing-identifier "com.apple.internal.iOStoMac")
						(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
						(require-all (require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))))
					(require-all
						(iokit-user-client-class "AppleJPEGDriverUserClient")
						(require-not (signing-identifier "com.apple.Bridge"))
						(require-any
							(require-all
								(signing-identifier "com.apple.AKTester")
								(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
							(require-all
								(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
								(require-all (require-not (subpath "/private/var/tmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))
(require-not (subpath "/private/var/roletmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))))
							(require-all
								(iokit-user-client-class "IOMobileFramebufferUserClient")
								(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))))
					(require-all
						(require-not (debug-mode))
						(require-not (process-attribute is-initproc))
						(require-not (process-attribute is-sandboxed))
						(require-all (require-not (iokit-user-client-class-prefix "${ENTITLEMENT:com.apple.security.exception.iokit-user-client-class}"))
(require-not (iokit-user-client-class-prefix "${ENTITLEMENT:com.apple.security.iokit-user-client-class}")))
						(require-all (require-not (subpath "/AppleInternal"))
(require-not (subpath "/usr/local/bin"))))
					(require-all
						(signing-identifier "com.apple.HeadBoard")
						(require-all (require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))))
			(require-all
				(iokit-user-client-class "IOUserUserClient")
				(require-not (entitlement-is-bool-true "b'com.apple.developer.driverkit.communicates-with-drivers'")))
			(require-all
				(iokit-user-client-class "AppleFirmwareUpdateUserClient")
				(require-not (entitlement-is-bool-true "b'com.apple.afu.userclientaccess'")))
			(require-all
				(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
				(require-not (entitlement-is-bool-true "b'com.apple.private.FairPlayIOKitUserClient.access'")))
			(require-all
				(iokit-user-client-class "AppleAOPAudioUserClient")
				(require-not (entitlement-is-bool-true "b'com.apple.private.aop-audio.user-access'")))
			(require-all
				(iokit-user-client-class "AppleAOPEnvSenseUserClient")
				(require-not (entitlement-is-bool-true "b'com.apple.private.aop-envsense.user-access'")))
			(require-all
				(iokit-user-client-class "AppleKeyStoreUserClient")
				(require-not (entitlement-is-present "b'com.apple.private.intelligenceplatform.use-cases'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.read-write'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.writer'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.pruner'"))
				(entitlement-is-present "b'com.apple.private.biome.read-only'"))))
	(require-all
		(require-not (iokit-user-client-class "AppleKeyStoreUserClient"))
		(require-all (require-not (signing-identifier "com.apple.ramrod"))
(require-not (signing-identifier "com.apple.dt.xctest.tool")))
		(require-any
			(require-all
				(iokit-user-client-class "IOMobileFramebufferUserClient")
				(require-all (require-not (signing-identifier "com.apple.IOMFB_FDR_Loader"))
(require-not (signing-identifier "com.apple.TVIdleScreen"))
(require-not (signing-identifier "com.apple.TVDisplayAssistant"))
(require-not (signing-identifier "com.apple.DocumentManagerUITests.xctrunner"))
(require-not (signing-identifier "com.apple.audio.virtualaudio.FeatureTests.xctrunner"))
(require-not (signing-identifier "com.apple.iOS-Tests-Host"))
(require-not (signing-identifier "com.apple.iron.Iron-UITests-iOS.xctrunner"))
(require-not (signing-identifier "com.apple.AskPermissionUI"))
(require-not (signing-identifier "com.apple.ApplicationTechnologiesTestLibraryUITests.xctrunner"))
(require-not (signing-identifier "com.apple.chronod"))
(require-not (signing-identifier "com.apple.corespotlight.TestsHost"))
(require-not (signing-identifier "com.apple.corespotlight.InternalTestsHost"))
(require-not (signing-identifier "com.apple.contacts.UnitTestsHost-iOS"))
(require-not (signing-identifier "com.apple.com.QuickNoteTestUITests.xctrunner"))
(require-not (signing-identifier "com.apple.com.MultiWindowTests-iOS.xctrunner"))
(require-not (signing-identifier "com.apple.com.IOSPencilUITests.xctrunner"))
(require-not (signing-identifier "com.apple.com.IOSFunctionalUITests.xctrunner"))
(require-not (signing-identifier "com.apple.SetupHarness"))
(require-not (signing-identifier "com.apple.SetupHarnessUITests.xctrunner"))
(require-not (signing-identifier "com.apple.StorageSettingsUITests.xctrunner"))
(require-not (signing-identifier "com.apple.CUTests.xctrunner"))
(require-not (signing-identifier "com.apple.CyclerTests.xctrunner"))
(require-not (signing-identifier "com.apple.CoreSpeech.SpeakerRecognitionTests.xctrunner"))
(require-not (signing-identifier "com.apple.CorePass.xctrunner"))
(require-not (signing-identifier "com.apple.CorePassiCloud.xctrunner"))
(require-not (signing-identifier "com.apple.CorePassDetails.xctrunner")))
				(require-not (signing-identifier "com.apple.TapToRadar"))
				(require-any
					(require-all
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.homekitqa.HMToolbox")))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
						(require-not (signing-identifier "com.example.MultiTaskApp"))
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.appleinternal.fencelog")))))
			(require-all
				(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOHIDLibUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient")
(iokit-user-client-class "IOAccelSharedUserClient2"))
				(require-not (signing-identifier "com.apple.TapToRadar"))
				(require-any
					(require-all
						(iokit-user-client-class "IOSurfaceRootUserClient")
						(require-not (signing-identifier "com.homekitqa.HMToolbox")))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
						(require-not (signing-identifier "com.example.MultiTaskApp"))
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.appleinternal.fencelog")))))
			(require-all
				(require-any (iokit-user-client-class "AppleH10CamInUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (signing-identifier "com.example.MultiTaskApp"))
				(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (signing-identifier "com.appleinternal.fencelog")))
			(require-all
				(signing-identifier "com.apple.wifid")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "ApplePPMUserClient"))
(require-not (iokit-user-client-class "AppleT8006PPMUserClient"))))
			(require-all
				(signing-identifier "com.apple.xctest")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "IOReportUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
(require-not (iokit-user-client-class "AGXGLContext"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleBasebandUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AppleMobileApNonceUserClient"))))
			(require-all
				(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (signing-identifier "com.apple.vetap.STRecorder"))
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-not (signing-identifier "com.apple.tvphotosourcesd"))
				(require-not (signing-identifier "com.apple.tvairplayd")))
			(require-all
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "AppleH10CamInUserClient"))
				(require-not (signing-identifier "com.apple.vetap.STRecorder"))
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-not (signing-identifier "com.apple.tvphotosourcesd"))
				(require-not (signing-identifier "com.apple.tvairplayd")))
			(require-all
				(iokit-user-client-class "IOTimeSyncClockManagerUserClient")
				(require-not (signing-identifier "com.apple.tvairplayd")))
			(require-all
				(iokit-user-client-class "RootDomainUserClient")
				(require-not (signing-identifier "com.apple.remindd")))
			(require-all
				(iokit-user-client-class "AppleExternalPowerMonitorUserClient")
				(require-not (signing-identifier "com.apple.pmond")))
			(require-all
				(iokit-user-client-class "AppleMobileApNonceUserClient")
				(require-not (signing-identifier "com.apple.mobile_diagnostics_relay")))
			(require-all
				(iokit-user-client-class "AppleSSEUserClient")
				(require-not (signing-identifier "com.apple.pairedunlockd")))
			(require-all
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-all (require-not (signing-identifier "com.apple.swe.BRB"))
(require-not (signing-identifier "com.apple.swe.Livability")))
				(require-all (require-not (signing-identifier "com.apple.internal.carkitd"))
(require-not (signing-identifier "com.apple.tdg.ros-qe.MRUIQuickLook")))
				(require-not (signing-identifier "com.apple.tdg.ros-qe.LinkQuickLook"))
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.ReportMemoryException")))
			(require-all
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-all (require-not (signing-identifier "com.apple.internal.carkitd"))
(require-not (signing-identifier "com.apple.tdg.ros-qe.MRUIQuickLook")))
				(require-not (signing-identifier "com.apple.tdg.ros-qe.LinkQuickLook"))
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.ReportMemoryException")))
			(require-all
				(signing-identifier "com.apple.NRD.UpdateBrainService")
				(require-all (require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleMobileApNonceUserClient"))))
			(require-all
				(signing-identifier "com.apple.sysdiagnose_helper")
				(require-all (require-not (iokit-user-client-class "ASPUserClient"))
(require-not (iokit-user-client-class "AppleNVMeUpdateUC"))))
			(require-all
				(iokit-user-client-class "IOMobileFramebufferUserClient")
				(require-not (signing-identifier "com.apple.ios.keyboards.JustMyType"))
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.internal.recap")))
			(require-all
				(signing-identifier "com.apple.CITests.xctrunner")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
			(require-all
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.ios.keyboards.JustMyType"))
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.internal.recap")))
			(require-all
				(signing-identifier "com.apple.itunescloudd")
				(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))))
			(require-all
				(signing-identifier "com.apple.sentry.iosapp")
				(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(signing-identifier "com.apple.proactive.PersonalizationPortraitTests.xctrunner")
				(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient")))
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(signing-identifier "com.apple.SoundBoard")
				(require-all (require-not (iokit-user-client-class "ApplePeppyUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceUserClient"))))
			(require-all
				(process-name "/usr/libexec/mobile_obliterator")
				(require-all (require-not (iokit-user-client-class "IOWatchdogUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "AppleSEPUserClient"))
(require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleEffaceableStorageUserClient"))))
			(require-all
				(signing-identifier "com.apple.MobileSoftwareUpdate.UpdateBrainService")
				(require-all (require-not (iokit-user-client-class "IOAESAcceleratorUserClient"))
(require-not (iokit-user-client-class "AppleEmbeddedSimpleSPINORFlasherDriverUC"))))
			(require-all
				(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
				(require-not (signing-identifier "com.apple.translationd"))
				(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-all (require-not (signing-identifier "com.apple.Terminal"))
(require-not (signing-identifier "com.apple.Terminal-iOS"))))
			(require-all
				(signing-identifier "com.apple.siri.Astroyd-iOS")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
			(require-all
				(signing-identifier "com.apple.gputools.DysonSourceGenProject")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
			(require-all
				(process-name "/usr/local/libexec/Astroyd/astroydd_iOS")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
			(require-all
				(signing-identifier "com.apple.PineBoard")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "AppleAPFSUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOHIDLibUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IODPDeviceConcreteUserClient"))
(require-not (iokit-user-client-class "IODPServiceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVDeviceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVServiceConcreteUserClient"))
(require-not (iokit-user-client-class "IOAVControllerConcreteUserClient"))))
			(require-all
				(signing-identifier "com.apple.PerfPowerServicesExtended")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOGPUMemoryInfoUserClient"))))
			(require-all
				(signing-identifier "com.apple.fillmoretool")
				(require-all (require-not (iokit-user-client-class "AppleFillmoreUserClient"))
(require-not (iokit-user-client-class "AppleAstrisGpioProbeUserClient"))))
			(require-all
				(iokit-user-client-class "ProvInfoIOKitUserClient")
				(require-not (signing-identifier "com.apple.amsaccountsd")))
			(require-all
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
				(require-not (signing-identifier "com.apple.backboard.display.archive"))
				(require-any (iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXCommandQueue"))
				(require-not (signing-identifier "com.apple.avfoundation.AVFoundation-Embedded-Unit-Tests.xctrunner")))
			(require-all
				(signing-identifier "com.apple.corecaptured")
				(require-all (require-not (iokit-user-client-class "CCLogPipeUserClient"))
(require-not (iokit-user-client-class "CCDataPipeUserClient"))
(require-not (iokit-user-client-class "RootDomainUserClient"))))
			(require-all
				(iokit-user-client-class "IOKitDiagnosticsClient")
				(require-not (signing-identifier "com.apple.ioclasscount")))
			(require-all
				(iokit-user-client-class "IOSurfaceRootUserClient")
				(require-not (signing-identifier "com.apple.TVSystemMenuService")))
			(require-all
				(iokit-user-client-class "AppleExternalAmpControllerUserClient")
				(require-not (signing-identifier "com.apple.ampctl")))
			(require-all
				(signing-identifier "com.apple.TVSystemBulletinService")
				(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))))
			(require-all
				(require-any (iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOMobileFramebufferUserClient"))
				(require-not (signing-identifier "com.apple.avfoundation.AVFoundation-Embedded-Unit-Tests.xctrunner")))
			(require-all
				(iokit-user-client-class "RootDomainUserClient")
				(require-not (signing-identifier "com.apple.vmd")))
			(require-all
				(signing-identifier "com.apple.sidecar-relay")
				(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
				(require-all (require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))))
			(require-all
				(signing-identifier "com.apple.pencilkit.TestingHarness")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOAVDeviceConcreteUserClient")
(iokit-user-client-class "IOAVServiceConcreteUserClient")
(iokit-user-client-class "IODPDeviceConcreteUserClient")
(iokit-user-client-class "IODPServiceConcreteUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
				(require-not (signing-identifier "com.apple.TVSettings"))
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
				(require-not (signing-identifier "com.apple.TVPhotos"))
				(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
				(require-not (signing-identifier "com.apple.SharingViewService"))
				(require-any
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.apple.RETestBed"))
						(iokit-user-client-class "AGXDeviceUserClient")
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
					(require-all
						(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
			(require-all
				(signing-identifier "com.apple.audiotest")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "H11ANEInDirectPathClient"))))
			(require-all
				(require-any (iokit-user-client-class "AGXGLContext")
(iokit-user-client-class "IOMobileFramebufferUserClient"))
				(require-not (signing-identifier "com.apple.TVPhotos"))
				(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXCommandQueue")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient"))
				(require-not (signing-identifier "com.apple.SharingViewService"))
				(require-any
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.apple.RETestBed"))
						(iokit-user-client-class "AGXDeviceUserClient")
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
					(require-all
						(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
			(require-all
				(signing-identifier "com.apple.audio.virtualaudio.IntegrationTests.xctrunner")
				(require-all (require-not (iokit-user-client-class "IOAudio2DeviceUserClient"))
(require-not (iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient"))
(require-not (iokit-user-client-class "AppleAOPAudioUserClient"))
(require-not (iokit-user-client-class "AppleAOPVoiceTriggerUserClient"))))
			(require-all
				(signing-identifier "com.Apple.RgbIrTestApp")
				(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
			(require-all
				(signing-identifier "com.apple.internal.JasperViewer")
				(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
			(require-all
				(signing-identifier "com.apple.arkit.ARKit-iOS-tests-app")
				(require-all (require-not (iokit-user-client-class "H11ANEInDirectPathClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
(require-not (iokit-user-client-class "AppleH10CamInUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXDeviceUserClient"))))
			(require-all
				(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
				(require-not (signing-identifier "com.apple.SharingViewService"))
				(require-any
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-not (signing-identifier "com.apple.RETestBed"))
						(iokit-user-client-class "AGXDeviceUserClient")
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
					(require-all
						(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
						(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))))
			(require-all
				(signing-identifier "com.apple.PreBoard")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOAVControllerConcreteUserClient")))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
				(require-not (signing-identifier "com.apple.REKit2SampleBrowser")))
			(require-all
				(signing-identifier "com.apple.PowerlogPresubmissionTests.xctrunner")
				(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOReportUserClient"))
(require-not (iokit-user-client-class "IOGPUMemoryInfoUserClient"))
(require-not (iokit-user-client-class "IOAccelMemoryInfoUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
			(require-all
				(signing-identifier "com.apple.soundanalysisd")
				(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))))
			(require-all
				(require-any (iokit-user-client-class "AppleJPEGDriverUserClient")
(iokit-user-client-class "AGXGLContext")
(iokit-user-client-class "AGXSharedUserClient")
(iokit-user-client-class "AGXDevice")
(iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (signing-identifier "com.apple.Photo-Booth"))
				(iokit-user-client-class "AGXDeviceUserClient")
				(require-not (signing-identifier "com.apple.PassKitCoreXPCService")))
			(require-all
				(require-any (iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient"))
				(require-not (signing-identifier "com.apple.PassKitCoreXPCService")))
			(require-all
				(signing-identifier "com.apple.NPKCompanionAgent")
				(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient")))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(iokit-user-client-class "AppleEmbeddedGPSControlUserClient")
				(require-not (signing-identifier "com.apple.gpsd")))
			(require-all
				(iokit-user-client-class "AppleMultitouchDeviceUserClient")
				(require-not (signing-identifier "com.apple.Flounder")))
			(require-all
				(require-any (signing-identifier "com.apple.metalAR")
(signing-identifier "com.apple.recorderapp.recorder.iphone"))
				(require-all (require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))))
			(require-all
				(signing-identifier "com.apple.cloudphotod")
				(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))))
			(require-all
				(signing-identifier "com.apple.itunesstored")
				(require-all (require-not (iokit-user-client-class "ProvInfoIOKitUserClient"))
(require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")))
				(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
				(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))
			(require-all
				(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "RootDomainUserClient")
(iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "IOMobileFramebufferUserClient")
(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient")
(iokit-user-client-class "IOSurfaceAcceleratorClient"))
				(require-not (signing-identifier "com.apple.Bridge"))
				(require-any
					(require-all
						(signing-identifier "com.apple.AKTester")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-all (require-not (subpath "/private/var/tmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))
(require-not (subpath "/private/var/roletmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))))
					(require-all
						(iokit-user-client-class "IOMobileFramebufferUserClient")
						(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))))
			(require-all
				(signing-identifier "com.apple.Family-Ties")
				(require-all (require-not (iokit-user-client-class "AGXDeviceUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
			(require-all
				(require-any (iokit-user-client-class "com_apple_audio_IOBorealisOwlUserClient")
(iokit-user-client-class "IOTimeSyncUserClient")
(iokit-user-client-class "IOTimeSyncDomainUserClient")
(iokit-user-client-class "IOTimeSyncgPTPManagerUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
				(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))
			(require-all
				(signing-identifier "com.apple.internal.iOStoMac")
				(require-all (require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncDomainUserClient"))
(require-not (iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
				(require-all (require-not (iokit-user-client-class "IOTimeSyncgPTPManagerUserClient"))
(require-not (iokit-user-client-class "IOTimeSyncClockManagerUserClient"))))
			(require-all
				(iokit-user-client-class "AppleJPEGDriverUserClient")
				(require-not (signing-identifier "com.apple.Bridge"))
				(require-any
					(require-all
						(signing-identifier "com.apple.AKTester")
						(require-all (require-not (iokit-user-client-class "RootDomainUserClient"))
(require-not (iokit-user-client-class "IOSurfaceRootUserClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient"))))
					(require-all
						(require-any (iokit-user-client-class "AGXDeviceUserClient")
(iokit-user-client-class "IOSurfaceRootUserClient"))
						(require-all (require-not (subpath "/private/var/tmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))
(require-not (subpath "/private/var/roletmp/com.apple.dt.XCTest/SWECI-Tests-iOS.xctest"))))
					(require-all
						(iokit-user-client-class "IOMobileFramebufferUserClient")
						(require-all (require-not (process-name "/Applications/AudioToolboxTests_iOS-Runner.app/AudioToolboxTests_iOS-Runner"))
(require-not (process-name "/Applications/AVFAudio-UnitTests_iOS-Runner.app/AVFAudio-UnitTests_iOS-Runner"))))))
			(require-all
				(require-not (debug-mode))
				(require-not (process-attribute is-initproc))
				(require-not (process-attribute is-sandboxed))
				(require-all (require-not (iokit-user-client-class-prefix "${ENTITLEMENT:com.apple.security.exception.iokit-user-client-class}"))
(require-not (iokit-user-client-class-prefix "${ENTITLEMENT:com.apple.security.iokit-user-client-class}")))
				(require-all (require-not (subpath "/AppleInternal"))
(require-not (subpath "/usr/local/bin"))))
			(require-all
				(signing-identifier "com.apple.HeadBoard")
				(require-all (require-not (iokit-user-client-class "AppleJPEGDriverUserClient"))
(require-not (iokit-user-client-class "AGXDevice"))
(require-not (iokit-user-client-class "AGXCommandQueue"))
(require-not (iokit-user-client-class "AGXSharedUserClient"))
(require-not (iokit-user-client-class "IOSurfaceAcceleratorClient"))
(require-not (iokit-user-client-class "IOMobileFramebufferUserClient")))))))
(deny iokit-open*
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(iokit-user-client-class "AppleKeyStore")
		(require-not (entitlement-is-present "b'com.apple.private.intelligenceplatform.use-cases'"))
		(require-not (entitlement-is-present "b'com.apple.private.biome.read-write'"))
		(require-not (entitlement-is-present "b'com.apple.private.biome.writer'"))
		(require-not (entitlement-is-present "b'com.apple.private.biome.pruner'"))
		(entitlement-is-present "b'com.apple.private.biome.read-only'")))
(deny ipc-posix-sem-wait
	(ipc-posix-name "com.apple.featureflags.shm"))
(deny ipc-posix-shm*
	(require-all
		(ipc-posix-name "com.apple.featureflags.shm")
		(require-not (entitlement-is-bool-true "b'com.apple.private.featureflags.write_shm'"))))
(deny mach*
	(require-all (require-not (global-name "com.apple.logd"))
(require-not (global-name "com.apple.trustd"))
(require-not (global-name "com.apple.wifi.manager"))
(require-not (global-name "com.apple.iokit.powerdxpc"))
(require-not (global-name "com.apple.networkd"))
(require-not (global-name "com.apple.nehelper"))
(require-not (global-name "com.apple.PowerManagement.control"))
(require-not (global-name "com.apple.powerlog.plxpclogger.xpc"))
(require-not (global-name "com.apple.AssetCacheLocatorService"))
(require-not (global-name "com.apple.revisiond"))
(require-not (global-name "com.apple.runningboard"))
(require-not (global-name "com.apple.SystemConfiguration.configd"))
(require-not (global-name "com.apple.FSEvents"))
(require-not (global-name "com.apple.FileCoordination"))
(require-not (global-name "com.apple.fairplayd.versioned"))
(require-not (global-name "com.apple.frontboard.systemappservices"))
(require-not (global-name "com.apple.osanalytics.osanalyticshelper"))
(require-not (global-name "com.apple.CommCenter"))
(require-not (global-name "com.apple.CoreAuthentication.daemon"))
(require-not (global-name "com.apple.adid"))
(require-not (global-name "com.apple.awdd"))
(require-not (global-name "com.apple.analyticsd"))
(require-not (global-name "com.apple.aggregated"))
(require-not (global-name "com.apple.appsupport.cplogd"))
(require-not (global-name "com.apple.securityd"))
(require-not (global-name "com.apple.system.notification_center"))
(require-not (global-name "com.apple.system.logger"))
(require-not (global-name "com.apple.system.libinfo.muser"))
(require-not (global-name "com.apple.dnssd.service"))
(require-not (global-name "com.apple.duetactivityscheduler"))
(require-not (global-name "com.apple.diagnosticd"))
(require-not (global-name "com.apple.distributed_notifications@1v3"))
(require-not (global-name "com.apple.managedconfiguration.profiled.public"))
(require-not (global-name "com.apple.mobilegestalt.xpc"))
(require-not (global-name "com.apple.mobile.usermanagerd.xpc"))
(require-not (global-name "com.apple.mobile.keybagd.xpc"))
(require-not (global-name "com.apple.mobile.keybagd.UserManager.xpc"))
(require-not (global-name "com.apple.cfprefsd.daemon"))
(require-not (global-name "com.apple.cfprefsd.daemon.system"))
(require-not (global-name "com.apple.cfnetwork.cfnetworkagent"))
(require-not (global-name "com.apple.cfnetwork.AuthBrokerAgent"))
(require-not (global-name "com.apple.containermanagerd"))
(require-not (global-name "com.apple.containermanagerd.system"))
(require-not (global-name "com.apple.commcenter.xpc"))
(require-not (global-name "com.apple.commcenter.atcs.xpc"))
(require-not (global-name "com.apple.commcenter.mobile-helper"))))
(deny mach-derive-port
	(require-all
		(require-not (entitlement-is-bool-true "b'com.apple.private.host-exception-port-override'"))
		(require-not (process-attribute is-initproc))))
(deny mach-host*
	(require-all
		(require-not (process-attribute is-initproc))
		(host-special-port "HOST_TELEMETRY_PORT")
		(entitlement-is-bool-true "b'com.apple.private.xpc.launchd.event-monitor'")))
(deny mach-issue-extension
	(require-all
		(process-attribute is-platform-binary)
		(xpc-service-name "com.apple.WebKit.")
		(require-any
			(require-any (signing-identifier "com.apple.family")
(signing-identifier "com.apple.Spotlight")
(signing-identifier "com.apple.purplebuddy")
(signing-identifier "com.apple.Preferences")
(signing-identifier "com.apple.webbookmarksd")
(signing-identifier "com.apple.safarifetcherd")
(signing-identifier "com.apple.mobilesms.compose")
(signing-identifier "com.apple.tdg.systemapps.MuseBuddyApp"))
			(require-not (entitlement-is-bool-true "b'com.apple.webkit-client'"))
			(require-any (subpath "/usr/local")
(subpath "/AppleInternal"))
			(require-all
				(process-attribute is-sandboxed)
				(require-any
					(process-attribute is-protoboxed)
					(require-all
						(entitlement-is-present "b'com.apple.developer.icloud-services'")
						(require-all (require-not (global-name "com.apple.revisiond"))
(require-not (global-name "com.apple.librariand"))
(require-not (global-name "com.apple.mediaserverd"))
(require-not (global-name "com.apple.itunescloudd.xpc"))
(require-not (global-name "com.apple.itunesstored.xpc"))
(require-not (global-name "com.apple.bird"))
(require-not (global-name "com.apple.bird.token"))
(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
(require-not (global-name "com.apple.pegasus"))
(require-not (global-name "com.apple.privacyaccountingd"))
(require-not (global-name "com.apple.FileProvider"))
(require-not (global-name "com.apple.FileCoordination"))
(require-not (global-name "com.apple.springboard.backgroundappservices"))
(require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor"))
(require-not (global-name "com.apple.timesync.ptp.manager"))
(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
(require-not (global-name "com.apple.audioanalyticsd"))
(require-not (global-name "com.apple.audio.AudioSession"))
(require-not (global-name "com.apple.coremedia.player.xpc"))
(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
(require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
(require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession"))
(require-not (global-name "com.apple.coremedia.sts"))
(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
(require-not (global-name "com.apple.coremedia.sandboxserver"))
(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
(require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc"))
(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
(require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.videocompositor"))
(require-not (global-name "com.apple.coremedia.admin"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.asset.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc"))
(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))))
					(require-all
						(require-any (global-name "com.apple.sociallayerd")
(global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight"))
						(require-not (entitlement-is-present "b'com.apple.developer.shared-with-you'"))
						(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.developer.family-controls'")
						(require-all (require-not (global-name "com.apple.UsageTrackingAgent"))
(require-not (global-name "com.apple.FamilyControlsAgent"))
(require-not (global-name "com.apple.ManagedSettingsAgent"))))
					(require-all
						(global-name "com.apple.siri.analytics.assistant")
						(require-not (entitlement-is-present "b'com.apple.siri.analytics.assistant'")))
					(require-all
						(global-name "com.apple.PairingManager")
						(require-not (entitlement-is-present "b'com.apple.PairingManager.Read'")))
					(require-all
						(global-name "com.apple.chronoservices")
						(require-not (entitlement-is-present "b'com.apple.chrono.invalidate-timelines'")))
					(require-all
						(xpc-service-name "com.apple.WorkflowKit.BackgroundShortcutRunner")
						(require-not (entitlement-is-present "b'com.apple.siri.VoiceShortcuts.xpc'"))
						(require-not (entitlement-is-present "b'com.apple.shortcuts.background-running'")))
					(require-all
						(require-any (global-name "com.apple.biome.compute.source")
(global-name "com.apple.biome.compute.publisher.service")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system"))
						(require-not (entitlement-is-present "b'com.apple.private.biome.writer'"))
						(require-not (entitlement-is-present "b'com.apple.private.biome.pruner'"))
						(require-not (entitlement-is-present "b'com.apple.private.biome.read-write'"))
						(require-any (global-name "com.apple.biome.compute.publisher.service")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system"))
						(require-not (entitlement-is-present "b'com.apple.private.intelligenceplatform.use-cases'"))
						(require-not (entitlement-is-present "b'com.apple.private.biome.read-only'")))
					(require-all
						(global-name "com.apple.siri.VoiceShortcuts.xpc")
						(entitlement-is-bool-true "b'com.apple.siri.VoiceShortcuts.xpc'"))
					(require-all
						(require-any (global-name "com.apple.ak.puffin.xpc")
(global-name "com.apple.xpc.amstoold")
(global-name "com.apple.xpc.amsaccountsd")
(global-name "com.apple.xpc.amsengagementd"))
						(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
					(require-all
						(global-name "com.apple.matter.framework.xpc")
						(require-not (entitlement-is-present "b'com.apple.developer.homekit'")))
					(require-all
						(require-any (global-name "com.apple.SensorKit.reader")
(global-name "com.apple.SensorKit.authorization")
(global-name "com.apple.SensorKit.LongTermStorageHelper"))
						(require-not (entitlement-is-present "b'com.apple.developer.sensorkit.reader.allow'"))
						(require-not (entitlement-is-present "b'com.apple.private.sensorkit.reader.wildcard.allow'"))
						(require-not (entitlement-is-present "b'com.apple.sensorkit.reader.allow'")))
					(require-all
						(global-name "com.apple.group-activities.conversationmanagerhost")
						(require-not (entitlement-is-present "b'com.apple.developer.game-center'")))
					(require-all
						(global-name "com.apple.SensorKit.writer")
						(require-not (entitlement-is-present "b'com.apple.private.sensorkit.writer.allow'"))
						(entitlement-is-present "b'com.apple.sensorkit.writer.allow'"))
					(require-all
						(require-any (global-name "com.apple.cloudasset.cloudd")
(global-name "com.apple.copresence.conversationmanagerhost"))
						(require-not (entitlement-is-present "b'com.apple.developer.group-session'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.corespotlight.search.internal'")
						(require-all (require-not (global-name "com.apple.spotlight.SearchAgent"))
(require-not (global-name "com.apple.spotlight.IndexAgent"))
(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))))
					(require-all
						(global-name "com.apple.securityd.systemkeychain")
						(entitlement-is-present "b'com.apple.private.system-keychain'"))
					(require-all
						(global-name "com.apple.sociallayerd")
						(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
					(require-all
						(global-name "com.apple.securityd.ckks")
						(entitlement-is-bool-true "b'com.apple.private.ckks'"))
					(require-all
						(global-name "com.apple.CMFallDetectionServer")
						(require-not (entitlement-is-present "b'com.apple.developer.health.fall-detection'")))
					(require-all
						(global-name "com.apple.sleepd.sleepserver")
						(require-not (entitlement-is-present "b'com.apple.private.sleepd'")))
					(require-all
						(require-any (global-name "com.apple.avatar.service")
(global-name "com.apple.avatar.support"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.avatar.store'")))
					(require-all
						(global-name "com.apple.abm.helper.mobile")
						(require-not (entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")))
					(require-all
						(global-name "com.apple.appleneuralengine.private")
						(entitlement-is-bool-true "b'com.apple.appleneuralengine.private.allow'"))
					(require-all
						(require-any (global-name "com.apple.photos.ImageConversionService")
(global-name "com.apple.photos.VideoConversionService"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.photos.service.mediaconversion'")))
					(require-all
						(global-name "com.apple.suggestd.spotlight")
						(require-not (entitlement-is-present "b'com.apple.private.suggestions.spotlight'")))
					(require-all
						(global-name "com.apple.symptom_analytics")
						(require-not (entitlement-is-bool-true "b'com.apple.symptoms.NetworkOfInterest'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.refresh'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.setsnapshot'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.train'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.setwatchpoint'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.configure'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.reset'"))
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.healthcheck'"))
						(entitlement-is-bool-true "b'com.apple.symptom_analytics.query'"))
					(require-all
						(global-name "com.apple.suggestd.mail")
						(require-not (entitlement-is-present "b'com.apple.private.suggestions.mail'")))
					(require-all
						(global-name "com.apple.appstored.xpc.request")
						(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-system-apps'"))
						(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-apps'"))
						(require-any (global-name "com.apple.appstored.xpc.updates")
(global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
						(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
					(require-all
						(global-name "com.apple.suggestd.events")
						(require-not (entitlement-is-present "b'com.apple.private.suggestions.events'")))
					(require-all
						(entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'")
						(require-all (require-not (global-name "com.apple.mobileassetd"))
(require-not (global-name "com.apple.mobileassetd.v2"))
(require-not (global-name "com.apple.mobileasset.autoasset"))))
					(require-all
						(global-name "com.apple.suggestd.contacts")
						(require-not (entitlement-is-present "b'com.apple.private.suggestions.contacts'")))
					(require-all
						(global-name "com.apple.tailspind")
						(require-not (entitlement-is-bool-true "b'com.apple.tailspin.config-apply'"))
						(entitlement-is-bool-true "b'com.apple.tailspin.dump-output'"))
					(require-all
						(global-name "com.apple.suggestd.suggestionmanager")
						(require-not (entitlement-is-present "b'com.apple.private.suggestions'")))
					(require-all
						(global-name "com.apple.rtcreportingd")
						(entitlement-is-bool-true "b'com.apple.private.rtcreportingd'"))
					(require-all
						(global-name "com.apple.diagnosticpipeline.service")
						(entitlement-is-present "b'com.apple.diagnosticpipeline.request'"))
					(require-all
						(require-any (global-name "com.apple.bluetooth.xpc")
(global-name "com.apple.server.bluetooth.general.xpc"))
						(require-not (entitlement-is-bool-true "b'com.apple.bluetooth.system'")))
					(require-all
						(global-name "com.apple.BluetoothServices")
						(require-not (entitlement-is-present "b'com.apple.BluetoothServices'")))
					(require-all
						(global-name "com.apple.nfcd.service.corenfc")
						(require-not (entitlement-is-present "b'com.apple.developer.nfc.readersession.formats'"))
						(entitlement-is-present "b'com.apple.developer.nfc.hce'"))
					(require-all
						(require-any (global-name "com.apple.ibooks.BLService")
(global-name "com.apple.xpc.amsaccountsd"))
						(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.voicememod.client'")
						(require-all (require-not (global-name "com.apple.voicememod.xpc"))
(require-not (global-name "com.apple.voicememod.datastore.Cloud"))
(require-not (global-name "com.apple.voicememod.datastore.EncryptedCloud"))))
					(require-all
						(global-name "com.apple.coremedia.carplayavvc.xpc")
						(require-not (entitlement-is-bool-true "b'com.apple.airplay.carplayavvc'")))
					(require-all
						(global-name "com.apple.systemstatus.publisher")
						(require-not (entitlement-is-present "b'com.apple.systemstatus.publisher.domains'")))
					(require-all
						(require-any (global-name "com.apple.pearld")
(global-name "com.apple.biometrickitd")
(global-name "com.apple.biometrickitd.oyster"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.biometrickit.allow-connect'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.bmk.allow'")))
					(require-all
						(global-name "com.apple.assistant.settings")
						(require-not (entitlement-is-present "b'com.apple.assistant.settings'")))
					(require-all
						(global-name "com.apple.itunesstored.xpc")
						(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
					(require-all
						(global-name "com.apple.coreduetd.context")
						(entitlement-is-bool-true "b'com.apple.coreduetd.context'"))
					(require-all
						(global-name "com.apple.corecaptured")
						(entitlement-is-bool-true "b'com.apple.corecapture.manager-access'"))
					(require-all
						(global-name "com.apple.ap.adservicesd.statusconditionservice")
						(require-not (entitlement-is-bool-true "b'com.apple.ap.adservicesd.statusconditionclient.allow_write'"))
						(require-not (entitlement-is-bool-true "b'com.apple.ap.adservicesd.statusconditionclient.allow_read'")))
					(require-all
						(global-name "com.apple.symptom_diagnostics")
						(require-not (entitlement-is-bool-true "b'com.apple.symptom_diagnostics.report'")))
					(require-all
						(global-name "com.apple.adid")
						(entitlement-is-present "b'adi-client'"))
					(require-all
						(entitlement-is-bool-true "b'com.apple.coreduetd.allow'")
						(require-any (global-name "com.apple.coreduetd")
(global-name "com.apple.coreduetd.people")
(global-name "com.apple.coreduetd.knowledge")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system")
(global-name "com.apple.suggestd.PersonalizationPortrait.DeletionTracking")))
					(require-all
						(global-name "com.apple.dprivacyd")
						(entitlement-is-bool-true "b'com.apple.private.dprivacyd.allow'"))
					(require-all
						(global-name "com.apple.seserviced.kmlXpcService")
						(require-not (entitlement-is-present "b'com.apple.seserviced.kmlXpcService'")))
					(require-all
						(global-name "com.apple.telephonyutilities.callservicesdaemon.callprovidermanager")
						(entitlement-is-present "b'com.apple.telephonyutilities.callservicesd'"))
					(require-all
						(global-name "com.apple.frontboard.systemappservices")
						(require-not (entitlement-is-bool-true "b'com.apple.frontboard.launchapplications'")))
					(require-all
						(global-name "com.apple.absd")
						(require-not (entitlement-is-present "b'abs-client'"))
						(require-not (entitlement-is-present "b'absinthe-client'")))
					(require-all
						(global-name "com.apple.TextInput.shortcuts")
						(require-not (entitlement-is-bool-true "b'com.apple.keyboardservices.textreplacement.allow'")))
					(require-all
						(require-any (global-name "com.apple.ak.puffin.xpc")
(global-name "com.apple.ak.custodian.xpc"))
						(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.internal'"))
						(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.owner'"))
						(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
					(require-all
						(global-name "com.apple.seserviced")
						(require-not (entitlement-is-present "b'com.apple.internal.seserviced.all.endpoints.and.cas'"))
						(require-not (entitlement-is-present "b'com.apple.seserviced.seendpoints.certificateauthorities'"))
						(require-not (entitlement-is-present "b'com.apple.seserviced.key'"))
						(require-not (entitlement-is-present "b'com.apple.seserviced.seendpoints'")))
					(require-all
						(global-name "com.apple.logd.admin")
						(require-not (entitlement-is-bool-true "b'com.apple.private.logging.admin'"))
						(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'"))
					(require-all
						(global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight")
						(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
					(require-all
						(global-name "com.apple.springboard.statusbarservices")
						(entitlement-is-bool-true "b'com.apple.springboard.statusbarstyleoverrides'"))
					(require-all
						(global-name "com.apple.absinthed")
						(require-not (entitlement-is-present "b'absinthe-client'")))
					(require-all
						(global-name "com.apple.aa.custodian.xpc")
						(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.owner'"))
						(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.internal'"))
						(entitlement-is-bool-true "b'com.apple.authkit.client.private'"))
					(require-all
						(global-name "com.apple.rapport.people")
						(require-not (entitlement-is-bool-true "b'com.apple.rapport.people'")))
					(require-all
						(global-name "com.apple.ScreenTimeAgent.Contacts")
						(require-not (entitlement-is-bool-true "b'com.apple.private.contacts'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time'"))
						(entitlement-is-bool-true "b'com.apple.private.contactsui'"))
					(require-all
						(global-name "com.apple.appstored.xpc.updates")
						(require-not (entitlement-is-bool-true "b'com.apple.appstored.update-apps'"))
						(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
					(require-all
						(require-any (global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
						(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-apps'"))
						(require-any (global-name "com.apple.appstored.xpc.updates")
(global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
						(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
					(require-all
						(global-name "com.apple.proactive.PersonalizationPortrait.Topic.readWrite")
						(require-not (entitlement-is-present "b'com.apple.proactive.PersonalizationPortrait.Topic.readWrite'")))
					(require-all
						(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
						(entitlement-is-bool-true "b'com.apple.private.passkit.trusted-device-enrollment-info'"))
					(require-all
						(global-name "com.apple.rapport")
						(require-not (entitlement-is-bool-true "b'com.apple.rapport.Client'"))
						(require-not (entitlement-is-bool-true "b'com.apple.CompanionLink'")))
					(require-all
						(global-name "com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite")
						(require-not (entitlement-is-present "b'com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite'")))
					(require-all
						(global-name "com.apple.bulletinboard.dataproviderconnection")
						(entitlement-is-bool-true "b'com.apple.bulletinboard.dataprovider'"))
					(require-all
						(global-name "com.apple.contactsd.launch-services-proxy")
						(entitlement-is-bool-true "b'com.apple.private.contactsui'"))
					(require-all
						(global-name "com.apple.CompanionLink")
						(require-not (entitlement-is-bool-true "b'com.apple.CompanionLink'")))
					(require-all
						(global-name "com.apple.wifi.manager")
						(require-not (entitlement-is-bool-true "b'com.apple.wifi.manager-access'")))
					(require-all
						(global-name "com.apple.suggestd.PersonalizationPortrait.StringDonation")
						(require-not (entitlement-is-bool-true "b'com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite'"))
						(require-not (entitlement-is-bool-true "b'com.apple.proactive.PersonalizationPortrait.Topic.readWrite'")))
					(require-all
						(require-any (global-name "com.apple.trustd")
(global-name "com.apple.identityservicesd.nsxpc"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.ids.remoteurlconnection'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
					(require-all
						(global-name "com.apple.TapToRadarKit.service")
						(require-not (entitlement-is-present "b'com.apple.TapToRadarKit.service-access'")))
					(require-all
						(global-name "com.apple.watchlistd.xpc")
						(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))
					(require-all
						(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
						(entitlement-is-bool-true "b'com.apple.private.ids.remotecredentials'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
					(require-all
						(require-any (global-name "com.apple.ScreenTimeAgent.private")
(global-name "com.apple.ScreenTimeAgent.ask-for-time"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time.persistence'")))
					(require-all
						(global-name "com.apple.Carousel.eligibilityservice")
						(require-not (entitlement-is-bool-true "b'com.apple.Carousel.eligibilityservice'")))
					(require-all
						(global-name "com.apple.private.corewifi.readonly-xpc")
						(require-not (entitlement-is-present "b'com.apple.private.corewifi.readonly'")))
					(require-all
						(global-name "com.apple.siriknowledged")
						(require-not (entitlement-is-bool-true "b'com.apple.siriknowledged'"))
						(require-not (entitlement-is-bool-true "b'com.apple.siri.koa.donate.internal'")))
					(require-all
						(global-name "com.apple.duetactivityscheduler")
						(require-not (entitlement-is-bool-true "b'com.apple.duet.activityscheduler.allow'")))
					(require-all
						(global-name "com.apple.private.corewifi.internal-xpc")
						(require-not (entitlement-is-present "b'com.apple.private.corewifi.internal'")))
					(require-all
						(global-name "com.apple.siri.siriaudio-helper")
						(require-not (entitlement-is-bool-true "b'com.apple.siri.siriaudio-helper'")))
					(require-all
						(global-name "com.apple.dmd.policy")
						(require-not (entitlement-is-bool-true "b'com.apple.private.dmd.policy'")))
					(require-all
						(global-name "com.apple.private.corewifi-xpc")
						(require-not (entitlement-is-present "b'com.apple.private.corewifi'")))
					(require-all
						(global-name "com.apple.dmd.emergency-mode")
						(require-not (entitlement-is-bool-true "b'com.apple.private.dmd.emergency-mode'")))
					(require-all
						(global-name "com.apple.mobilerepaird")
						(require-not (entitlement-is-present "b'com.apple.private.mobilerepair.xpc'")))
					(require-all
						(global-name "com.apple.ScreenTimeAgent.persistence")
						(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time.persistence'")))
					(require-all
						(global-name "com.apple.mobile.usermanagerd.xpc")
						(require-not (entitlement-is-present "b'com.apple.keystore.device'")))))))
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(require-any
			(require-all
				(xpc-service-name "com.apple.SharePlay.GroupSessionService")
				(require-not (entitlement-is-present "b'com.apple.developer.game-center'")))
			(require-all
				(entitlement-is-present "b'com.apple.developer.icloud-services'")
				(require-all (require-not (global-name "com.apple.revisiond"))
(require-not (global-name "com.apple.librariand"))
(require-not (global-name "com.apple.mediaserverd"))
(require-not (global-name "com.apple.itunescloudd.xpc"))
(require-not (global-name "com.apple.itunesstored.xpc"))
(require-not (global-name "com.apple.bird"))
(require-not (global-name "com.apple.bird.token"))
(require-not (global-name "com.apple.quicklook.ThumbnailsAgent"))
(require-not (global-name "com.apple.pegasus"))
(require-not (global-name "com.apple.privacyaccountingd"))
(require-not (global-name "com.apple.FileProvider"))
(require-not (global-name "com.apple.FileCoordination"))
(require-not (global-name "com.apple.springboard.backgroundappservices"))
(require-not (global-name "com.apple.timesync.manager"))
(require-not (global-name "com.apple.timesync.expositor"))
(require-not (global-name "com.apple.timesync.ptp.manager"))
(require-not (global-name "com.apple.airplay.apsynccontroller.xpc"))
(require-not (global-name "com.apple.audioanalyticsd"))
(require-not (global-name "com.apple.audio.AudioSession"))
(require-not (global-name "com.apple.coremedia.player.xpc"))
(require-not (global-name "com.apple.coremedia.bytestream.xpc"))
(require-not (global-name "com.apple.coremedia.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.figcpecryptor"))
(require-not (global-name "com.apple.coremedia.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.figcontentkeysession.xpc"))
(require-not (global-name "com.apple.coremedia.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.customurlloader.xpc"))
(require-not (global-name "com.apple.coremedia.capturesource"))
(require-not (global-name "com.apple.coremedia.capturesession"))
(require-not (global-name "com.apple.coremedia.sts"))
(require-not (global-name "com.apple.coremedia.systemcontroller.xpc"))
(require-not (global-name "com.apple.coremedia.sandboxserver"))
(require-not (global-name "com.apple.coremedia.sandboxserver.xpc"))
(require-not (global-name "com.apple.coremedia.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.volumecontroller.xpc"))
(require-not (global-name "com.apple.coremedia.visualcontext.xpc"))
(require-not (global-name "com.apple.coremedia.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.videocompositor"))
(require-not (global-name "com.apple.coremedia.admin"))
(require-not (global-name "com.apple.coremedia.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.asset.xpc"))
(require-not (global-name "com.apple.coremedia.assetcacheinspector"))
(require-not (global-name "com.apple.coremedia.assetimagegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.remaker"))
(require-not (global-name "com.apple.coremedia.remotequeue"))
(require-not (global-name "com.apple.coremedia.routediscoverer.xpc"))
(require-not (global-name "com.apple.coremedia.routingcontext.xpc"))
(require-not (global-name "com.apple.coremedia.routingsessionmanager.xpc"))
(require-not (global-name "com.apple.coremedia.externalstoragedevicemanager.xpc"))
(require-not (global-name "com.apple.coremedia.endpoint.xpc"))
(require-not (global-name "com.apple.coremedia.endpointremotecontrolsession.xpc"))
(require-not (global-name "com.apple.coremedia.mediaparserd.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.player.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.asset.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
(require-not (global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc"))))
			(require-all
				(require-any (global-name "com.apple.sociallayerd")
(global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight"))
				(require-not (entitlement-is-present "b'com.apple.developer.shared-with-you'"))
				(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.developer.family-controls'")
				(require-all (require-not (global-name "com.apple.UsageTrackingAgent"))
(require-not (global-name "com.apple.FamilyControlsAgent"))
(require-not (global-name "com.apple.ManagedSettingsAgent"))))
			(require-all
				(global-name "com.apple.siri.analytics.assistant")
				(require-not (entitlement-is-present "b'com.apple.siri.analytics.assistant'")))
			(require-all
				(global-name "com.apple.PairingManager")
				(require-not (entitlement-is-present "b'com.apple.PairingManager.Read'")))
			(require-all
				(global-name "com.apple.chronoservices")
				(require-not (entitlement-is-present "b'com.apple.chrono.invalidate-timelines'")))
			(require-all
				(xpc-service-name "com.apple.WorkflowKit.BackgroundShortcutRunner")
				(require-not (entitlement-is-present "b'com.apple.siri.VoiceShortcuts.xpc'"))
				(require-not (entitlement-is-present "b'com.apple.shortcuts.background-running'")))
			(require-all
				(require-any (global-name "com.apple.biome.compute.source")
(global-name "com.apple.biome.compute.publisher.service")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.writer'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.pruner'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.read-write'"))
				(require-any (global-name "com.apple.biome.compute.publisher.service")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system"))
				(require-not (entitlement-is-present "b'com.apple.private.intelligenceplatform.use-cases'"))
				(require-not (entitlement-is-present "b'com.apple.private.biome.read-only'")))
			(require-all
				(global-name "com.apple.siri.VoiceShortcuts.xpc")
				(entitlement-is-bool-true "b'com.apple.siri.VoiceShortcuts.xpc'"))
			(require-all
				(require-any (global-name "com.apple.ak.puffin.xpc")
(global-name "com.apple.xpc.amstoold")
(global-name "com.apple.xpc.amsaccountsd")
(global-name "com.apple.xpc.amsengagementd"))
				(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'")))
			(require-all
				(global-name "com.apple.matter.framework.xpc")
				(require-not (entitlement-is-present "b'com.apple.developer.homekit'")))
			(require-all
				(require-any (global-name "com.apple.SensorKit.reader")
(global-name "com.apple.SensorKit.authorization")
(global-name "com.apple.SensorKit.LongTermStorageHelper"))
				(require-not (entitlement-is-present "b'com.apple.developer.sensorkit.reader.allow'"))
				(require-not (entitlement-is-present "b'com.apple.private.sensorkit.reader.wildcard.allow'"))
				(require-not (entitlement-is-present "b'com.apple.sensorkit.reader.allow'")))
			(require-all
				(global-name "com.apple.group-activities.conversationmanagerhost")
				(require-not (entitlement-is-present "b'com.apple.developer.game-center'")))
			(require-all
				(global-name "com.apple.SensorKit.writer")
				(require-not (entitlement-is-present "b'com.apple.private.sensorkit.writer.allow'"))
				(entitlement-is-present "b'com.apple.sensorkit.writer.allow'"))
			(require-all
				(require-any (global-name "com.apple.cloudasset.cloudd")
(global-name "com.apple.copresence.conversationmanagerhost"))
				(require-not (entitlement-is-present "b'com.apple.developer.group-session'")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.corespotlight.search.internal'")
				(require-all (require-not (global-name "com.apple.spotlight.SearchAgent"))
(require-not (global-name "com.apple.spotlight.IndexAgent"))
(require-not (global-name "com.apple.spotlight.IndexDelegateAgent"))))
			(require-all
				(global-name "com.apple.securityd.systemkeychain")
				(entitlement-is-present "b'com.apple.private.system-keychain'"))
			(require-all
				(global-name "com.apple.sociallayerd")
				(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
			(require-all
				(global-name "com.apple.securityd.ckks")
				(entitlement-is-bool-true "b'com.apple.private.ckks'"))
			(require-all
				(global-name "com.apple.CMFallDetectionServer")
				(require-not (entitlement-is-present "b'com.apple.developer.health.fall-detection'")))
			(require-all
				(global-name "com.apple.sleepd.sleepserver")
				(require-not (entitlement-is-present "b'com.apple.private.sleepd'")))
			(require-all
				(require-any (global-name "com.apple.avatar.service")
(global-name "com.apple.avatar.support"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.avatar.store'")))
			(require-all
				(global-name "com.apple.abm.helper.mobile")
				(require-not (entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")))
			(require-all
				(global-name "com.apple.appleneuralengine.private")
				(entitlement-is-bool-true "b'com.apple.appleneuralengine.private.allow'"))
			(require-all
				(require-any (global-name "com.apple.photos.ImageConversionService")
(global-name "com.apple.photos.VideoConversionService"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.photos.service.mediaconversion'")))
			(require-all
				(global-name "com.apple.suggestd.spotlight")
				(require-not (entitlement-is-present "b'com.apple.private.suggestions.spotlight'")))
			(require-all
				(global-name "com.apple.symptom_analytics")
				(require-not (entitlement-is-bool-true "b'com.apple.symptoms.NetworkOfInterest'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.refresh'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.setsnapshot'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.train'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.setwatchpoint'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.configure'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.reset'"))
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_analytics.healthcheck'"))
				(entitlement-is-bool-true "b'com.apple.symptom_analytics.query'"))
			(require-all
				(global-name "com.apple.suggestd.mail")
				(require-not (entitlement-is-present "b'com.apple.private.suggestions.mail'")))
			(require-all
				(global-name "com.apple.appstored.xpc.request")
				(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-system-apps'"))
				(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-apps'"))
				(require-any (global-name "com.apple.appstored.xpc.updates")
(global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
			(require-all
				(global-name "com.apple.suggestd.events")
				(require-not (entitlement-is-present "b'com.apple.private.suggestions.events'")))
			(require-all
				(entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'")
				(require-all (require-not (global-name "com.apple.mobileassetd"))
(require-not (global-name "com.apple.mobileassetd.v2"))
(require-not (global-name "com.apple.mobileasset.autoasset"))))
			(require-all
				(global-name "com.apple.suggestd.contacts")
				(require-not (entitlement-is-present "b'com.apple.private.suggestions.contacts'")))
			(require-all
				(global-name "com.apple.tailspind")
				(require-not (entitlement-is-bool-true "b'com.apple.tailspin.config-apply'"))
				(entitlement-is-bool-true "b'com.apple.tailspin.dump-output'"))
			(require-all
				(global-name "com.apple.suggestd.suggestionmanager")
				(require-not (entitlement-is-present "b'com.apple.private.suggestions'")))
			(require-all
				(global-name "com.apple.rtcreportingd")
				(entitlement-is-bool-true "b'com.apple.private.rtcreportingd'"))
			(require-all
				(global-name "com.apple.diagnosticpipeline.service")
				(entitlement-is-present "b'com.apple.diagnosticpipeline.request'"))
			(require-all
				(require-any (global-name "com.apple.bluetooth.xpc")
(global-name "com.apple.server.bluetooth.general.xpc"))
				(require-not (entitlement-is-bool-true "b'com.apple.bluetooth.system'")))
			(require-all
				(global-name "com.apple.BluetoothServices")
				(require-not (entitlement-is-present "b'com.apple.BluetoothServices'")))
			(require-all
				(global-name "com.apple.nfcd.service.corenfc")
				(require-not (entitlement-is-present "b'com.apple.developer.nfc.readersession.formats'"))
				(entitlement-is-present "b'com.apple.developer.nfc.hce'"))
			(require-all
				(require-any (global-name "com.apple.ibooks.BLService")
(global-name "com.apple.xpc.amsaccountsd"))
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.voicememod.client'")
				(require-all (require-not (global-name "com.apple.voicememod.xpc"))
(require-not (global-name "com.apple.voicememod.datastore.Cloud"))
(require-not (global-name "com.apple.voicememod.datastore.EncryptedCloud"))))
			(require-all
				(global-name "com.apple.coremedia.carplayavvc.xpc")
				(require-not (entitlement-is-bool-true "b'com.apple.airplay.carplayavvc'")))
			(require-all
				(global-name "com.apple.systemstatus.publisher")
				(require-not (entitlement-is-present "b'com.apple.systemstatus.publisher.domains'")))
			(require-all
				(require-any (global-name "com.apple.pearld")
(global-name "com.apple.biometrickitd")
(global-name "com.apple.biometrickitd.oyster"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.biometrickit.allow-connect'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.bmk.allow'")))
			(require-all
				(global-name "com.apple.assistant.settings")
				(require-not (entitlement-is-present "b'com.apple.assistant.settings'")))
			(require-all
				(global-name "com.apple.itunesstored.xpc")
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
			(require-all
				(global-name "com.apple.coreduetd.context")
				(entitlement-is-bool-true "b'com.apple.coreduetd.context'"))
			(require-all
				(global-name "com.apple.corecaptured")
				(entitlement-is-bool-true "b'com.apple.corecapture.manager-access'"))
			(require-all
				(global-name "com.apple.ap.adservicesd.statusconditionservice")
				(require-not (entitlement-is-bool-true "b'com.apple.ap.adservicesd.statusconditionclient.allow_write'"))
				(require-not (entitlement-is-bool-true "b'com.apple.ap.adservicesd.statusconditionclient.allow_read'")))
			(require-all
				(global-name "com.apple.symptom_diagnostics")
				(require-not (entitlement-is-bool-true "b'com.apple.symptom_diagnostics.report'")))
			(require-all
				(global-name "com.apple.adid")
				(entitlement-is-present "b'adi-client'"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.coreduetd.allow'")
				(require-any (global-name "com.apple.coreduetd")
(global-name "com.apple.coreduetd.people")
(global-name "com.apple.coreduetd.knowledge")
(global-name "com.apple.biome.access.user")
(global-name "com.apple.biome.access.system")
(global-name "com.apple.suggestd.PersonalizationPortrait.DeletionTracking")))
			(require-all
				(global-name "com.apple.dprivacyd")
				(entitlement-is-bool-true "b'com.apple.private.dprivacyd.allow'"))
			(require-all
				(global-name "com.apple.seserviced.kmlXpcService")
				(require-not (entitlement-is-present "b'com.apple.seserviced.kmlXpcService'")))
			(require-all
				(global-name "com.apple.telephonyutilities.callservicesdaemon.callprovidermanager")
				(entitlement-is-present "b'com.apple.telephonyutilities.callservicesd'"))
			(require-all
				(global-name "com.apple.frontboard.systemappservices")
				(require-not (entitlement-is-bool-true "b'com.apple.frontboard.launchapplications'")))
			(require-all
				(global-name "com.apple.absd")
				(require-not (entitlement-is-present "b'abs-client'"))
				(require-not (entitlement-is-present "b'absinthe-client'")))
			(require-all
				(global-name "com.apple.TextInput.shortcuts")
				(require-not (entitlement-is-bool-true "b'com.apple.keyboardservices.textreplacement.allow'")))
			(require-all
				(require-any (global-name "com.apple.ak.puffin.xpc")
(global-name "com.apple.ak.custodian.xpc"))
				(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.internal'"))
				(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.owner'"))
				(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
			(require-all
				(global-name "com.apple.seserviced")
				(require-not (entitlement-is-present "b'com.apple.internal.seserviced.all.endpoints.and.cas'"))
				(require-not (entitlement-is-present "b'com.apple.seserviced.seendpoints.certificateauthorities'"))
				(require-not (entitlement-is-present "b'com.apple.seserviced.key'"))
				(require-not (entitlement-is-present "b'com.apple.seserviced.seendpoints'")))
			(require-all
				(global-name "com.apple.logd.admin")
				(require-not (entitlement-is-bool-true "b'com.apple.private.logging.admin'"))
				(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'"))
			(require-all
				(global-name "com.apple.proactive.PersonalizationPortrait.SocialHighlight")
				(require-not (entitlement-is-present "b'com.apple.private.sociallayer.highlights'")))
			(require-all
				(global-name "com.apple.springboard.statusbarservices")
				(entitlement-is-bool-true "b'com.apple.springboard.statusbarstyleoverrides'"))
			(require-all
				(global-name "com.apple.absinthed")
				(require-not (entitlement-is-present "b'absinthe-client'")))
			(require-all
				(global-name "com.apple.aa.custodian.xpc")
				(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.owner'"))
				(require-not (entitlement-is-bool-true "b'com.apple.authkit.client.internal'"))
				(entitlement-is-bool-true "b'com.apple.authkit.client.private'"))
			(require-all
				(global-name "com.apple.rapport.people")
				(require-not (entitlement-is-bool-true "b'com.apple.rapport.people'")))
			(require-all
				(global-name "com.apple.ScreenTimeAgent.Contacts")
				(require-not (entitlement-is-bool-true "b'com.apple.private.contacts'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time'"))
				(entitlement-is-bool-true "b'com.apple.private.contactsui'"))
			(require-all
				(global-name "com.apple.appstored.xpc.updates")
				(require-not (entitlement-is-bool-true "b'com.apple.appstored.update-apps'"))
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
			(require-all
				(require-any (global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
				(require-not (entitlement-is-bool-true "b'com.apple.appstored.install-apps'"))
				(require-any (global-name "com.apple.appstored.xpc.updates")
(global-name "com.apple.appstored.xpc.request")
(global-name "com.apple.appstored.xpc.jobmanager"))
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
			(require-all
				(global-name "com.apple.proactive.PersonalizationPortrait.Topic.readWrite")
				(require-not (entitlement-is-present "b'com.apple.proactive.PersonalizationPortrait.Topic.readWrite'")))
			(require-all
				(global-name "com.apple.passd.trusted-device-enrollment-info-provider")
				(entitlement-is-bool-true "b'com.apple.private.passkit.trusted-device-enrollment-info'"))
			(require-all
				(global-name "com.apple.rapport")
				(require-not (entitlement-is-bool-true "b'com.apple.rapport.Client'"))
				(require-not (entitlement-is-bool-true "b'com.apple.CompanionLink'")))
			(require-all
				(global-name "com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite")
				(require-not (entitlement-is-present "b'com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite'")))
			(require-all
				(global-name "com.apple.bulletinboard.dataproviderconnection")
				(entitlement-is-bool-true "b'com.apple.bulletinboard.dataprovider'"))
			(require-all
				(global-name "com.apple.contactsd.launch-services-proxy")
				(entitlement-is-bool-true "b'com.apple.private.contactsui'"))
			(require-all
				(global-name "com.apple.CompanionLink")
				(require-not (entitlement-is-bool-true "b'com.apple.CompanionLink'")))
			(require-all
				(global-name "com.apple.wifi.manager")
				(require-not (entitlement-is-bool-true "b'com.apple.wifi.manager-access'")))
			(require-all
				(global-name "com.apple.suggestd.PersonalizationPortrait.StringDonation")
				(require-not (entitlement-is-bool-true "b'com.apple.proactive.PersonalizationPortrait.NamedEntity.readWrite'"))
				(require-not (entitlement-is-bool-true "b'com.apple.proactive.PersonalizationPortrait.Topic.readWrite'")))
			(require-all
				(require-any (global-name "com.apple.trustd")
(global-name "com.apple.identityservicesd.nsxpc"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.ids.remoteurlconnection'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
			(require-all
				(global-name "com.apple.TapToRadarKit.service")
				(require-not (entitlement-is-present "b'com.apple.TapToRadarKit.service-access'")))
			(require-all
				(global-name "com.apple.watchlistd.xpc")
				(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'")))
			(require-all
				(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
				(entitlement-is-bool-true "b'com.apple.private.ids.remotecredentials'")
				(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
			(require-all
				(require-any (global-name "com.apple.ScreenTimeAgent.private")
(global-name "com.apple.ScreenTimeAgent.ask-for-time"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time.persistence'")))
			(require-all
				(global-name "com.apple.Carousel.eligibilityservice")
				(require-not (entitlement-is-bool-true "b'com.apple.Carousel.eligibilityservice'")))
			(require-all
				(global-name "com.apple.private.corewifi.readonly-xpc")
				(require-not (entitlement-is-present "b'com.apple.private.corewifi.readonly'")))
			(require-all
				(global-name "com.apple.siriknowledged")
				(require-not (entitlement-is-bool-true "b'com.apple.siriknowledged'"))
				(require-not (entitlement-is-bool-true "b'com.apple.siri.koa.donate.internal'")))
			(require-all
				(global-name "com.apple.duetactivityscheduler")
				(require-not (entitlement-is-bool-true "b'com.apple.duet.activityscheduler.allow'")))
			(require-all
				(global-name "com.apple.private.corewifi.internal-xpc")
				(require-not (entitlement-is-present "b'com.apple.private.corewifi.internal'")))
			(require-all
				(global-name "com.apple.siri.siriaudio-helper")
				(require-not (entitlement-is-bool-true "b'com.apple.siri.siriaudio-helper'")))
			(require-all
				(global-name "com.apple.dmd.policy")
				(require-not (entitlement-is-bool-true "b'com.apple.private.dmd.policy'")))
			(require-all
				(global-name "com.apple.private.corewifi-xpc")
				(require-not (entitlement-is-present "b'com.apple.private.corewifi'")))
			(require-all
				(global-name "com.apple.dmd.emergency-mode")
				(require-not (entitlement-is-bool-true "b'com.apple.private.dmd.emergency-mode'")))
			(require-all
				(global-name "com.apple.mobilerepaird")
				(require-not (entitlement-is-present "b'com.apple.private.mobilerepair.xpc'")))
			(require-all
				(global-name "com.apple.ScreenTimeAgent.persistence")
				(require-not (entitlement-is-bool-true "b'com.apple.private.screen-time.persistence'")))
			(require-all
				(global-name "com.apple.mobile.usermanagerd.xpc")
				(require-not (entitlement-is-present "b'com.apple.keystore.device'"))))))
(deny mach-task-special-port-set
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(entitlement-is-present "b'com.apple.developer.icloud-services'")
		(require-any (literal "/private/var/tmp/ubiquity.socket")
(literal-prefix "${FRONT_USER_HOME}/tmp/ubiquity.socket"))))
(deny necp-client-open
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(entitlement-is-present "b'com.apple.developer.icloud-services'")
		(require-any
			(require-all
				(extension "b'com.apple.app-sandbox.read-write'")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))
			(require-all
				(extension "b'com.apple.librarian.ubiquity-container'")
				(require-all (require-not (subpath-prefix "${HOME}/Library/Mobile Documents"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?"))
(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))))
(deny process*
	(literal)
	(require-all
		(require-not (entitlement-is-bool-true "b'com.apple.private.security.no-container'"))
		(require-not (entitlement-is-bool-true "b'com.apple.private.security.no-sandbox'"))
		(require-all (require-not (literal "/Developer/"))
(require-not (literal "/System/Developer/"))
(require-not (literal "/private/var/factory_mount/"))
(require-not (subpath "/private/var/containers/Bundle"))
(require-not (literal "/private/var/personalized_demo/"))
(require-not (literal "/private/var/personalized_debug/"))
(require-not (literal "/private/var/personalized_repair/"))
(require-not (literal "/private/var/personalized_quality/"))
(require-not (literal "/private/var/personalized_factory/"))
(require-not (literal "/private/var/personalized_automation/"))
(require-not (literal "/private/var/run/com.apple.security.cryptexd/mnt/")))
		(require-any
			(signing-identifier "com.apple.xpc.proxy")
			(require-any (subpath "/private/var/db/com.apple.xpc.roleaccountd.staging/exec")
(subpath "/private/var/run/com.apple.security.cryptexd/mnt"))
			(entitlement-load 6415)
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.security.storage.driverkitd'")
				(require-not (subpath "/private/var/db/driverkitd")))
			(require-all
				(subpath "/Applications")
				(require-all (require-not (signing-identifier "com.apple.MusicUIService"))
(require-not (signing-identifier "com.apple.AskPermissionUI"))
(require-not (signing-identifier "com.apple.PhotosViewService"))
(require-not (signing-identifier "com.apple.Home.HomeUIService"))
(require-not (signing-identifier "com.apple.Diagnostics.Canary"))
(require-not (signing-identifier "com.apple.family"))
(require-not (signing-identifier "com.apple.fieldtest"))
(require-not (signing-identifier "com.apple.TrustMe"))
(require-not (signing-identifier "com.apple.TapToRadar"))
(require-not (signing-identifier "com.apple.mobiletimer"))
(require-not (signing-identifier "com.apple.mobilesms.compose"))
(require-not (signing-identifier "com.apple.susuiservice"))
(require-not (signing-identifier "com.apple.social.SLYahooAuth"))
(require-not (signing-identifier "com.apple.social.SLGoogleAuth"))
(require-not (signing-identifier "com.apple.SharingViewService"))
(require-not (signing-identifier "com.apple.SharedWebCredentialViewService"))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+$")))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath "/Applications")
				(require-not (literal)))
			(require-all
				(subpath "/private/var/db/com.apple.xpc.roleaccountd.staging/exec")
				(require-not (subpath "/private/var/db/com.apple.xpc.roleaccountd.staging/exec"))
				(require-not (process-attribute is-initproc)))
			(require-all
				(subpath "/private/var/run/com.apple.security.cryptexd/mnt")
				(require-not (process-attribute is-initproc)))
			(require-all
				(subpath "/private/var")
				(require-not (subpath "/private/var/db/com.apple.xpc.roleaccountd.staging"))
				(require-any
					(require-not (subpath "/private/var/containers/Bundle"))
					(process-attribute is-initproc)))))
	(require-all
		(require-not (entitlement-value-regex #".+"))
		(require-not (entitlement-value #f))))
(deny process-codesigning
	(require-not (debug-mode)))
(deny process-legacy-codesigning-teamid-get
	(require-all
		(process-attribute is-sandboxed)
		(process-attribute is-protoboxed)
		(entitlement-is-bool-true "b'com.apple.security.exception.pseudo-tty-access'")))
(deny socket-option-set
	(require-all
		(require-not (c1 196b 014f 0150))
		(syscall-number SYS_undelete)))
(deny system-audit
	(process-attribute is-initproc))
(deny system-debug
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 93))
		(require-not (process-attribute is-protoboxed))
		(process-attribute is-sandboxed)
		(entitlement-is-present "b'com.apple.developer.icloud-services'"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 32))
		(require-not (process-attribute is-protoboxed))
		(process-attribute is-sandboxed)
		(entitlement-is-present "b'com.apple.developer.icloud-services'"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 31))
		(require-not (process-attribute is-protoboxed))
		(process-attribute is-sandboxed)
		(entitlement-is-present "b'com.apple.developer.icloud-services'")))
(deny system-kext-load
	(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.get-kext-info'")))
(deny system-mac*
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(mac-syscall-number 5)
		(mac-policy-name-regex "b'FSandbox\x0f\x00\x0f'")
		(require-not (entitlement-is-bool-true "b'com.apple.watchlist.private'"))
		(require-not (entitlement-is-present "b'com.apple.developer.icloud-services'"))
		(require-not (entitlement-is-present "b'com.apple.private.applemediaservices'"))
		(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
(deny system-nfssvc
	(require-all
		(privilege-id 14006)
		(require-not (entitlement-is-bool-true "b'com.apple.private.vfs.setsize'")))
	(require-all
		(privilege-id 10017)
		(require-not (entitlement-is-bool-true "b'com.apple.private.network.ipsec-wake-packet'")))
	(require-all
		(privilege-id 10016)
		(require-not (entitlement-is-bool-true "b'com.apple.private.necp.drop_all_bypass'")))
	(require-all
		(privilege-id 10015)
		(require-not (entitlement-is-bool-true "b'com.apple.developer.networking.custom-protocol'")))
	(require-all
		(privilege-id 10014)
		(require-not (entitlement-is-bool-true "b'com.apple.private.validated-resolver'")))
	(require-all
		(privilege-id 1015)
		(require-not (process-attribute is-protoboxed))
		(process-attribute is-sandboxed)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.override-cpumon'")))
	(require-all
		(privilege-id 11001)
		(require-not (entitlement-is-bool-true "b'com.apple.developer.networking.tcp_ka_offload'")))
	(require-all
		(privilege-id 10011)
		(require-not (entitlement-is-bool-true "b'com.apple.developer.networking.route_nc_read'")))
	(require-all
		(privilege-id 10010)
		(require-not (entitlement-is-bool-true "b'com.apple.developer.networking.multipath_extended'")))
	(require-all
		(privilege-id 1014)
		(require-not (entitlement-is-bool-true "b'com.apple.private.apfs.trim-active-file'")))
	(require-all
		(privilege-id 14002)
		(require-not (entitlement-is-bool-true "b'com.apple.private.vfs.snapshot'")))
	(require-all
		(privilege-id 14004)
		(require-not (entitlement-is-bool-true "b'com.apple.private.vfs.dataless-resolver'")))
	(require-all
		(privilege-id 14001)
		(require-not (entitlement-is-bool-true "b'com.apple.private.vfs.move-data-extents'")))
	(require-all
		(privilege-id 1010)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.audio_latency'")))
	(require-all
		(privilege-id 12011)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.observe-stats'")))
	(require-all
		(privilege-id 12010)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.observe-all'")))
	(require-all
		(privilege-id 12003)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.register-flow-switch'")))
	(require-all
		(privilege-id 12002)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.register-net-if'")))
	(require-all
		(privilege-id 12001)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.register-kernel-pipe'")))
	(require-all
		(privilege-id 12000)
		(require-not (entitlement-is-bool-true "b'com.apple.private.skywalk.register-user-pipe'")))
	(require-all
		(privilege-id 1012)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.setpriority-darwin-role'")))
	(require-all
		(privilege-id 1013)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.set-package-extensions'")))
	(require-all
		(privilege-id 1011)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.ktrace-background'")))
	(require-all
		(privilege-id "PRIV_KERNEL_WORK_INTERNAL")
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.work-interval'")))
	(require-all
		(privilege-id 1007)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.darkboot'")))
	(require-all
		(privilege-id 10007)
		(require-not (entitlement-is-bool-true "b'com.apple.private.network.qos-marking-policy-override'")))
	(require-all
		(privilege-id "PRIV_NET_RESTRICTED_AWDL")
		(require-not (entitlement-is-bool-true "b'com.apple.private.network.awdl.restricted'")))
	(require-all
		(privilege-id "PRIV_NET_PRIVILEGED_NECP_POLICIES")
		(require-not (entitlement-is-bool-true "b'com.apple.private.necp.policies'")))
	(require-all
		(privilege-id "PRIV_VFS_OPEN_BY_ID")
		(require-not (entitlement-is-bool-true "b'com.apple.private.vfs.open-by-id'")))
	(require-all
		(privilege-id "PRIV_NETINET_RESERVEDPORT")
		(entitlement-is-bool-true "b'com.apple.private.network.reserved-port'"))
	(require-all
		(privilege-id "PRIV_NET_PRIVILEGED_TRAFFIC_CLASS")
		(entitlement-is-bool-true "b'com.apple.private.network.privileged-traffic-class'"))
	(require-all
		(privilege-id "PRIV_NET_PRIVILEGED_SOCKET_DELEGATE")
		(entitlement-is-bool-true "b'com.apple.private.network.socket-delegate'"))
	(require-all
		(privilege-id "PRIV_NET_PRIVILEGED_NETWORK_STATISTICS")
		(entitlement-is-bool-true "b'com.apple.private.network.statistics'"))
	(require-all
		(privilege-id "PRIV_NET_INTERFACE_CONTROL")
		(entitlement-is-bool-true "b'com.apple.private.network.interface-control'"))
	(require-all
		(privilege-id "PRIV_SELECTIVE_FORCED_IDLE")
		(entitlement-is-bool-true "b'com.apple.private.kernel.selective-forced-idle'"))
	(require-all
		(privilege-id "PRIV_SYSTEM_OVERRIDE")
		(entitlement-is-bool-true "b'com.apple.private.kernel.system-override'"))
	(require-all
		(privilege-id "PRIV_PROC_UUID_POLICY")
		(entitlement-is-bool-true "b'com.apple.private.kernel.uuid-policy'"))
	(require-all
		(privilege-id "PRIV_HW_DEBUG_DATA")
		(entitlement-is-bool-true "b'com.apple.private.kernel.hw-debug-data'"))
	(require-all
		(privilege-id "PRIV_GLOBAL_PROC_INFO")
		(entitlement-is-bool-true "b'com.apple.private.kernel.global-proc-info'"))
	(require-all
		(privilege-id "PRIV_VM_JETSAM")
		(entitlement-is-bool-true "b'com.apple.private.kernel.jetsam'"))
	(require-all
		(privilege-id "PRIV_VM_PRESSURE")
		(entitlement-is-bool-true "b'vm-pressure-level'"))
	(require-all
		(privilege-id "PRIV_ADJTIME")
		(entitlement-is-bool-true "b'com.apple.adjtime'")))
(deny system-package-check
	(require-all
		(reboot-flags #o4000)
		(require-not (entitlement-is-bool-true "b'com.apple.private.kernel.panic'"))
		(process-attribute is-initproc)))
(deny system-swap
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.developer.icloud-services'")
				(require-any
					(require-all (require-not (preference-domain "com.apple.mobileipod"))
(require-not (preference-domain "com.apple.avfoundation"))
(require-not (preference-domain "com.apple.corevideo"))
(require-not (preference-domain "com.apple.coremedia"))
(require-not (preference-domain "com.apple.coreaudio")))
					(require-all
						(preference-domain "com.apple.itunesstored")
						(require-not (process-attribute is-apple-signed-executable))
						(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))
			(require-all
				(require-any (preference-domain "com.apple.facetime.bag")
(preference-domain "com.apple.imessage.bag"))
				(require-any
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.ids.remotecredentials'")
						(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
					(require-all
						(require-not (entitlement-is-bool-true "b'com.apple.private.ids.remoteurlconnection'"))
						(require-not (entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))))
			(require-all
				(require-any (preference-domain "com.apple.springboard")
(preference-domain "com.apple.WatchListKit"))
				(entitlement-is-bool-true "b'com.apple.watchlist.private'"))
			(require-all
				(preference-domain "com.apple.storeservices.itfe")
				(entitlement-is-present "b'com.apple.private.applemediaservices'")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))
			(require-all
				(preference-domain "com.apple.AppleMediaServices")
				(entitlement-is-present "b'com.apple.private.applemediaservices'"))
			(require-all
				(preference-domain "com.apple.AvatarUI.Staryu")
				(entitlement-is-bool-true "b'com.apple.private.avatar.store'"))
			(require-all
				(preference-domain "com.apple.avfoundation.frecents")
				(entitlement-is-bool-true "b'com.apple.avfoundation.allows-access-to-device-list'"))
			(require-all
				(preference-domain "com.apple.MobileAsset")
				(entitlement-is-present "b'com.apple.private.assets.accessible-asset-types'"))
			(require-all
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
				(require-all (require-not (preference-domain "com.apple.AppStore"))
(require-not (preference-domain "com.apple.MobileStore"))))
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))
			(require-all
				(preference-domain "com.apple.bulletinboard")
				(entitlement-is-bool-true "b'com.apple.bulletinboard.dataprovider'"))
			(require-all
				(preference-domain "com.apple.storeservices.itfe")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))
			(require-all
				(preference-domain "com.apple.proactive.PersonalizationPortrait")
				(entitlement-is-bool-true "b'com.apple.coreduetd.allow'")))))
(deny user-preference-read
	(require-all
		(preference-domain "com.apple.dt.xctest.automation-mode")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.security.storage.automation-mode'")
			(require-not (require-ancestor-with-entitlement "b'com.apple.private.security.storage-exempt.heritable'"))))
	(require-all
		(process-attribute is-sandboxed)
		(require-not (process-attribute is-protoboxed))
		(require-any
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.ids.remotecredentials'")
				(entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")
				(require-all (require-not (preference-domain "com.apple.imessage.bag"))
(require-not (preference-domain "com.apple.facetime.bag"))))
			(require-all
				(preference-domain "com.apple.WatchListKit")
				(entitlement-is-bool-true "b'com.apple.watchlist.private'"))
			(require-all
				(preference-domain "com.apple.AppleMediaServices")
				(entitlement-is-present "b'com.apple.private.applemediaservices'"))
			(require-all
				(preference-domain "com.apple.AvatarUI.Staryu")
				(entitlement-is-bool-true "b'com.apple.private.avatar.store'"))
			(require-all
				(preference-domain "com.apple.avfoundation.frecents")
				(entitlement-is-bool-true "b'com.apple.avfoundation.allows-access-to-device-list'"))
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
(deny managed-preference-read
	(require-all
		(require-not (subpath "/private/var/db/os_eligibility"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.backup"))
(require-not (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.backup"))
(require-not (subpath-prefix "${ANY_USER_HOME}/Library/Caches/Backup")))
		(require-all (require-not (subpath "/private/var/backup"))
(require-not (subpath-prefix "${ANY_USER_HOME}/backup")))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilestorageproxy"))
		(require-all (require-not (subpath "/private/var/tmp/com.apple.messages/PassPreview"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/tmp/com.apple.messages/PassPreview")))
		(require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.osanalytics/DiagnosticReports"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/DoNotDisturb"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Weather"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/com.apple.bluetooth.services.cloud/CachedRecords/SoundProfileAsset"))
		(require-not (subpath "/private/var/db/fpsd/dvp"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/com.apple.aiml.instrumentation"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/IntelligencePlatform"))
		(require-not (subpath "/private/var/db/DumpPanic"))
		(require-not (subpath "/private/var/protected/trustd/private"))
		(require-not (subpath "/private/var/protected/trustd"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/com.apple.ClipServices.clipserviced"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/sessionkitd"))
		(require-not (subpath "/private/var/db/driverkitd"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ContactlessReader"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.PineBoard"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.PineBoard")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Keyboard/TypologyVault"))
		(require-all (require-not (subpath "/private/var/db/biome"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Biome")))
		(require-not (subpath "/private/var/wireless/Library/Preferences"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Assistant/SiriReferenceResolution"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/com.apple.siri.inference"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Assistant/SiriVocabulary"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/SecureElementService"))
		(require-not (subpath "/private/var/db/sysdiagnose/com.apple.sysdiagnose"))
		(require-not (subpath "/private/var/db/sysdiagnose/com.apple.springboard"))
		(require-not (subpath "/private/var/db/sysdiagnose/com.apple.ScreenshotServicesService"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ManagedAssets_SLAM"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ManagedAssets")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/BulletinDistributor"))
		(require-all (require-not (subpath "/private/var/root/Library/MobileContainerManager"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/MobileContainerManager")))
		(require-not (subpath "/private/var/root/Library/Lockdown"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Trial"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/TCC"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Safari"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/ExposureNotification"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Calendar"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Suggestions"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/PersonalizationPortrait"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Metadata/com.apple.IntelligentSuggestions")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CoreDuet"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.routined"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CoreFollowUp"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mobile Documents"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CognitiveHealth"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CountryBundles")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Accounts"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.HomeAI"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/StatusKit"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Spotlight"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/com.apple.private.SensorKit"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Assistant/SpeechPersonalizedLM_Fides"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Assistant/SpeechPersonalizedLM")))
		(require-not (subpath "/private/var/db/tpm-authority"))
		(require-all (require-not (subpath "/private/var/db/com.apple.security.cryptexd"))
(require-not (subpath "/private/var/db/com.apple.sear.cryptexd")))
		(require-not (subpath "/private/var/networkd/db"))
		(require-not (subpath "/private/var/db/SoC"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.geod/Vault"))
		(require-not (subpath "/private/var/demo_backup"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/FamilyCircle"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/chronod"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.ap.adprivacyd"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Shortcuts"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CallHistoryTransactions"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/CallHistoryDB")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Health"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/homed"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Voicemail"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Photos"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Notes"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/MessagesMetaData"))
		(require-all (require-not (subpath-prefix "${FRONT_USER_HOME}/Library/SMS"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.MobileSMS")))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/PrivacyAccounting"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices"))
		(require-not (subpath "/private/var/root/Library/Caches/com.apple.pipelined"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/idcredd"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/WebClips"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Mail"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/AppleMediaServices"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/FaceTime"))
		(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.AppStore"))
		(require-all (require-not (subpath "/private/var/PersonaVolumes"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Containers/Data")))
		(require-not (subpath "/private/var/containers/Bundle"))
		(require-all (require-not (subpath "/private/var/db/MobileIdentityData"))
(require-not (subpath "/private/var/MobileDevice/ProvisioningProfiles")))
		(require-not (subpath "/private/var/db/com.apple.dt.automationmode"))
		(require-not (subpath "/private/var/db/amfid"))
		(require-all (require-not (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles"))
(require-not (subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")))))
(deny user-preference-write
	(require-all
		(require-all (require-not (literal "/Developer/"))
(require-not (literal "/System/Developer/"))
(require-not (literal "/private/var/factory_mount/"))
(require-not (literal "/private/var/personalized_repair/"))
(require-not (literal "/private/var/personalized_quality/"))
(require-not (literal "/private/var/personalized_factory/"))
(require-not (literal "/private/var/personalized_demo/"))
(require-not (literal "/private/var/personalized_debug/"))
(require-not (literal "/private/var/personalized_automation/"))
(require-not (literal "/private/var/run/com.apple.security.cryptexd/mnt/")))
		(require-any
			(entitlement-load 6415)
			(require-all
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.no-container'"))
				(require-not (entitlement-is-bool-true "b'com.apple.private.security.no-sandbox'"))
				(require-any
					(require-all
						(subpath "/Applications")
						(require-all (require-not (signing-identifier "com.apple.MusicUIService"))
(require-not (signing-identifier "com.apple.AskPermissionUI"))
(require-not (signing-identifier "com.apple.PhotosViewService"))
(require-not (signing-identifier "com.apple.Home.HomeUIService"))
(require-not (signing-identifier "com.apple.Diagnostics.Canary"))
(require-not (signing-identifier "com.apple.family"))
(require-not (signing-identifier "com.apple.fieldtest"))
(require-not (signing-identifier "com.apple.TrustMe"))
(require-not (signing-identifier "com.apple.TapToRadar"))
(require-not (signing-identifier "com.apple.mobiletimer"))
(require-not (signing-identifier "com.apple.mobilesms.compose"))
(require-not (signing-identifier "com.apple.susuiservice"))
(require-not (signing-identifier "com.apple.social.SLYahooAuth"))
(require-not (signing-identifier "com.apple.social.SLGoogleAuth"))
(require-not (signing-identifier "com.apple.SharingViewService"))
(require-not (signing-identifier "com.apple.SharedWebCredentialViewService"))))
					(require-all
						(vnode-type REGULAR-FILE)
						(literal)
						(require-not (subpath "/Applications")))
					(require-all
						(require-not (subpath "/private/var/containers/Bundle"))
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+$"))))))
	(require-all
		(require-not (entitlement-value-regex #".+"))
		(require-not (entitlement-value #f))))
