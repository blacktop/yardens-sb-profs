(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))
(allow file-issue-extension)
(allow file-mount
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(require-any (subpath-prefix "${HOME}/Library/Assistant")
(literal-prefix "${HOME}/Library/Caches/com.apple.siri."))
			(require-any (subpath "/Library/Audio/Tunings")
(subpath-prefix "${HOME}/siri_recordings"))
			(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(literal "/private/var/preferences/com.apple.security.plist")
			(subpath "/usr/lib")
			(subpath "/System/Library")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}")
			(subpath "/usr/local/lib")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
			(subpath "/usr/share")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
			(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant")
			(require-all
				(process-attribute is-apple-signed-executable)
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
			(require-all
				(literal "/private/var/containers/Bundle/")
				(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/Info.plist" #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+.+/Info.plist"))
			(require-all
				(entitlement-is-present "b'com.apple.private.networkextension.configuration'")
				(literal "/private/var/preferences/com.apple.networkextension.plist"))
			(require-all
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
					(subpath "/private/var/db/datadetectors/sys")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(subpath-prefix "${HOME}/Library/Fonts")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
					(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
					(subpath "/private/var/containers/Data/System/com.apple.geod")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/Cookies")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
					(literal "/dev/null")
					(literal "/dev/aes_0")
					(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
					(literal "/dev/urandom")
					(literal "/dev/dtracehelper")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
					(literal "/dev/zero")
					(literal "/dev/random")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
						(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
						(require-any
							(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
							(subpath-prefix "${HOME}/Library/AddressBook")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
							(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
						(require-any
							(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
							(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
					(require-all
						(uid 0)
						(literal "/private/etc/master.passwd"))
					(require-all
						(entitlement-is-bool-true "b'com.apple.security.system-container'")
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Data/System/")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(extension "b'com.apple.sandbox.system-group'")
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(entitlement-is-present "b'com.apple.security.system-group-containers'"))
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
							(require-all
								(entitlement-is-present "b'com.apple.security.system-group-containers'")
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
						(extension "b'com.apple.logd.read-only'")
						(require-any
							(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
							(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE)
						(require-any
							(literal "/private")
							(subpath "/Developer")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(subpath "/System/Library/PrivateFrameworks")
							(literal "/private/etc/passwd")
							(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
							(literal "/private/etc/services")
							(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
							(subpath "/System/Library/Frameworks")
							(literal "/System")
							(subpath "/System/Cryptexes")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/private/etc/hosts")
							(subpath "/private/preboot/Cryptexes")
							(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
							(literal "/")
							(literal "/private/etc/fstab")
							(literal "/private/preboot")
							(subpath "/System/Developer")
							(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
									(subpath "/usr/libexec")
									(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
									(require-all
										(subpath "/usr/local/libexec")
										(debug-mode))))
							(require-all
								(debug-mode)
								(require-any
									(subpath "/usr/local")
									(subpath "/AppleInternal")
									(subpath "/usr/appleinternal")))
							(require-all
								(debug-mode)
								(require-any
									(subpath "/AppleInternal")
									(subpath "/usr/local/lib")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")))
							(require-all
								(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
								(subpath "/private/var/OOPJit")
								(extension "b'com.apple.sandbox.oopjit'")))))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read*
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/HTTPStorages")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(literal-prefix "${HOME}")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
	(literal-prefix "${HOME}/Library/Caches")
	(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}/Library/Preferences")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
	(literal-prefix "${HOME}/Library/Logs/awd")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(vnode-type DIRECTORY)
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(vnode-type DIRECTORY)
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences")
			(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$"))
			(require-all
				(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
				(literal "/usr/standalone/firmware/apticket.der")
				(require-any
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(require-any (subpath-prefix "${HOME}/Library/Assistant")
(literal-prefix "${HOME}/Library/Caches/com.apple.siri."))
					(require-any (subpath "/Library/Audio/Tunings")
(subpath-prefix "${HOME}/siri_recordings"))
					(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(literal "/private/var/preferences/com.apple.security.plist")
					(subpath "/usr/lib")
					(subpath "/System/Library")
					(subpath "/private/var/db/timezone")
					(subpath "/Library/RegionFeatures")
					(literal "/private/var/db/com.apple.networkextension.tracker-info")
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(subpath "/usr/local/lib")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
					(subpath "/usr/share")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
					(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant")
					(require-all
						(process-attribute is-apple-signed-executable)
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
					(require-all
						(literal "/private/var/containers/Bundle/")
						(regex #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+/Info.plist" #"^/private/var/containers/Bundle/[^/]+/[-0-9A-Z]+.+/Info.plist"))
					(require-all
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'")
						(literal "/private/var/preferences/com.apple.networkextension.plist"))
					(require-all
						(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
						(require-any
							(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
							(subpath "/private/var/db/datadetectors/sys")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(subpath-prefix "${HOME}/Library/Fonts")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
							(subpath "/private/var/containers/Data/System/com.apple.geod")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
							(subpath-prefix "${HOME}/Library/Cookies")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
							(literal "/dev/null")
							(literal "/dev/aes_0")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(literal "/dev/urandom")
							(literal "/dev/dtracehelper")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
							(literal "/dev/zero")
							(literal "/dev/random")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(require-all
								(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any
									(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
							(require-all
								(vnode-type DIRECTORY)
								(require-any
									(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices"))))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/Info[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/[.]bundle/[^/]+[.]lproj$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj/" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]bundle/[^/]+[.]lproj$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]bundle/Info[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj/" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/((.*[.]bundle/|[.]bundle/[^/]+)|.+[.]bundle/[^/]+)[.]lproj$")
									(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
									(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
									(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
								(require-any
									(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
									(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
							(require-all
								(uid 0)
								(literal "/private/etc/master.passwd"))
							(require-all
								(entitlement-is-bool-true "b'com.apple.security.system-container'")
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(require-any
									(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Data/System/")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(extension "b'com.apple.sandbox.system-group'")
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(entitlement-is-present "b'com.apple.security.system-group-containers'"))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present "b'com.apple.security.system-groups'")
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
									(require-all
										(entitlement-is-present "b'com.apple.security.system-group-containers'")
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
								(extension "b'com.apple.logd.read-only'")
								(require-any
									(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
									(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(literal "/private")
									(subpath "/Developer")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Library/PrivateFrameworks")
									(literal "/private/etc/passwd")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
									(literal "/private/etc/services")
									(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
									(subpath "/System/Library/Frameworks")
									(literal "/System")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/private/etc/hosts")
									(subpath "/private/preboot/Cryptexes")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
									(literal "/")
									(literal "/private/etc/fstab")
									(literal "/private/preboot")
									(subpath "/System/Developer")
									(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
											(subpath "/usr/libexec")
											(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
											(require-all
												(subpath "/usr/local/libexec")
												(debug-mode))))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/usr/local")
											(subpath "/AppleInternal")
											(subpath "/usr/appleinternal")))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")))
									(require-all
										(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
										(subpath "/private/var/OOPJit")
										(extension "b'com.apple.sandbox.oopjit'"))))))))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-container'"))
	(require-all
		(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(entitlement-is-present "b'com.apple.security.system-groups'")
			(entitlement-is-present "b'com.apple.security.system-group-containers'"))))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath-prefix "${HOME}/Library/Assistant")
(literal-prefix "${HOME}/Library/Caches/com.apple.siri."))
	(literal-prefix "${HOME}/Library/Logs/awd/awd-assistantd.log")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(subpath "/private/var/tmp")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.assistantd")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(subpath-prefix "${HOME}/Library/Logs/CrashReporter/Assistant")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.AssistantServices")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.assistantd")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
				(require-any
					(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
					(require-all
						(vnode-type REGULAR-FILE)
						(literal-prefix "${HOME}/Library/AddressBook/"))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AssistantServices")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.assistantd")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))
(allow file-write*
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Caches")
			(literal-prefix "${HOME}/Library/Logs/awd")
			(literal-prefix "${HOME}/Library/HTTPStorages"))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-setugid
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow iokit-issue-extension
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "IOSurfaceRootUserClient"))
(allow iokit-open*)
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(require-any (global-name "com.apple.assistant_service")
(global-name "com.apple.BTLEAudioController.xpc"))
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.awdd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.accountsd.oauthsigner")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.coremedia.admin")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.networkd")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.usernotifications.listener")
	(local-name "com.apple.assistant.contextprovider.")
	(xpc-service-name "com.apple.audio.toolbox.reporting.service")
	(xpc-service-name "com.apple.audio.analytics.service")
	(xpc-service-name "com.apple.extensionkitservice")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.logd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.containermanagerd")
	(require-all
		(local-name-regex #".+")
		(require-any
			(extension "b'com.apple.security.exception.mach-lookup.local-name'")
			(local-name "com.apple.cfprefsd.agent")))
	(require-all
		(extension "b'com.apple.security.exception.mach-lookup.global-name'")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow network-inbound)
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow opendirectory-user-modify)
(allow process-exec-interpreter)
(allow process-fork)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set)
(allow syscall*)
(allow syscall-unix)
(allow system-automount)
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
(allow system-swap
	(preference-domain "com.apple.assistant.logging")
	(preference-domain "com.apple.CoreDuet")
	(require-any (preference-domain "com.apple.weather")
(preference-domain "com.apple.assistant.token")
(preference-domain "com.apple.AssistantServices")
(preference-domain "com.apple.siri.backedup.encrypted"))
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.avfoundation.avvc")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.WebFoundation")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.hangtracer")
	(require-all
		(preference-domain "com.apple.security")
		(process-attribute is-apple-signed-executable)))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-read
	(preference-domain "com.apple.assistant.logging")
	(require-any (preference-domain "com.apple.weather")
(preference-domain "com.apple.assistant.token")
(preference-domain "com.apple.AssistantServices")
(preference-domain "com.apple.siri.backedup.encrypted"))
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.voicetrigger"))
(allow user-preference-write)
