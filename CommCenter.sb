(version 1)
(deny default)
(allow darwin-notification-post)
(allow dynamic-code-generation)
(allow file-clone)
(allow file-ioctl
	(literal "/dev/cu.debug"))
(allow file-issue-extension
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(subpath "/private/var/wireless/Library/Images")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(subpath "/private/var/wireless/Library/Images")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(subpath "/private/var/wireless/Library/Images")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(subpath "/private/var/wireless/Library/Images")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.sandbox.executable'")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
					(require-all
						(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.mediaserverd.read-write")))))))
	(require-all
		(extension-class "com.apple.nsurlsessiond.readonly")
		(extension "b'com.apple.sandbox.executable'"))
	(require-all
		(extension-class "com.apple.identityservices.send")
		(require-any
			(subpath-prefix "${PROCESS_TEMP_DIR}")
			(subpath-prefix "${FRONT_USER_HOME}/Library/LASD")
			(subpath "/private/var/tmp")
			(require-any (subpath "/private/var/wireless/Library/Carrier Bundles")
(literal-prefix "${FRONT_USER_HOME}/tmp/DataUsage"))))
	(require-all
		(subpath "/System/Cryptexes")
		(extension-class "com.apple.app-sandbox.read"))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(require-all
				(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))))
	(require-all
		(subpath "/private/preboot/Cryptexes")
		(extension-class "com.apple.app-sandbox.read"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(literal "/private/var/containers/Data/System/")
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
			(require-all
				(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.fileprovider.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes")))))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.fileprovider.read-write'")
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(subpath "/System/Cryptexes")
									(subpath "/private/preboot/Cryptexes")))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.fileprovider.read-write'")
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(subpath "/System/Cryptexes")
									(subpath "/private/preboot/Cryptexes")))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.fileprovider.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Cryptexes")
					(subpath "/private/preboot/Cryptexes"))))))
(allow file-link)
(allow file-lock)
(allow file-map-executable
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(subpath "/usr/lib")
	(require-any (literal "/usr/local/lib/libSWBypassClient.dylib")
(literal "/usr/local/lib/CarrierBundleDevKey.dylib"))
	(subpath "/System/Library")
	(subpath "/System/Cryptexes")
	(subpath "/private/preboot/Cryptexes")
	(subpath "/Developer")
	(subpath "/System/Developer")
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(literal))
	(require-all
		(subpath "/usr/local")
		(require-any
			(debug-mode)
			(require-all
				(subpath "/AppleInternal")
				(debug-mode))
			(require-all
				(subpath "/usr/local/lib")
				(debug-mode))))
	(require-all
		(subpath "/AppleInternal")
		(require-any
			(debug-mode)
			(require-all
				(subpath "/AppleInternal")
				(debug-mode))
			(require-all
				(subpath "/usr/local/lib")
				(debug-mode))))
	(require-all
		(subpath "/usr/appleinternal")
		(require-any
			(debug-mode)
			(require-all
				(subpath "/AppleInternal")
				(debug-mode))
			(require-all
				(subpath "/usr/local/lib")
				(debug-mode))))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
	(require-all
		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-read*
	(literal "/private/var/preferences/com.apple.networkd.plist")
	(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
	(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
	(require-any (literal "/usr/local/bin/merge-istp.sh")
(subpath "/usr/local/standalone/firmware/Baseband")
(subpath "/private/var/db/com.apple.countryd")
(literal "/private/var/Managed Preferences/mobile/com.apple.managedCarrier.plist")
(literal "/private/var/preferences/com.apple.networkextension")
(literal "/private/var/preferences/SystemConfiguration/com.apple.eapol.sim.generation.plist")
(literal "/private/var/")
(subpath-prefix "${FRONT_USER_HOME}/Library/CountryBundles")
(subpath-prefix "${FRONT_USER_HOME}/Library/CarrierBundleLinks")
(literal-prefix "${FRONT_USER_HOME}/Library/SyncedPreferences/com.apple.coretelephony.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/PPTDevice")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.default.plist")
(subpath-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.purplebuddy.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.persistentconnection.plist"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
	(literal "/private")
	(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
	(subpath "/private/var/preferences/Logging")
	(subpath-prefix "${FRONT_USER_HOME}/Library/LASD")
	(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
	(subpath "/usr/sbin")
	(require-any (literal "/dev/cu.debug")
(subpath "/private/var/wireless")
(subpath "/private/var/logs/BBUpdater")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.coretelephony")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.coretelephony"))
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal "/private/var/preferences/com.apple.security.plist")
	(subpath "/usr/lib")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(subpath "/private/var/db/timezone")
	(subpath "/Library/RegionFeatures")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(literal "/private/var/installd/Library/MobileInstallation/MigrationInfo.plist")
	(subpath "/private/var/wireless/Library/Images")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
	(literal "/private/var/db/com.apple.networkextension.tracker-info")
	(subpath "/private/var/tmp")
	(literal "/usr/standalone/firmware/apticket.der")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(subpath "/System/Cryptexes")
	(subpath "/System/Library")
	(require-any (literal "/usr/local/lib/libSWBypassClient.dylib")
(literal "/usr/local/lib/CarrierBundleDevKey.dylib"))
	(extension "b'com.apple.quicklook.readonly'")
	(literal "/System")
	(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
	(extension "b'com.apple.sandbox.executable'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(subpath "/private/var/logs/WirelessLibraryLogs")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
	(subpath "/usr/share")
	(subpath "/private/preboot")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.app-sandbox.read-write'")
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal "/")
	(extension "b'com.apple.app-sandbox.read'")
	(subpath "/private/var/hardware/FactoryData")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(literal "/dev/null")
	(literal "/dev/aes_0")
	(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
	(literal "/dev/urandom")
	(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
	(subpath "/private/var/db/datadetectors/sys")
	(literal "/dev/dtracehelper")
	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
	(literal "/dev/zero")
	(literal "/dev/random")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any
			(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/CommCenter" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/CommCenter" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter")
			(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
			(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
			(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
			(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
	(require-all
		(extension "b'com.apple.assets.read'")
		(require-any
			(subpath "/private/var/MobileAsset")
			(subpath-prefix "${HOME}/Library/Assets")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
		(extension "b'com.apple.identityservices.deliver'"))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.CommCenter")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.coretelephony"))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.CommCenter")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.coretelephony"))
			(require-all
				(vnode-type REGULAR-FILE)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic"))
			(require-all
				(vnode-type DIRECTORY)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
		(require-any
			(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
			(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
	(require-all
		(uid 0)
		(literal "/private/etc/master.passwd"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(extension "b'com.apple.sandbox.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
		(require-any
			(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
	(require-all
		(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
		(extension "b'com.apple.sandbox.system-group'")
		(entitlement-is-present "b'com.apple.security.system-groups'")
		(entitlement-is-present "b'com.apple.security.system-group-containers'"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(require-any
					(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(require-any
					(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
		(extension "b'com.apple.logd.read-only'")
		(require-any
			(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))
			(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(require-any
			(subpath "/private/preboot/Cryptexes")
			(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
			(literal "/")
			(literal "/private/etc/fstab")
			(literal "/private/preboot")
			(subpath "/System/Developer")
			(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
			(literal "/private")
			(subpath "/Developer")
			(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
			(subpath "/System/Library/PrivateFrameworks")
			(literal "/private/etc/passwd")
			(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
			(literal "/private/etc/services")
			(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
			(subpath "/System/Library/Frameworks")
			(literal "/System")
			(subpath "/System/Cryptexes")
			(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
			(literal "/private/etc/hosts")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
					(subpath "/usr/libexec")
					(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
					(require-all
						(subpath "/usr/local/libexec")
						(debug-mode))))
			(require-all
				(debug-mode)
				(require-any
					(subpath "/usr/local")
					(subpath "/AppleInternal")
					(subpath "/usr/appleinternal")))
			(require-all
				(debug-mode)
				(require-any
					(subpath "/AppleInternal")
					(subpath "/usr/local/lib")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
					(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
			(require-all
				(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
				(subpath "/private/var/OOPJit")
				(extension "b'com.apple.sandbox.oopjit'")))))
(allow file-read-data
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
	(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(subpath "/private/var/wireless/Library/Images")
	(literal-prefix "${HOME}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal-prefix "${HOME}/Library/Caches")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(vnode-type DIRECTORY)
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-any
					(process-attribute is-apple-signed-executable)
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any
			(regex #"^/private/var/mobile$" #"^/private/var/mobile/Library$" #"^/private/var/mobile/Library/CallHistory$" #"^/private/var/mobile/Library/Carrier Bundle.bundle$" #"^/private/var/mobile/Library/Operator Bundle.bundle$" #"^/private/var/mobile/Library/Voicemail$" #"^/private/var/mobile/Library/Preferences$" #"^/private/var/euser[0-9]+((((((/Library)?|/Library/CallHistory)|/Library/Carrier Bundle.bundle)|/Library/Operator Bundle.bundle)|/Library/Voicemail)|/Library/Preferences)$" #"^/private/var/[-0-9A-F]+((((((/Library)?|/Library/CallHistory)|/Library/Carrier Bundle.bundle)|/Library/Operator Bundle.bundle)|/Library/Voicemail)|/Library/Preferences)$" #"^/private/var/Users/[^/]+((((((/Library)?|/Library/CallHistory)|/Library/Carrier Bundle.bundle)|/Library/Operator Bundle.bundle)|/Library/Voicemail)|/Library/Preferences)$")
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-any
					(process-attribute is-apple-signed-executable)
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences"))))
(allow file-test-existence)
(allow file-write*
	(subpath-prefix "${HOME}/Library/Caches/CommCenterClassic")
	(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.coretelephony")
(subpath-prefix "${HOME}/Library/Caches/com.apple.CommCenter"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/LASD")
	(require-any (literal "/dev/cu.debug")
(subpath "/private/var/wireless")
(subpath "/private/var/logs/BBUpdater")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.coretelephony")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.coretelephony"))
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(subpath "/private/var/tmp")
	(subpath "/private/var/logs/WirelessLibraryLogs")
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
	(extension "b'com.apple.app-sandbox.read-write'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.CommCenter")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.coretelephony"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/CommCenterClassic")
			(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.CommCenter")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.coretelephony"))))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Library/Logs/PersistentConnection/CommCenter" #"^/private/var/mobile/Library/Logs/CrashReporter/PersistentConnection/CommCenter" #"^/private/var/euser[0-9]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter" #"^/private/var/[-0-9A-F]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter" #"^/private/var/Users/[^/]+/Library/Logs/(CrashReporter/)?PersistentConnection/CommCenter")
		(subpath-prefix "${FRONT_USER_HOME}"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)
		(literal "/private/var/cores/")
		(regex #"^/private/var/cores/.+[.]core$")
		(process-attribute is-apple-signed-executable))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(process-attribute is-apple-signed-executable))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${HOME}/Library/Caches")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(subpath "/private/var/tmp"))))))
(allow file-write-data
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-unlink
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension "b'com.apple.identityservices.deliver'")
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices"))
	(require-all
		(extension "b'com.apple.sandbox.oopjit'")
		(subpath "/private/var/OOPJit")))
(allow file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-quota-stat)
(allow fs-quota-sync)
(allow fs-snapshot-mount)
(allow iokit-get-properties)
(allow iokit-open-user-client
	(require-any (iokit-user-client-class "IOAppleConvergedIPCBBControlUserClient")
(iokit-user-client-class "IOAppleConvergedIPCICEBBControlUserClient")
(iokit-user-client-class "AppleIPAppenderUserClient")
(iokit-user-client-class "AppleBasebandPCIControlUserClient"))
	(iokit-user-client-class "AppleBasebandPCIUserClient")
	(iokit-user-client-class "AppleUSBHostInterfaceUserClient")
	(iokit-user-client-class "IOAppleConvergedIPCBBUserClient")
	(iokit-user-client-class "AppleBasebandUserClient")
	(iokit-user-client-class "ApplePPMUserClient")
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "RootDomainUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient"))
(allow iokit-open-service)
(allow iokit-set-properties
	(require-all
		(iokit-property "SignalQuality")
		(iokit-user-client-class "AppleMesaSEPDriverInternal"))
	(require-all
		(iokit-user-client-class "AppleUSBHSICDevice")
		(require-any (iokit-property "StopDevice")
(iokit-property "StartDevice"))))
(allow lsopen)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(require-any (global-name "com.apple.wirelessinsightsd")
(global-name "com.apple.BasebandStateReport.LogChannel")
(global-name "com.apple.basebandd.xpc")
(global-name "com.apple.bbswbypass.msgport")
(global-name "com.apple.powerlog-GRRRR-FULL")
(global-name "com.apple.powerlog-GRRRR-LITE")
(global-name "com.apple.abm.cellularcert")
(global-name "com.apple.abm.helper.root")
(global-name "com.apple.abm.helper.mobile")
(global-name "com.apple.abm.helper.wireless")
(global-name "com.apple.commcenter.root-helper")
(global-name "com.apple.commcenter.root-helper-xpc")
(global-name "com.apple.commcenter.mobile-helper-xpc")
(global-name "com.apple.commcenter.mobile-helper-rest"))
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.paired-unlock")
	(global-name "com.apple.springboard.blockableservices")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.ind.cloudfeatures")
	(global-name "com.apple.mobileasset.autoasset")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.WirelessCoexManager")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.mobile.installd")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.networkserviceproxy")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.nanoprefsync")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.SystemConfiguration.configd")
	(xpc-service-name "com.apple.tonelibraryd")
	(global-name "com.apple.aps.alertprovider.xpc")
	(global-name "com.apple.terminusd")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.commcenter.mobile-helper")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.wifi.manager")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.private.corewifi-xpc")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.triald.namespace-management")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.ckdiscretionaryd")
	(global-name "com.apple.powerd.lowpowermode")
	(global-name "com.apple.locationd.registration")
	(global-name "com.apple.accessories.connection-info-server")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.appconduitd.device-connection")
	(global-name "com.apple.kvsd")
	(global-name "com.apple.AttentionAwareness")
	(require-any (global-name "com.apple.countryd.update")
(global-name "com.apple.network.IPConfiguration"))
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.callkit.callcontrollerhost")
	(require-any (global-name "com.apple.commcenter.atcs.xpc")
(global-name "com.apple.commcenter.ari.rt.xpc"))
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.awdd")
	(global-name "com.apple.coremedia.sts")
	(require-any (global-name "com.apple.commcenter.dm-helper")
(global-name "com.apple.callkit.callsourcehost"))
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.healthd.server")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.identityservicesd.nsxpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.nfcd.hwmanager")
	(global-name "com.apple.accessibility.heard")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.corefollowup.agent")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.apsd")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.ckdiscretionaryd.debug")
	(global-name "com.apple.system.libinfo.muser")
	(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
	(global-name "com.apple.system.logger")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.cloudkit.partlycloudd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.logd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.containermanagerd")
	(require-all
		(local-name-regex #".+")
		(require-any
			(extension "b'com.apple.security.exception.mach-lookup.local-name'")
			(local-name "com.apple.cfprefsd.agent")))
	(require-all
		(extension "b'com.apple.security.exception.mach-lookup.global-name'")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-register
	(require-any (global-name "com.apple.CommCenter.lasd")
(global-name "com.apple.CoreTelephony.BasebandStateReport.LogChannel")
(global-name "com.apple.CoreTelephony.powerlog-Full.LogChannel")
(global-name "com.apple.CoreTelephony.powerlog-Lite.LogChannel"))
	(require-all
		(local-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-register.local-name'"))
	(require-all
		(extension "b'com.apple.security.exception.mach-register.global-name'")
		(global-name-regex #".+")))
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow necp-client-open)
(allow network-inbound)
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow process-codesigning)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow socket-ioctl)
(allow socket-option-get)
(allow socket-option-set)
(allow syscall-unix)
(allow syscall-mach)
(allow syscall-mig)
(allow sysctl-read
	(sysctl-name "net.link.generic.ifdata")
	(sysctl-name "kern.wakereason")
	(sysctl-name "security.mac.lockdown_mode_state")
	(sysctl-name "kern.darkboot"))
(allow system-fcntl)
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-necp-client-action)
(allow system-privilege)
(allow system-socket)
(allow user-preference-read
	(require-any (preference-domain "com.apple.telephony.capabilities")
(preference-domain "com.apple.TelephonyIPCPreferences")
(preference-domain "com.apple.CommCenter.counts")
(preference-domain "com.apple.CommCenter.TxPower")
(preference-domain "com.apple.AppleBasebandManager")
(preference-domain "com.apple.AppleBasebandManager.Statistics")
(preference-domain "com.apple.network.eapclient.eapsim")
(preference-domain "com.apple.network.eapclient.eapaka")
(preference-domain "com.apple.coretelephony")
(preference-domain "com.apple.commcenter")
(preference-domain "com.apple.commcenter.vinyl")
(preference-domain "com.apple.commcenter.user_apns")
(preference-domain "com.apple.commcenter.omadm_apns")
(preference-domain "com.apple.commcenter.remotecellplan")
(preference-domain "com.apple.commcenter.audio")
(preference-domain "com.apple.commcenter.attach_apn")
(preference-domain "com.apple.commcenter.device_specific_nobackup")
(preference-domain "com.apple.commcenter.cellular_profile")
(preference-domain "com.apple.commcenter.callservices")
(preference-domain "com.apple.commcenter.carrier_bundle"))
	(preference-domain "com.apple.locationd")
	(require-any (preference-domain "com.apple.operator_1")
(preference-domain "com.apple.tethering_override")
(preference-domain "com.apple.AppleBasebandManager.NetworkPolicy")
(preference-domain "com.apple.cellular-data.blacklist")
(preference-domain "com.apple.carrier.default")
(preference-domain "com.apple.carrier.bootstrap"))
	(preference-domain "com.apple.apsalerts")
	(preference-domain "com.apple.carrier_1")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.avfaudio")
	(preference-domain "com.apple.VideoConference")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.TTY")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.persistentconnection-nosettings")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.purplebuddy")
	(preference-domain "com.apple.healthd")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.corevideo")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.da")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.security")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
(allow managed-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-write
	(require-any (preference-domain "com.apple.telephony.capabilities")
(preference-domain "com.apple.TelephonyIPCPreferences")
(preference-domain "com.apple.CommCenter.counts")
(preference-domain "com.apple.CommCenter.TxPower")
(preference-domain "com.apple.AppleBasebandManager")
(preference-domain "com.apple.AppleBasebandManager.Statistics")
(preference-domain "com.apple.network.eapclient.eapsim")
(preference-domain "com.apple.network.eapclient.eapaka")
(preference-domain "com.apple.coretelephony")
(preference-domain "com.apple.commcenter")
(preference-domain "com.apple.commcenter.vinyl")
(preference-domain "com.apple.commcenter.user_apns")
(preference-domain "com.apple.commcenter.omadm_apns")
(preference-domain "com.apple.commcenter.remotecellplan")
(preference-domain "com.apple.commcenter.audio")
(preference-domain "com.apple.commcenter.attach_apn")
(preference-domain "com.apple.commcenter.device_specific_nobackup")
(preference-domain "com.apple.commcenter.cellular_profile")
(preference-domain "com.apple.commcenter.callservices")
(preference-domain "com.apple.commcenter.carrier_bundle")))
(allow default-message-filter)
