(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.app-sandbox.read-write'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.app-sandbox.read-write'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension "b'com.apple.clouddocs.version'"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(extension "b'com.apple.app-sandbox.read-write'"))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension "b'com.apple.app-sandbox.read-write'"))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(extension "b'com.apple.app-sandbox.read-write'"))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension-class "com.apple.app-sandbox.read-write")))
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-not (extension-class "com.apple.app-sandbox.read-write")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
				(require-not (extension-class "com.apple.app-sandbox.read-write")))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-any
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")
				(require-not (extension-class "com.apple.app-sandbox.read-write")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-any
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-any
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-any
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(extension-class "com.apple.corespotlightservice.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.foundation.upload-prep.read-write")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
							(require-all
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
			(require-all
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
				(require-any
					(require-all
						(extension "b'com.apple.sandbox.container'")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-any
									(extension-class "com.apple.quicklook.readonly")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.wcd.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.spotlight-indexable")))
							(require-all
								(extension-class "com.apple.corespotlightservice.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
							(require-all
								(extension-class "com.apple.foundation.upload-prep.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
						(literal "/private/var/")
						(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "b'com.apple.app-sandbox.read-write'"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(extension-class "com.apple.webkit.map-executable")
		(extension "b'com.apple.sandbox.executable'"))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(extension "b'com.apple.app-sandbox.read-write'"))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-any
			(extension-class "com.apple.quicklook.readonly")
			(extension-class "com.apple.sharing.airdrop.readonly")
			(extension-class "com.apple.wcd.readonly")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(signing-identifier "com.apple.PosterBoard"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(subpath-prefix "${HOME}/Library/Mail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(signing-identifier "com.apple.PosterBoard"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(subpath-prefix "${HOME}/Library/Mail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(signing-identifier "com.apple.PosterBoard"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(subpath-prefix "${HOME}/Library/Mail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(signing-identifier "com.apple.PosterBoard"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(subpath-prefix "${HOME}/Library/Mail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
						(signing-identifier "com.apple.PosterBoard"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(subpath-prefix "${HOME}/Library/Mail"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
			(require-all
				(extension-class "com.apple.sandbox.oopjit")
				(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
				(subpath "/private/var/OOPJit"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(extension-class "com.apple.spotlight-indexable")
				(require-any
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")))
			(require-all
				(subpath-prefix "${HOME}/Media/Books")
				(require-any
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))))
			(require-all
				(extension-class "com.apple.swift-playgrounds.executable")
				(entitlement-is-bool-true "b'com.apple.private.swift-playgrounds.executable-provider'")
				(extension "b'com.apple.sandbox.container'"))
			(require-all
				(subpath-prefix "${HOME}/Media/Podcasts")
				(require-any
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
				(require-any
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))))
			(require-all
				(extension-class "com.apple.identityservices.send")
				(require-any
					(require-all
						(subpath "/private/var/tmp")
						(require-any
							(signing-identifier "com.apple.shortcuts")
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(subpath-prefix "${PROCESS_TEMP_DIR}")
						(require-any
							(signing-identifier "com.apple.shortcuts")
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(extension "b'com.apple.sandbox.container'")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))))
			(require-all
				(extension-class "com.apple.clouddocs.version")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(signing-identifier "com.apple.icloud.drive.fileprovider"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(subpath-prefix "${HOME}/Library/Mail")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(require-all
								(signing-identifier "com.apple.SharingUI.ShareSheet")
								(extension "b'com.apple.sharing.airdrop.readonly'"))))
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath-prefix "${HOME}/Library/SMS/Attachments"))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))))
			(require-all
				(extension-class "com.apple.StreamingUnzipService")
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(extension-class "com.apple.mediaserverd.read")
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.HomeKit/com.apple.Home.HomeControlService/com.apple.HomeKit.SoftwareUpdate/SoftwareUpdateDocumentation/?")
						(require-any
							(signing-identifier "com.apple.Home.HomeControlService")
							(require-all
								(extension-class "com.apple.StreamingUnzipService")
								(extension "b'com.apple.sandbox.container'"))))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home[.]HomeControlService/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(extension-class "com.apple.StreamingUnzipService")
						(extension "b'com.apple.sandbox.container'"))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.HomeKit/com.apple.Home/com.apple.HomeKit.SoftwareUpdate/SoftwareUpdateDocumentation/?")
						(signing-identifier "com.apple.Home"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]HomeKit/com[.]apple[.]Home/com[.]apple[.]HomeKit[.]SoftwareUpdate/SoftwareUpdateDocumentation$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(subpath-prefix "${HOME}/Media/DCIM")
				(require-any
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
						(signing-identifier "com.apple.mobilemail"))))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Mail")
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension "b'com.apple.usernotifications.attachments.read-only'")
						(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))
					(require-all
						(signing-identifier "com.apple.InCallService")
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.odr-assets'")
				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(extension "b'com.apple.usernotifications.attachments.read-only'")
				(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-any
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(extension-class "com.apple.spotlight-indexable")
						(signing-identifier "com.apple.mobilemail"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension "b'com.apple.odr-assets'")
				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(extension "b'com.apple.assets.read'")
						(require-any
							(subpath "/private/var/MobileAsset")
							(subpath-prefix "${HOME}/Library/Assets")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(extension "b'com.apple.usernotifications.attachments.read-only'")
						(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))
					(require-all
						(signing-identifier "com.apple.InCallService")
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones"))))
			(require-all
				(extension-class "com.apple.spotlight-indexable")
				(require-any
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath-prefix "${HOME}/Library/SMS/Attachments"))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/mobile/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Library/Mobile Documents/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Library/Mobile Documents/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Library/Mobile Documents/[^/]+/Documents$")
						(subpath-prefix "${HOME}")
						(extension-class "com.apple.spotlight-indexable"))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs")
						(require-any
							(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
						(signing-identifier "com.apple.FileProvider.LocalStorage"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath-prefix "${HOME}/Library/SMS/Attachments"))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath-prefix "${HOME}/Library/SMS/Attachments"))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.spotlight-indexable")
				(require-any
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath-prefix "${HOME}/Library/SMS/Attachments"))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(require-any
							(require-all
								(signing-identifier "com.apple.mobilecal")
								(subpath-prefix "${HOME}/Library/Calendar"))
							(require-all
								(extension-class "com.apple.sharing.airdrop.readonly")
								(signing-identifier "com.apple.ReplayKit.RPVideoEditorExtension")
								(subpath-prefix "${HOME}/Library/ReplayKit"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
			(require-all
				(extension "b'com.apple.fileprovider.read-write'")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(extension "b'com.apple.sandbox.executable'"))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(extension "b'com.apple.sandbox.executable'"))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(extension "b'com.apple.sandbox.executable'")))
(allow file-ioctl
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
				(require-any
					(signing-identifier "com.apple.shortcuts")
					(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
					(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))))
	(require-all
		(subpath-prefix "${HOME}/Library/AddressBook")
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
(allow file-issue-extension)
(allow file-link
	(subpath "/Developer")
	(subpath "/usr/lib")
	(subpath "/System/Cryptexes")
	(subpath "/private/preboot/Cryptexes")
	(subpath "/System/Library")
	(subpath "/System/Developer")
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
				(require-any
					(entitlement-is-bool-true "b'get-task-allow'")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(literal))
	(require-all
		(debug-mode)
		(require-any
			(subpath "/usr/local")
			(subpath "/AppleInternal")
			(subpath "/usr/appleinternal")
			(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")))
	(require-all
		(entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")
		(literal "/AppleInternal/Library/Frameworks/CellularLogging.framework"))
	(require-all
		(extension "b'com.apple.swift-playgrounds.executable'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
	(require-all
		(subpath "/Applications/AppStore.app/Frameworks")
		(signing-identifier "com.apple.MobileSMS"))
	(require-all
		(signing-identifier "com.apple.iStreamer")
		(literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
		(extension "b'com.apple.app-sandbox.read'"))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(entitlement-is-bool-true "b'get-task-allow'"))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
	(require-all
		(debug-mode)
		(require-any
			(subpath "/AppleInternal")
			(subpath "/usr/local/lib")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
	(require-all
		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-mount
	(subpath-prefix "${HOME}/Library/Fonts")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
	(entitlement-is-bool-true "b'com.apple.media.ringtones.read-write'")
	(require-all
		(subpath-prefix "${HOME}/Library/Carrier Bundles")
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(entitlement-is-bool-true "b'com.apple.security.exception.carrier-bundle.read'")))
	(require-all
		(literal "/System/Library/Carrier Bundles/")
		(require-any
			(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
			(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
					(literal)
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(literal "/private/var/")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
			(require-all
				(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
				(extension "b'com.apple.librarian.ubiquity-revision'"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension "b'com.apple.clouddocs.version'"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE))
			(require-all
				(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
				(require-not (subpath "/private/var/hardware/FactoryData"))
				(require-not (literal "/usr/standalone/firmware/apticket.der"))
				(require-any
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(literal "/private/var/preferences/com.apple.security.plist")
					(literal "/private/var/db/com.apple.networkextension.tracker-info")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
					(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
										(require-any
											(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
											(signing-identifier "com.apple.Music")
											(signing-identifier "com.apple.mobilemail")
											(signing-identifier "com.apple.iBooks")
											(signing-identifier "com.apple.stocks.watchkitextension")))
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-any
											(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$")))
									(require-all
										(signing-identifier "com.apple.Music")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
									(require-all
										(signing-identifier "com.apple.stocks.watchkitextension")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$"))
									(require-all
										(signing-identifier "com.apple.Maps")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$"))
									(require-all
										(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$"))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.container2'")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
									(require-all
										(extension "b'com.apple.usernotifications.attachments.read-only'")
										(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))
							(require-all
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(require-all
										(signing-identifier "com.apple.itunesu")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.mobilesafari")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.container2'")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))))))
					(require-all
						(entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")
						(literal "/AppleInternal/Library/Frameworks/CellularLogging.framework"))
					(require-all
						(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
						(subpath "/private/var/OOPJit"))
					(require-all
						(extension "b'com.apple.swift-playgrounds.executable'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
					(require-all
						(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(entitlement-is-bool-true "b'com.apple.media.ringtones.read-only'")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(literal "/private/var/"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}")
								(literal "/private/var/"))
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}"))))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(literal-prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${HOME}/Media/Books")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension "b'com.apple.identityservices.deliver'")
						(require-any
							(signing-identifier "com.apple.shortcuts")
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(subpath-prefix "${HOME}/Media/Podcasts")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath "/Applications/AppStore.app/Frameworks"))
					(require-all
						(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/WebClips")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath-prefix "${HOME}/Library/Calendar")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/DataAccess")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
							(require-any (subpath "/Library/Application Support/Mail/Plugins")
(literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist")
(literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist"))
							(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
					(require-all
						(signing-identifier "com.apple.mobilesafari")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/DataAccess")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/Safari")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")))
					(require-all
						(subpath-prefix "${HOME}/Library/Logs/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Maps")
						(literal))
					(require-all
						(subpath-prefix "${HOME}/Library/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Safari")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(signing-identifier "com.apple.PosterBoard")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/Notes")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
						(signing-identifier "com.apple.InCallService"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(debug-mode)
						(signing-identifier "com.apple.CloudDocsDaemon.diagnostic")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/InternalDaemon/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/db/?"))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(require-not (literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(subpath-prefix "${HOME}/Library/Fonts")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
									(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
							(require-all
								(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
								(require-any
									(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
									(literal "/private/var/preferences/com.apple.networkd.plist")
									(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
									(literal "/private/var/preferences/com.apple.security.plist")
									(subpath "/private/var/containers/Data/System/com.apple.geod")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
									(literal "/private/var/db/com.apple.networkextension.tracker-info")
									(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
									(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
									(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath "/Library/Audio/Tunings/Generic/Haptics")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
									(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
									(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
									(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
											(require-all
												(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
												(subpath-prefix "${HOME}"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
												(process-attribute is-apple-signed-executable))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(subpath-prefix "${HOME}/Library/ReplayKit")
										(extension "b'com.apple.replayd.read-only'"))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
										(extension "b'com.apple.Pasteboard-readonly'"))
									(require-all
										(extension "b'com.apple.odr-assets'")
										(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
									(require-all
										(extension "b'com.apple.assets.read'")
										(require-any
											(subpath "/private/var/MobileAsset")
											(subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(extension "b'com.apple.classkit.read-write'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
										(extension "b'com.apple.clouddocs.version'"))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
										(vnode-type REGULAR-FILE))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
										(vnode-type REGULAR-FILE))
									(require-all
										(subpath-prefix "${HOME}/Media")
										(require-any
											(require-all
												(extension "b'com.apple.tcc.kTCCServicePhotos'")
												(require-any
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
													(extension "b'com.apple.avasset.read-only'")
													(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
													(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
													(subpath-prefix "${HOME}/Media/PhotoStreamsData")
													(subpath-prefix "${HOME}/Media/DCIM")
													(require-all
														(process-attribute is-platform-binary)
														(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
											(require-all
												(require-not (literal "/usr/sbin/fairplayd"))
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))))))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
										(require-not (literal "/usr/sbin/fairplayd"))
										(require-any
											(literal "/dev/null")
											(literal "/dev/aes_0")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
											(literal "/dev/urandom")
											(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
											(subpath "/private/var/db/datadetectors/sys")
											(literal "/dev/dtracehelper")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
											(literal "/dev/zero")
											(literal "/dev/random")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(literal "/private")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(subpath "/private/preboot/Cryptexes")
											(literal "/")
											(literal "/private/preboot")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(require-all
												(uid 0)
												(literal "/private/etc/master.passwd"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
												(require-any
													(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
													(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
											(require-all
												(entitlement-is-bool-true "b'com.apple.security.system-container'")
												(extension "b'com.apple.sandbox.system-container'")
												(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
												(require-any
													(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Data/System/")
														(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
											(require-all
												(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
												(extension "b'com.apple.sandbox.system-group'")
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(entitlement-is-present "b'com.apple.security.system-group-containers'"))
											(require-all
												(extension "b'com.apple.sandbox.system-group'")
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
													(require-all
														(entitlement-is-present "b'com.apple.security.system-group-containers'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
												(extension "b'com.apple.logd.read-only'")
												(require-any
													(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
													(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
											(require-all
												(vnode-type BLOCK-DEVICE)
												(vnode-type CHARACTER-DEVICE)
												(require-any
													(literal "/private")
													(subpath "/Developer")
													(subpath "/private/var/preferences/Logging")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Library/PrivateFrameworks")
													(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
													(literal "/private/etc/passwd")
													(subpath "/usr/lib")
													(subpath "/private/var/db/timezone")
													(subpath "/Library/RegionFeatures")
													(literal "/System")
													(literal "/private/etc/services")
													(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
													(subpath "/System/Library/Frameworks")
													(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/private/etc/hosts")
													(subpath "/private/preboot/Cryptexes")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
													(literal "/")
													(subpath "/usr/share")
													(literal "/private/etc/fstab")
													(literal "/private/preboot")
													(subpath "/System/Library")
													(subpath "/System/Developer")
													(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-any
															(subpath "/usr/libexec")
															(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
															(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
															(require-all
																(subpath "/usr/local/libexec")
																(debug-mode))))
													(require-all
														(debug-mode)
														(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
													(require-all
														(subpath "/usr/local")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/AppleInternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/usr/appleinternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
														(require-any
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
													(require-all
														(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
														(subpath "/private/var/OOPJit")
														(extension "b'com.apple.sandbox.oopjit'"))))))))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(extension "b'com.apple.sandbox.application-group'")
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))))))
					(require-all
						(signing-identifier "com.apple.iStreamer")
						(literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
					(require-all
						(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
						(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(signing-identifier "com.apple.Bridge")
						(subpath-prefix "${HOME}/Library/DeviceRegistry"))
					(require-all
						(signing-identifier "com.apple.SharingUI.ShareSheet")
						(extension "b'com.apple.sharing.airdrop.readonly'"))
					(require-all
						(require-any (signing-identifier "com.apple.chrono.WidgetRenderer-CarPlay")
(signing-identifier "com.apple.chrono.WidgetRenderer-Default"))
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]chrono/?"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentManagerUICore.SaveToFiles")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAvocado")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAppPopover"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")))))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.exception.carrier-bundle.read'")
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
					(literal)
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(literal "/private/var/")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
			(require-all
				(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
				(extension "b'com.apple.librarian.ubiquity-revision'"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension "b'com.apple.clouddocs.version'"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE))
			(require-all
				(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
				(require-not (subpath "/private/var/hardware/FactoryData"))
				(require-not (literal "/usr/standalone/firmware/apticket.der"))
				(require-any
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(literal "/private/var/preferences/com.apple.security.plist")
					(literal "/private/var/db/com.apple.networkextension.tracker-info")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
					(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
										(require-any
											(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
											(signing-identifier "com.apple.Music")
											(signing-identifier "com.apple.mobilemail")
											(signing-identifier "com.apple.iBooks")
											(signing-identifier "com.apple.stocks.watchkitextension")))
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-any
											(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$")))
									(require-all
										(signing-identifier "com.apple.Music")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
									(require-all
										(signing-identifier "com.apple.stocks.watchkitextension")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$"))
									(require-all
										(signing-identifier "com.apple.Maps")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$"))
									(require-all
										(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$"))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.container2'")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
									(require-all
										(extension "b'com.apple.usernotifications.attachments.read-only'")
										(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))
							(require-all
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(require-all
										(signing-identifier "com.apple.itunesu")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.mobilesafari")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.container2'")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))))))
					(require-all
						(entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")
						(literal "/AppleInternal/Library/Frameworks/CellularLogging.framework"))
					(require-all
						(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
						(subpath "/private/var/OOPJit"))
					(require-all
						(extension "b'com.apple.swift-playgrounds.executable'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
					(require-all
						(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(entitlement-is-bool-true "b'com.apple.media.ringtones.read-only'")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(literal "/private/var/"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}")
								(literal "/private/var/"))
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}"))))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(literal-prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${HOME}/Media/Books")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension "b'com.apple.identityservices.deliver'")
						(require-any
							(signing-identifier "com.apple.shortcuts")
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(subpath-prefix "${HOME}/Media/Podcasts")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath "/Applications/AppStore.app/Frameworks"))
					(require-all
						(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/WebClips")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath-prefix "${HOME}/Library/Calendar")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/DataAccess")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
							(require-any (subpath "/Library/Application Support/Mail/Plugins")
(literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist")
(literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist"))
							(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
					(require-all
						(signing-identifier "com.apple.mobilesafari")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/DataAccess")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/Safari")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")))
					(require-all
						(subpath-prefix "${HOME}/Library/Logs/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Maps")
						(literal))
					(require-all
						(subpath-prefix "${HOME}/Library/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Safari")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(signing-identifier "com.apple.PosterBoard")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/Notes")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
						(signing-identifier "com.apple.InCallService"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(debug-mode)
						(signing-identifier "com.apple.CloudDocsDaemon.diagnostic")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/InternalDaemon/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/db/?"))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(require-not (literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(subpath-prefix "${HOME}/Library/Fonts")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
									(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
							(require-all
								(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
								(require-any
									(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
									(literal "/private/var/preferences/com.apple.networkd.plist")
									(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
									(literal "/private/var/preferences/com.apple.security.plist")
									(subpath "/private/var/containers/Data/System/com.apple.geod")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
									(literal "/private/var/db/com.apple.networkextension.tracker-info")
									(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
									(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
									(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath "/Library/Audio/Tunings/Generic/Haptics")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
									(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
									(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
									(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
											(require-all
												(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
												(subpath-prefix "${HOME}"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
												(process-attribute is-apple-signed-executable))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(subpath-prefix "${HOME}/Library/ReplayKit")
										(extension "b'com.apple.replayd.read-only'"))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
										(extension "b'com.apple.Pasteboard-readonly'"))
									(require-all
										(extension "b'com.apple.odr-assets'")
										(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
									(require-all
										(extension "b'com.apple.assets.read'")
										(require-any
											(subpath "/private/var/MobileAsset")
											(subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(extension "b'com.apple.classkit.read-write'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
										(extension "b'com.apple.clouddocs.version'"))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
										(vnode-type REGULAR-FILE))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
										(vnode-type REGULAR-FILE))
									(require-all
										(subpath-prefix "${HOME}/Media")
										(require-any
											(require-all
												(extension "b'com.apple.tcc.kTCCServicePhotos'")
												(require-any
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
													(extension "b'com.apple.avasset.read-only'")
													(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
													(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
													(subpath-prefix "${HOME}/Media/PhotoStreamsData")
													(subpath-prefix "${HOME}/Media/DCIM")
													(require-all
														(process-attribute is-platform-binary)
														(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
											(require-all
												(require-not (literal "/usr/sbin/fairplayd"))
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))))))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
										(require-not (literal "/usr/sbin/fairplayd"))
										(require-any
											(literal "/dev/null")
											(literal "/dev/aes_0")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
											(literal "/dev/urandom")
											(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
											(subpath "/private/var/db/datadetectors/sys")
											(literal "/dev/dtracehelper")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
											(literal "/dev/zero")
											(literal "/dev/random")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(literal "/private")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(subpath "/private/preboot/Cryptexes")
											(literal "/")
											(literal "/private/preboot")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(require-all
												(uid 0)
												(literal "/private/etc/master.passwd"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
												(require-any
													(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
													(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
											(require-all
												(entitlement-is-bool-true "b'com.apple.security.system-container'")
												(extension "b'com.apple.sandbox.system-container'")
												(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
												(require-any
													(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Data/System/")
														(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
											(require-all
												(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
												(extension "b'com.apple.sandbox.system-group'")
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(entitlement-is-present "b'com.apple.security.system-group-containers'"))
											(require-all
												(extension "b'com.apple.sandbox.system-group'")
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
													(require-all
														(entitlement-is-present "b'com.apple.security.system-group-containers'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
												(extension "b'com.apple.logd.read-only'")
												(require-any
													(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
													(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
											(require-all
												(vnode-type BLOCK-DEVICE)
												(vnode-type CHARACTER-DEVICE)
												(require-any
													(literal "/private")
													(subpath "/Developer")
													(subpath "/private/var/preferences/Logging")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Library/PrivateFrameworks")
													(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
													(literal "/private/etc/passwd")
													(subpath "/usr/lib")
													(subpath "/private/var/db/timezone")
													(subpath "/Library/RegionFeatures")
													(literal "/System")
													(literal "/private/etc/services")
													(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
													(subpath "/System/Library/Frameworks")
													(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/private/etc/hosts")
													(subpath "/private/preboot/Cryptexes")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
													(literal "/")
													(subpath "/usr/share")
													(literal "/private/etc/fstab")
													(literal "/private/preboot")
													(subpath "/System/Library")
													(subpath "/System/Developer")
													(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-any
															(subpath "/usr/libexec")
															(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
															(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
															(require-all
																(subpath "/usr/local/libexec")
																(debug-mode))))
													(require-all
														(debug-mode)
														(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
													(require-all
														(subpath "/usr/local")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/AppleInternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/usr/appleinternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
														(require-any
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
													(require-all
														(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
														(subpath "/private/var/OOPJit")
														(extension "b'com.apple.sandbox.oopjit'"))))))))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(extension "b'com.apple.sandbox.application-group'")
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))))))
					(require-all
						(signing-identifier "com.apple.iStreamer")
						(literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
					(require-all
						(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
						(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(signing-identifier "com.apple.Bridge")
						(subpath-prefix "${HOME}/Library/DeviceRegistry"))
					(require-all
						(signing-identifier "com.apple.SharingUI.ShareSheet")
						(extension "b'com.apple.sharing.airdrop.readonly'"))
					(require-all
						(require-any (signing-identifier "com.apple.chrono.WidgetRenderer-CarPlay")
(signing-identifier "com.apple.chrono.WidgetRenderer-Default"))
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]chrono/?"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentManagerUICore.SaveToFiles")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAvocado")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAppPopover"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")))))))
	(require-all
		(require-not (subpath "/System/Library/Carrier Bundles"))
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
					(literal)
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(literal "/private/var/")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
			(require-all
				(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?"))
				(extension "b'com.apple.librarian.ubiquity-revision'"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension "b'com.apple.clouddocs.version'"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension "b'com.apple.librarian.ubiquity-container'")
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE))
			(require-all
				(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
				(require-not (subpath "/private/var/hardware/FactoryData"))
				(require-not (literal "/usr/standalone/firmware/apticket.der"))
				(require-any
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(literal "/private/var/preferences/com.apple.security.plist")
					(literal "/private/var/db/com.apple.networkextension.tracker-info")
					(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
					(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
										(require-any
											(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
											(signing-identifier "com.apple.Music")
											(signing-identifier "com.apple.mobilemail")
											(signing-identifier "com.apple.iBooks")
											(signing-identifier "com.apple.stocks.watchkitextension")))
									(require-all
										(signing-identifier "com.apple.mobilemail")
										(require-any
											(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]bulletinboard[.]apps$")))
									(require-all
										(signing-identifier "com.apple.Music")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync"))
									(require-all
										(signing-identifier "com.apple.stocks.watchkitextension")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]stocks[.]bridge$"))
									(require-all
										(signing-identifier "com.apple.Maps")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/"))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync$"))
									(require-all
										(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]Carousel$"))))
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(require-all
										(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
										(require-any
											(require-all
												(signing-identifier "com.apple.itunesu")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(signing-identifier "com.apple.iBooks")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.container2'")
												(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$"))))
									(require-all
										(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI")
										(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist"))
									(require-all
										(extension "b'com.apple.usernotifications.attachments.read-only'")
										(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))))
							(require-all
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(require-all
										(signing-identifier "com.apple.itunesu")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.mobilesafari")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(signing-identifier "com.apple.iBooks")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.container2'")
										(require-any
											(require-all
												(vnode-type DIRECTORY)
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$"))
											(require-all
												(subpath-prefix "${HOME}")
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal"))))))))
					(require-all
						(entitlement-is-present "b'com.apple.developer.cellular-logging.allow'")
						(literal "/AppleInternal/Library/Frameworks/CellularLogging.framework"))
					(require-all
						(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
						(subpath "/private/var/OOPJit"))
					(require-all
						(extension "b'com.apple.swift-playgrounds.executable'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.plist")
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
					(require-all
						(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(subpath-prefix "${HOME}/Media/Purchases")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(entitlement-is-bool-true "b'com.apple.media.ringtones.read-only'")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(literal "/private/var/"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}")
								(literal "/private/var/"))
							(require-all
								(subpath-prefix "${HOME}")
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}"))))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/SpringBoard/LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/LockBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnail.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/HomeBackgroundThumbnaildark.jpg")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.LockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.HomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/.OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalLockVideo.mov")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackground.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeBackgrounddark.cpbitmap")
(literal-prefix "${HOME}/Library/SpringBoard/OriginalHomeVideo.mov"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(literal-prefix "${HOME}/Library/SpringBoard/LockVideo.mov")
						(require-any
							(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${HOME}/Media/Books")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
						(extension "b'com.apple.identityservices.deliver'")
						(require-any
							(signing-identifier "com.apple.shortcuts")
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
					(require-all
						(subpath-prefix "${HOME}/Media/Podcasts")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
						(signing-identifier "com.apple.SafariViewService"))
					(require-all
						(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
						(require-any
							(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
							(subpath-prefix "${HOME}/Media/Purchases")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(signing-identifier "com.apple.MobileSMS")
						(subpath "/Applications/AppStore.app/Frameworks"))
					(require-all
						(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Music")
						(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
					(require-all
						(subpath-prefix "${HOME}/Library/WebClips")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/DCIM")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webapp")))
					(require-all
						(subpath-prefix "${HOME}/Library/Calendar")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-any
							(subpath-prefix "${HOME}/Library/Caches/DataAccess")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail"))
							(require-any (subpath "/Library/Application Support/Mail/Plugins")
(literal "/System/Library/PairedSyncServices/com.apple.pairedsync.mail.plist")
(literal "/private/var/preferences/SystemConfiguration/com.apple.AutoWake.plist"))
							(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
					(require-all
						(signing-identifier "com.apple.mobilesafari")
						(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/DataAccess")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Media/Safari")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilesafari")))
					(require-all
						(subpath-prefix "${HOME}/Library/Logs/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Cookies")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")))
					(require-all
						(signing-identifier "com.apple.Maps")
						(literal))
					(require-all
						(subpath-prefix "${HOME}/Library/Mail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(subpath-prefix "${HOME}/Library/Safari")
						(require-any
							(signing-identifier "com.apple.webbookmarksd")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.safarifetcherd")
							(signing-identifier "com.apple.Safari.SocialHelper")
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(signing-identifier "com.apple.PosterBoard")
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/Notes")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")))
					(require-all
						(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
						(signing-identifier "com.apple.InCallService"))
					(require-all
						(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
						(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
					(require-all
						(debug-mode)
						(signing-identifier "com.apple.CloudDocsDaemon.diagnostic")
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/InternalDaemon/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/db/?"))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(require-not (literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(subpath-prefix "${HOME}/Library/Fonts")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
								(require-any
									(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
									(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")))
							(require-all
								(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
								(require-any
									(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
									(literal "/private/var/preferences/com.apple.networkd.plist")
									(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
									(literal "/private/var/preferences/com.apple.security.plist")
									(subpath "/private/var/containers/Data/System/com.apple.geod")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
									(literal "/private/var/db/com.apple.networkextension.tracker-info")
									(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
									(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
									(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath "/Library/Audio/Tunings/Generic/Haptics")
									(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
									(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
									(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
									(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
											(require-all
												(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
												(subpath-prefix "${HOME}"))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
												(process-attribute is-apple-signed-executable))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.plist")
												(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
									(require-all
										(process-attribute is-apple-signed-executable)
										(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
									(require-all
										(literal "/private/var/")
										(require-any
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
													(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(subpath-prefix "${HOME}/Library/ReplayKit")
										(extension "b'com.apple.replayd.read-only'"))
									(require-all
										(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
										(extension "b'com.apple.Pasteboard-readonly'"))
									(require-all
										(extension "b'com.apple.odr-assets'")
										(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
									(require-all
										(extension "b'com.apple.assets.read'")
										(require-any
											(subpath "/private/var/MobileAsset")
											(subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(extension "b'com.apple.classkit.read-write'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
										(extension "b'com.apple.librarian.ubiquity-revision'"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(extension "b'com.apple.librarian.ubiquity-container'")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
											(subpath-prefix "${HOME}/Library/Mobile Documents")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
										(extension "b'com.apple.clouddocs.version'"))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
										(vnode-type REGULAR-FILE))
									(require-all
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
										(vnode-type REGULAR-FILE))
									(require-all
										(subpath-prefix "${HOME}/Media")
										(require-any
											(require-all
												(extension "b'com.apple.tcc.kTCCServicePhotos'")
												(require-any
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
													(extension "b'com.apple.avasset.read-only'")
													(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
													(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
													(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
													(subpath-prefix "${HOME}/Media/PhotoStreamsData")
													(subpath-prefix "${HOME}/Media/DCIM")
													(require-all
														(process-attribute is-platform-binary)
														(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
											(require-all
												(require-not (literal "/usr/sbin/fairplayd"))
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))))))))
									(require-all
										(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
										(require-not (literal "/usr/sbin/fairplayd"))
										(require-any
											(literal "/dev/null")
											(literal "/dev/aes_0")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
											(literal "/dev/urandom")
											(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
											(subpath "/private/var/db/datadetectors/sys")
											(literal "/dev/dtracehelper")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
											(literal "/dev/zero")
											(literal "/dev/random")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(literal "/private")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(subpath "/private/preboot/Cryptexes")
											(literal "/")
											(literal "/private/preboot")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(require-all
												(uid 0)
												(literal "/private/etc/master.passwd"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
												(require-any
													(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
													(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
											(require-all
												(entitlement-is-bool-true "b'com.apple.security.system-container'")
												(extension "b'com.apple.sandbox.system-container'")
												(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
												(require-any
													(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Data/System/")
														(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
											(require-all
												(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
												(extension "b'com.apple.sandbox.system-group'")
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(entitlement-is-present "b'com.apple.security.system-group-containers'"))
											(require-all
												(extension "b'com.apple.sandbox.system-group'")
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
													(require-all
														(entitlement-is-present "b'com.apple.security.system-group-containers'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
												(extension "b'com.apple.logd.read-only'")
												(require-any
													(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
													(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
											(require-all
												(vnode-type BLOCK-DEVICE)
												(vnode-type CHARACTER-DEVICE)
												(require-any
													(literal "/private")
													(subpath "/Developer")
													(subpath "/private/var/preferences/Logging")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Library/PrivateFrameworks")
													(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
													(literal "/private/etc/passwd")
													(subpath "/usr/lib")
													(subpath "/private/var/db/timezone")
													(subpath "/Library/RegionFeatures")
													(literal "/System")
													(literal "/private/etc/services")
													(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
													(subpath "/System/Library/Frameworks")
													(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/private/etc/hosts")
													(subpath "/private/preboot/Cryptexes")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
													(literal "/")
													(subpath "/usr/share")
													(literal "/private/etc/fstab")
													(literal "/private/preboot")
													(subpath "/System/Library")
													(subpath "/System/Developer")
													(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-any
															(subpath "/usr/libexec")
															(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
															(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
															(require-all
																(subpath "/usr/local/libexec")
																(debug-mode))))
													(require-all
														(debug-mode)
														(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
													(require-all
														(subpath "/usr/local")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/AppleInternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath "/usr/appleinternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
														(require-any
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
													(require-all
														(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
														(subpath "/private/var/OOPJit")
														(extension "b'com.apple.sandbox.oopjit'"))))))))
							(require-all
								(literal "/System/Library/Carrier Bundles/")
								(require-any
									(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
									(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(extension "b'com.apple.sandbox.application-group'")
								(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(literal "/private/var/PersonaVolumes/")
												(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}")
												(require-any
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
													(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")))))))))
					(require-all
						(signing-identifier "com.apple.iStreamer")
						(literal "/AppleInternal/Library/Frameworks/CoreAutomation"))
					(require-all
						(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
						(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
					(require-all
						(signing-identifier "com.apple.FileProvider.LocalStorage")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(signing-identifier "com.apple.Bridge")
						(subpath-prefix "${HOME}/Library/DeviceRegistry"))
					(require-all
						(signing-identifier "com.apple.SharingUI.ShareSheet")
						(extension "b'com.apple.sharing.airdrop.readonly'"))
					(require-all
						(require-any (signing-identifier "com.apple.chrono.WidgetRenderer-CarPlay")
(signing-identifier "com.apple.chrono.WidgetRenderer-Default"))
						(require-any
							(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]chrono/?"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.chrono$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?")))
					(require-all
						(require-any (signing-identifier "com.apple.DocumentManagerUICore.SaveToFiles")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAvocado")
(signing-identifier "com.apple.DocumentManagerUICore.RecentsAppPopover"))
						(require-any
							(subpath "/private/var/containers/Bundle")
							(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
							(subpath "/Developer/Applications")
							(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
							(subpath "/Applications")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Bundle/Application/?"))))))))
(allow file-mount-update
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
		(literal "/private/var/")
		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read*
	(vnode-type SYMLINK)
	(literal "/private/var")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/Mobile Documents")
	(literal-prefix "${HOME}")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library")
	(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")
	(literal-prefix "${HOME}/Library/Mobile Documents")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal "/private/var/run/syslog")
	(literal-prefix "${HOME}/Library/GameKit/Data")
	(literal-prefix "${HOME}/Library")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist")
					(require-all
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))
			(require-all
				(extension "b'com.apple.sandbox.container'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist")
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension "b'com.apple.swift-playgrounds.executable'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(entitlement-is-bool-true "b'com.apple.developer.swift-playgrounds-app.development-build'")))
	(require-all
		(literal-prefix "${HOME}/Library/PPTDevice")
		(require-any
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
			(signing-identifier "com.apple.shortcuts")))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(signing-identifier "com.apple.Music")
		(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${HOME}/Library/Caches/sharedCaches")
				(require-any
					(signing-identifier "com.apple.Music")
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
						(signing-identifier "com.apple.mobilemail"))))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
				(require-any
					(signing-identifier "com.apple.itunesu")
					(signing-identifier "com.apple.mobilesafari")
					(signing-identifier "com.apple.iBooks")
					(entitlement-is-bool-true "b'com.apple.container2'")
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
						(signing-identifier "com.apple.mobilemail"))))))
	(require-all
		(literal-prefix "${HOME}/Library/Caches/sharedCaches")
		(signing-identifier "com.apple.Music"))
	(require-all
		(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
		(require-any
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
	(require-all
		(subpath-prefix "${HOME}/Library/Mail")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
		(signing-identifier "com.apple.PosterBoard"))
	(require-all
		(subpath-prefix "${HOME}/Library/Cookies")
		(require-any
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.webbookmarksd")
			(signing-identifier "com.apple.safarifetcherd")
			(signing-identifier "com.apple.Safari.SocialHelper")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.PosterBoard"))
	(require-all
		(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
		(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
				(signing-identifier "com.apple.mobilemail"))
			(require-all
				(literal-prefix "${HOME}/Library/Caches")
				(require-any
					(signing-identifier "com.apple.mobilemail")
					(signing-identifier "com.apple.mobilenotes")))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
		(signing-identifier "com.apple.FileProvider.LocalStorage"))
	(require-all
		(literal-prefix "${HOME}/Library/Caches")
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(signing-identifier "com.apple.mobilenotes")))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.FileProvider.LocalStorage"))
	(require-all
		(literal-prefix "${HOME}")
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))
	(require-all
		(subpath-prefix "${HOME}/Library/Mobile Documents")
		(require-any
			(extension "b'com.apple.librarian.ubiquity-container'")
			(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
		(require-any
			(extension "b'com.apple.librarian.ubiquity-container'")
			(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any
			(extension "b'com.apple.librarian.ubiquity-container'")
			(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
	(require-all
		(literal-prefix "${HOME}")
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${HOME}")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
			(require-all
				(literal-prefix "${HOME}/Library/Preferences")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
		(require-any
			(extension "b'com.apple.librarian.ubiquity-container'")
			(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${HOME}")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
			(require-all
				(literal-prefix "${HOME}/Library/Preferences")
				(entitlement-is-bool-true "b'com.apple.developer.group-session'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(literal-prefix "${HOME}")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences"))))
(allow file-read-data
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'")))))
(allow file-revoke
	(process-attribute is-apple-signed-executable)
	(literal "/private/etc/passwd")
	(literal "/private/etc/services")
	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
	(extension-path-ancestor 0)
	(literal "/private/etc/hosts")
	(literal "/private/etc/fstab")
	(require-any (literal "/sbin/mount")
(literal "/sbin/launchd"))
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
			(literal)
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist")
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(literal "/private/var/")
				(require-any
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(signing-identifier "com.apple.Music")
		(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
	(require-all
		(subpath-prefix "${HOME}/Media/DCIM")
		(require-any
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.webapp")))
	(require-all
		(subpath-prefix "${HOME}/Library/Cookies")
		(require-any
			(signing-identifier "com.apple.webbookmarksd")
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.safarifetcherd")
			(signing-identifier "com.apple.Safari.SocialHelper")))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(subpath-prefix "${HOME}/Library/Mail"))
	(require-all
		(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
		(signing-identifier "com.apple.PosterBoard"))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.PosterBoard"))
	(require-all
		(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
		(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
		(signing-identifier "com.apple.FileProvider.LocalStorage"))
	(require-all
		(literal "/private/var/")
		(require-any
			(literal "/")
			(subpath "/System")
			(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(subpath "/usr/lib")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(literal "/dev/random")
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
				(require-any
					(literal "/private/var/Managed Preferences/mobile/")
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(signing-identifier "com.apple.FileProvider.LocalStorage"))))
			(require-all
				(require-any (literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
				(literal-prefix "${HOME}/Library/Mobile Documents/"))))
	(require-all
		(require-any (literal "/bin/")
(literal "/sbin/")
(literal "/usr/bin/")
(literal "/usr/share/terminfo")
(literal "/private/etc/"))
		(require-any
			(literal "/")
			(subpath "/System")
			(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
			(literal "/dev/urandom")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(subpath "/usr/lib")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(literal "/dev/random")
			(require-all
				(require-any (literal-prefix "${HOME}/Media/Recordings/")
(literal-prefix "${HOME}/Library/Recordings/")
(literal-prefix "${HOME}/Library/SMS/")
(literal-prefix "${HOME}/Library/SpringBoard/PushStore/")
(literal-prefix "${HOME}/Library/SpringBoard/ApplicationShortcuts/")
(literal-prefix "${HOME}/Library/OnDemandResources/Manifests/")
(literal-prefix "${HOME}/Library/CallServices/Ringtones/")
(literal-prefix "${HOME}/Library/Caches/BridgeIconCache/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.bird/")
(literal-prefix "${HOME}/Library/Caches/CloudKit/com.apple.CloudDocsUI.CloudSharing/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/containers/")
(literal-prefix "${HOME}/Library/Application Support/CloudDocs/session/unprotected/containers/"))
				(literal-prefix "${HOME}/Library/Mobile Documents/")))))
(allow file-test-existence
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(vnode-type DIRECTORY)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(vnode-type SYMLINK)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?"))
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(literal "/private/var/")
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")))))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMusicSync")
						(signing-identifier "com.apple.Music"))
					(require-all
						(regex #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]NanoMail")
						(signing-identifier "com.apple.mobilemail"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoMaps/")
						(signing-identifier "com.apple.Maps"))))
			(require-all
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/" #"^/private/var/mobile/Media/iTunes_Control$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control$")
						(subpath-prefix "${HOME}")
						(require-any
							(signing-identifier "com.apple.iBooks")
							(signing-identifier "com.apple.itunesu")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-journal" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-shm" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/MediaLibrary.sqlitedb-wal")
						(subpath-prefix "${HOME}")
						(require-any
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.iBooks")
							(signing-identifier "com.apple.itunesu")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(vnode-type DIRECTORY)
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
						(subpath-prefix "${HOME}"))))
			(require-all
				(regex #"^/private/var/mobile/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/euser[0-9]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/[-0-9A-F]+/Library/Preferences/com.apple.restrictionspassword.plist" #"^/private/var/Users/[^/]+/Library/Preferences/com.apple.restrictionspassword.plist")
				(subpath-prefix "${HOME}")
				(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
		(subpath "/private/var/OOPJit"))
	(require-all
		(subpath-prefix "${HOME}/Media/Purchases")
		(entitlement-is-bool-true "b'com.apple.media.ringtones.read-write'"))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${HOME}")
				(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
				(entitlement-is-bool-true "b'com.apple.media.ringtones.read-write'"))
			(require-all
				(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
				(subpath-prefix "${HOME}")
				(entitlement-is-bool-true "b'com.apple.media.ringtones.read-write'"))))
	(require-all
		(subpath-prefix "${HOME}/Media/Books")
		(require-any
			(signing-identifier "com.apple.iBooks")
			(signing-identifier "com.apple.itunesu")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]SafariViewService/?")
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.SafariViewService/")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.SafariViewService"))
	(require-all
		(signing-identifier "com.apple.Music")
		(require-any (subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(subpath-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache")))
	(require-all
		(literal-prefix "${HOME}/Library/Cookies/com.apple.itunesstored")
		(require-any
			(entitlement-is-bool-true "b'com.apple.container2'")
			(signing-identifier "com.apple.webbookmarksd")
			(signing-identifier "com.apple.safarifetcherd")
			(signing-identifier "com.apple.Safari.SocialHelper")
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.iBooks")))
	(require-all
		(signing-identifier "com.apple.CloudDocs.MobileDocumentsFileProvider")
		(subpath-prefix "${HOME}/Library/Mobile Documents/com~apple~CloudDocs"))
	(require-all
		(subpath-prefix "${HOME}/Library/WebClips")
		(require-any
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.webapp")))
	(require-all
		(signing-identifier "com.apple.mobilesafari")
		(require-any (subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoPlay")
(subpath-prefix "${HOME}/Library/Caches/com.apple.parsecd/CustomFeedback/SafariAutoFill")))
	(require-all
		(signing-identifier "com.apple.Maps")
		(literal))
	(require-all
		(subpath-prefix "${HOME}/Library/Cookies")
		(require-any
			(signing-identifier "com.apple.webbookmarksd")
			(signing-identifier "com.apple.safarifetcherd")
			(signing-identifier "com.apple.Safari.SocialHelper")
			(signing-identifier "com.apple.mobilesafari")))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/?")
		(signing-identifier "com.apple.FileProvider.LocalStorage"))
	(require-all
		(signing-identifier "com.apple.PosterBoard")
		(require-any
			(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/SystemData/com[UNSUPPORTED]apple[UNSUPPORTED]posterkit[UNSUPPORTED]provider/?"))
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/SystemData/com.apple.posterkit.provider$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/com.apple.posterkit.provider$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/(SystemData|tmp)/com.apple.posterkit.provider$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
	(require-all
		(subpath-prefix "${HOME}/Library/Safari")
		(require-any
			(signing-identifier "com.apple.webbookmarksd")
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.safarifetcherd")
			(signing-identifier "com.apple.Safari.SocialHelper")
			(signing-identifier "com.apple.mobilemail")
			(signing-identifier "com.apple.mobilenotes")))
	(require-all
		(signing-identifier "com.apple.Bridge")
		(subpath-prefix "${HOME}/Library/DeviceRegistry"))
	(require-all
		(vnode-type REGULAR-FILE)
		(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(literal-prefix "${HOME}/Library/AddressBook/")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'"))))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(signing-identifier "com.apple.FileProvider.LocalStorage"))
	(require-all
		(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.notes.sharedstore.lock")
(literal-prefix "${HOME}/Library/Caches/com.apple.notes.objectcreation.lock"))
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(signing-identifier "com.apple.mobilenotes")))
	(require-all
		(subpath-prefix "${HOME}/Library/Notes")
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(signing-identifier "com.apple.mobilenotes")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'"))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.mobilemail")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.mobilemail")))
	(require-all
		(subpath-prefix "${HOME}/Library/Calendar")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(subpath-prefix "${HOME}/Library/DataAccess")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist"))
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-not (literal-prefix "${HOME}/Library/Caches/DateFormats.plist"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
			(require-all
				(extension "b'com.apple.fileprovider.read-write'")
				(require-any
					(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension "b'com.apple.classkit.read-write'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))
			(require-all
				(vnode-type DIRECTORY)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type SYMLINK)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
	(require-all
		(subpath-prefix "${HOME}/Library/Mail")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(subpath-prefix "${HOME}/Library/Logs/Mail")
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoMail/" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/PairedSyncServiceRestrictions/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/(NanoMail|PairedSyncServiceRestrictions)/")
		(signing-identifier "com.apple.mobilemail")))
(allow file-write*
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(literal "/private/var/")
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$"))
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")))
			(require-all
				(vnode-type DIRECTORY)
				(process-attribute is-apple-signed-executable)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-all
						(subpath-prefix "${PROCESS_TEMP_DIR}")
						(require-any
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
							(signing-identifier "com.apple.shortcuts")))
					(require-all
						(subpath "/private/var/tmp")
						(require-any
							(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
							(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
							(signing-identifier "com.apple.shortcuts")))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-all
						(literal-prefix "${HOME}/Library/Caches/sharedCaches")
						(signing-identifier "com.apple.Music"))
					(require-all
						(require-any (literal-prefix "${HOME}/Library/com.apple.iTunesStore")
(literal-prefix "${HOME}/Library/com.apple.iTunesStore/LocalStorage"))
						(require-any
							(signing-identifier "com.apple.itunesu")
							(signing-identifier "com.apple.mobilesafari")
							(signing-identifier "com.apple.iBooks")
							(entitlement-is-bool-true "b'com.apple.container2'")))
					(require-all
						(signing-identifier "com.apple.mobilemail")
						(require-any
							(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
							(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
					(require-all
						(literal-prefix "${HOME}/Library/Caches")
						(require-any
							(signing-identifier "com.apple.mobilemail")
							(signing-identifier "com.apple.mobilenotes")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")))))
			(require-all
				(require-any (literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache")
(literal-prefix "${HOME}/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache"))
				(require-not (signing-identifier "com.apple.Music"))
				(vnode-type DIRECTORY))
			(require-all
				(signing-identifier "com.apple.mobilemail")
				(require-any
					(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
					(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
			(require-all
				(literal "/private/var/")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")
						(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
						(vnode-type DIRECTORY))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")
						(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
						(vnode-type DIRECTORY))))
			(require-all
				(require-all (require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist")))
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${HOME}/Library/Mobile Documents")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
		(literal "/private/var/")
		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-setugid
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-all
						(literal "/private/var/")
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")
						(require-not (literal "/private/var/")))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$"))
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")))))
	(require-all
		(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension "b'com.apple.identityservices.deliver'"))))
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'"))
	(require-all
		(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension "b'com.apple.identityservices.deliver'"))))
	(require-all
		(signing-identifier "com.apple.shortcuts")
		(require-any
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath "/private/var/tmp")
					(subpath-prefix "${PROCESS_TEMP_DIR}")))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
				(extension "b'com.apple.identityservices.deliver'"))))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-any
			(literal-prefix "${HOME}/Library/Preferences/com.apple.AOSNotification.launchd")
			(literal-prefix "${HOME}/Library/Preferences/com.apple.dataaccess.launchd")))
	(require-all
		(signing-identifier "com.apple.itunesu")
		(require-any
			(subpath-prefix "${HOME}/Media/Podcasts")
			(require-all
				(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))))
	(require-all
		(signing-identifier "com.apple.iBooks")
		(require-any
			(subpath-prefix "${HOME}/Media/Podcasts")
			(require-all
				(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.container2'")
		(require-any
			(subpath-prefix "${HOME}/Media/Podcasts")
			(require-all
				(subpath-prefix "${HOME}/Media/ManagedPurchases/Books")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))
			(require-all
				(subpath-prefix "${HOME}/Media/Purchases")
				(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))))))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow fs-snapshot-mount
	(require-all
		(extension-class "com.apple.webkit.microphone")
		(require-any
			(signing-identifier "com.apple.SafariViewService")
			(signing-identifier "com.apple.mobilesafari")
			(extension "b'com.apple.tcc.kTCCServiceMicrophone'")
			(require-all
				(extension-class "com.apple.webkit.camera")
				(extension "b'com.apple.tcc.kTCCServiceCamera'"))))
	(require-all
		(extension-class "com.apple.webkit.camera")
		(require-any
			(signing-identifier "com.apple.SafariViewService")
			(signing-identifier "com.apple.mobilesafari")
			(require-all
				(extension-class "com.apple.webkit.camera")
				(extension "b'com.apple.tcc.kTCCServiceCamera'")))))
(allow hid-control
	(iokit-property "IOClass")
	(iokit-property "IOCFPlugInTypes")
	(require-any (iokit-property "OSKernelCPUType")
(iokit-property "OSKernelCPUSubtype"))
	(iokit-property "IOClassNameOverride")
	(entitlement-is-bool-true "b'com.apple.system.diagnostics.iokit-properties'")
	(signing-identifier "com.apple.Passbook")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(iokit-user-client-class "IOService")
		(require-any
			(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
			(require-any (iokit-property "live-photo-capture")
(iokit-property "camera-hdr-version")
(iokit-property "aggregate-cam-video-zoom")
(iokit-property "aggregate-cam-photo-zoom")
(iokit-property "flash")
(iokit-property "front-auto-hdr")
(iokit-property "front-max-video-")
(iokit-property "front-max-burst-length")
(iokit-property "front-hdr")
(iokit-property "front-hdr-on")
(iokit-property "front-flash-capability")
(iokit-property "front-burst")
(iokit-property "front-burst-image-duration")
(iokit-property "panorama")
(iokit-property "pearl-camera")
(iokit-property "portrait-lighting-strength")
(iokit-property "pipelined-stillimage-capability")
(iokit-property "rear-max-video-")
(iokit-property "rear-max-slomo-video-fps-")
(iokit-property "rear-auto-hdr")
(iokit-property "rear-low-light-photo")
(iokit-property "rear-hdr")
(iokit-property "rear-hdr-on")
(iokit-property "rear-burst")
(iokit-property "rear-burst-image-duration")
(iokit-property "rear-cam-telephoto-capability")
(iokit-property "rear-cam-superwide-capability"))
			(require-any (iokit-property "tnr-mode")
(iokit-property "encoding")
(iokit-property "bitrate-")
(iokit-property "rear-slowmo")
(iokit-property "decoding")
(iokit-property "display-scale")
(iokit-property "display-rotation")
(iokit-property "navigation")
(iokit-property "no-sdio-devices")
(iokit-property "3d-maps")
(iokit-property "3d-imagery")
(iokit-property "video-cap")
(iokit-property "video-stills")
(iokit-property "auto-focus")
(iokit-property "adaptive-ui")
(iokit-property "live-effects")
(iokit-property "live-photo-auto")
(iokit-property "post-effects")
(iokit-property "p3-color-space-video-recording")
(iokit-property "mandrake-supported")
(iokit-property "marketing-software-behavior")
(iokit-property "supports-always-listening")
(iokit-property "studio-light-portrait-preview"))
			(require-any (iokit-property "closed-loop")
(iokit-property "jasper-camera")
(iokit-property "auto-low-light-video")
(iokit-property "stereo-sound-recording"))
			(require-any (iokit-property "chip-id")
(iokit-property "software-behavior"))
			(require-any (iokit-property "name")
(iokit-property "device_type")
(iokit-property "device-type"))
			(iokit-property "Protocol Characteristics")
			(require-all
				(require-any (iokit-property "gid-aes-key")
(iokit-property "AAPL,phandle")
(iokit-property "#address-cells")
(iokit-property "production-cert")
(iokit-property "firmware-version")
(iokit-property "image4-supported")
(iokit-property "random-seed")
(iokit-property "root-matching")
(iokit-property "uid-aes-key")
(iokit-property "unique-chip-id")
(iokit-property "board-id")
(iokit-property "boot-nonce")
(iokit-property "bootp-response")
(iokit-property "system-trusted")
(iokit-property "software-bundle-version")
(iokit-property "secure-boot")
(iokit-property "security-domain")
(iokit-property "die-id")
(iokit-property "dram-vendor")
(iokit-property "dram-vendor-id")
(iokit-property "debug-enabled")
(iokit-property "development-cert")
(iokit-property "chip-epoch")
(iokit-property "crypto-hash-method")
(iokit-property "consistent-debug-root")
(iokit-property "certificate-security-mode")
(iokit-property "certificate-production-status")
(iokit-property "mix-n-match-prevention-status")
(iokit-property "mac-address-wifi0")
(iokit-property "mac-address-ethernet0")
(iokit-property "mac-address-bluetooth0")
(iokit-property "effective-security-mode-ap")
(iokit-property "effective-security-mode-sep")
(iokit-property "effective-production-status-ap")
(iokit-property "effective-production-status-sep"))
				(require-any
					(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
					(require-all
						(entitlement-is-present "b'fairplay-client'")
						(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'")))))
			(require-all
				(iokit-property "boot-manifest-hash")
				(require-any
					(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
					(require-all
						(entitlement-is-present "b'fairplay-client'")
						(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'")))))))
	(require-all
		(iokit-user-client-class "AppleJPEGDriver")
		(require-any
			(iokit-property "AppleJPEGNumCores")
			(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))
	(require-all
		(iokit-property "soc-generation")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "supports-apt")
		(iokit-user-client-class "AppleARMIODevice"))
	(require-all
		(require-any (iokit-property "nfcWithRadio")
(iokit-property "supports-nfc-reader-mode"))
		(require-any (iokit-user-client-class "AppleSimpleUARTSync")
(iokit-user-client-class "AppleStockholmControlConfig")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
		(require-any
			(require-any (iokit-property "AppleDiagnostic")
(iokit-property "device-imei")
(iokit-property "CrashReporter-ID")
(iokit-property "root-ticket-hash")
(iokit-property "Device Characteristics")
(iokit-property "backlight-marketing-table")
(iokit-property "controllers")
(iokit-property "config-number")
(iokit-property "IOCPUID")
(iokit-property "IODeviceMemory")
(iokit-property "IOAccessoryDigitalID")
(iokit-property "IOAccessoryManagerType")
(iokit-property "IOAccessoryBatteryPack")
(iokit-property "IOAccessoryID")
(iokit-property "IOAccessoryInterfaceDeviceInfo"))
			(iokit-property-regex #"[Cc]alibration" #".+[Cc]alibration")
			(iokit-connection "AppleSynopsysOTGDevice")
			(iokit-property "boot-manifest-hash")))
	(require-all
		(entitlement-is-present "b'fairplay-client'")
		(require-any
			(entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'")
			(require-any (iokit-property "AppleDiagnostic")
(iokit-property "device-imei")
(iokit-property "CrashReporter-ID")
(iokit-property "root-ticket-hash")
(iokit-property "Device Characteristics")
(iokit-property "backlight-marketing-table")
(iokit-property "controllers")
(iokit-property "config-number")
(iokit-property "IOCPUID")
(iokit-property "IODeviceMemory")
(iokit-property "IOAccessoryDigitalID")
(iokit-property "IOAccessoryManagerType")
(iokit-property "IOAccessoryBatteryPack")
(iokit-property "IOAccessoryID")
(iokit-property "IOAccessoryInterfaceDeviceInfo"))
			(iokit-property-regex #"[Cc]alibration" #".+[Cc]alibration")
			(iokit-connection "AppleSynopsysOTGDevice")
			(iokit-property "boot-manifest-hash")))
	(require-all
		(iokit-user-client-class "AppleSPUHIDDriver")
		(require-any (iokit-property "SupportHDRCompass")
(iokit-property "SupportAlwaysOnCompass")))
	(require-all
		(iokit-user-client-class "IOMedia")
		(signing-identifier "com.apple.SharingViewService")
		(require-any
			(require-any (iokit-property "UUID")
(iokit-property "Role")
(iokit-property "Content"))
			(iokit-property "BSD Name")))
	(require-all
		(iokit-connection "AppleSynopsysOTGDevice")
		(require-any (iokit-property "Product Name")
(iokit-property "kUSBProductString")
(iokit-property "idVendor")
(iokit-property "idProduct")))
	(require-all
		(iokit-user-client-class "AppleAPFSVolume")
		(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")))
	(require-all
		(iokit-property "IOMACAddress")
		(require-any
			(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
			(entitlement-is-bool-true "b'com.apple.wifi.manager-access'")
			(require-all
				(entitlement-is-present "b'fairplay-client'")
				(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'")))))
	(require-all
		(iokit-user-client-class "IONetworkController")
		(require-any
			(require-any (iokit-property "CFBundleIdentifier")
(iokit-property "IOLinkSpeed")
(iokit-property "IOLinkStatus")
(iokit-property "IOPropertyMatch")
(iokit-property "IOMinPacketSize")
(iokit-property "IOMaxPacketSize"))
			(require-any (iokit-property "IOFeatures")
(iokit-property "IOProviderClass"))
			(iokit-property "IOClass")))
	(require-all
		(iokit-property "display-corner-radius")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-user-client-class "IONetworkInterface")
		(require-any
			(require-any (iokit-property "NetworkConfigurationOverrides")
(iokit-property "IsEphemeral")
(iokit-property "InterfaceRole")
(iokit-property "IOBuiltin")
(iokit-property "IOLocation")
(iokit-property "IOPrimaryInterface")
(iokit-property "IOControllerEnabled")
(iokit-property "IOActivePacketFilters")
(iokit-property "IORequiredPacketFilters")
(iokit-property "IONetworkData")
(iokit-property "IONetworkRootType")
(iokit-property "IO80211Band")
(iokit-property "IO80211RSNDone")
(iokit-property "IO80211Channel")
(iokit-property "IO80211ChannelBandwidth")
(iokit-property "IO80211ChannelFrequency")
(iokit-property "IOMaxTransferUnit")
(iokit-property "IOMediaHeaderLength")
(iokit-property "IOMediaAddressLength")
(iokit-property "IOInterfaceUnit")
(iokit-property "IOInterfaceType")
(iokit-property "IOInterfaceFlags")
(iokit-property "IOInterfaceState")
(iokit-property "IOInterfaceNamePrefix")
(iokit-property "IOInterfaceExtraFlags"))
			(iokit-property "BSD Name")
			(require-any (iokit-property "IOFeatures")
(iokit-property "IOProviderClass"))))
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "IOService"))
	(require-all
		(iokit-property "ane-type")
		(require-any
			(iokit-user-client-class "AppleARMIODevice")
			(iokit-user-client-class "IOPlatformExpertDevice")))
	(require-all
		(iokit-property "Size")
		(iokit-user-client-class "IOMedia"))
	(require-all
		(iokit-user-client-class "IOPlatformDevice")
		(require-any
			(iokit-property "iommu-present")
			(iokit-property "compatible")
			(iokit-property "function-button_ringerab")
			(iokit-property "home-button-type")))
	(require-all
		(iokit-user-client-class "AppleJPEGDriver")
		(require-any
			(iokit-property "AppleJPEGNumCores")
			(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")))
	(require-all
		(iokit-user-client-class "IOPlatformDevice")
		(require-any (iokit-property "disable-globe-map")
(iokit-property "multiuser-sessions")))
	(require-all
		(iokit-property "soc-generation")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-property "soc-generation")
		(iokit-user-client-class "IOPlatformDevice"))
	(require-all
		(iokit-connection "IOPMPowerSource")
		(require-any (iokit-property "BatteryInstalled")
(iokit-property "ExternalConnected")))
	(require-all
		(iokit-user-client-class "AppleARMIODevice")
		(require-any
			(require-any (iokit-property "canvas-width")
(iokit-property "canvas-height"))
			(require-any (iokit-property "metal-standard")
(iokit-property "opengl-standard")
(iokit-property "procedural-antialiasing"))
			(require-any (iokit-property "camera-rear")
(iokit-property "camera-front"))))
	(require-all
		(iokit-property "client")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient"))
	(require-all
		(iokit-user-client-class "IOPlatformDevice")
		(require-any
			(require-any (iokit-property "thin-bezel")
(iokit-property "large-format-phone"))
			(require-any (iokit-property "external-hdr")
(iokit-property "compatible-app-variant"))
			(require-any (iokit-property "product-description")
(iokit-property "device-perf-memory-class")
(iokit-property "compatible-device-fallback")
(iokit-property "graphics-featureset-class")
(iokit-property "graphics-featureset-fallbacks")
(iokit-property "artwork-display-gamut")
(iokit-property "artwork-dynamic-displaymode")
(iokit-property "artwork-device-idiom")
(iokit-property "artwork-device-subtype"))
			(iokit-property "ptp-large-files")
			(require-any (iokit-property "horseman")
(iokit-property "assistant")
(iokit-property "gps-capable")
(iokit-property "magnetometer")
(iokit-property "bluetooth-le")
(iokit-property "car-integration")
(iokit-property "watch-companion")
(iokit-property "offline-dictation")
(iokit-property "location-reminders")
(iokit-property "rear-cam-offset-from-center")
(iokit-property "side-button-location")
(iokit-property "supports-maps-optical-heading"))
			(iokit-property "product-id")
			(iokit-property "display-corner-radius")
			(iokit-property "front-cam-offset-from-center")
			(iokit-property "dictation")
			(iokit-property "artwork-scale-factor")
			(iokit-property "device-colors")
			(require-any (iokit-property "ui-pip")
(iokit-property "oled-display"))))
	(require-all
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
		(require-any
			(require-any (iokit-property "mode")
(iokit-property "useMag"))
			(iokit-property "interval")
			(iokit-property "QueueSize")))
	(require-all
		(iokit-property "gyro-interrupt-calibration")
		(require-any (iokit-user-client-class "AppleOscarNub")
(iokit-user-client-class "AppleSPUHIDInterface")))
	(require-all
		(require-any (iokit-property "Serial")
(iokit-property "BatteryData")
(iokit-property "battery-data"))
		(iokit-connection "IOPMPowerSource")
		(require-any
			(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
			(require-all
				(entitlement-is-present "b'fairplay-client'")
				(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'")))))
	(require-all
		(iokit-user-client-class "IOPlatformExpertDevice")
		(require-any
			(require-any (iokit-property "model")
(iokit-property "model-number"))
			(require-any (iokit-property "platform-name")
(iokit-property "regulatory-model-number"))
			(iokit-property "region-info")))
	(require-all
		(iokit-property "APTDevice")
		(iokit-user-client-class "AppleCLCD"))
	(require-all
		(iokit-user-client-class "IOMobileFramebuffer")
		(require-any
			(require-any (iokit-property "AppleTV")
(iokit-property "appleTV-VID0")
(iokit-property "appleTV-VID1"))
			(require-any (iokit-property "dfr")
(iokit-property "hdcp-hoover-protocol")
(iokit-property "DisplayPipeStrideRequirements")
(iokit-property "DisplayPipePlaneBaseAlignment"))
			(iokit-property "external")
			(iokit-property "ext-display-subsystem")
			(iokit-property "PerformanceStatistics")))
	(require-all
		(require-any (iokit-property "ForceSupported")
(iokit-property "SupportTapToWake"))
		(require-any (iokit-user-client-class "AppleMultitouchSPI")
(iokit-user-client-class "AppleMultitouchDevice")))
	(require-all
		(iokit-property "AppleJPEG")
		(iokit-user-client-class "AppleJPEGDriver"))
	(require-all
		(iokit-property "HEVCSupported")
		(iokit-user-client-class "AppleD5500"))
	(require-all
		(iokit-user-client-class "AppleAVD")
		(require-any
			(iokit-property "AVCSupported")
			(iokit-property "LGHSupported")
			(iokit-property "HEVCCanDecodeTileToCanvas")))
	(require-all
		(iokit-property "als-colorCfg")
		(require-any (iokit-user-client-class "AppleARMIICDevice")
(iokit-user-client-class "AppleSPUInterface")))
	(require-all
		(iokit-property "noMultiColorSupport")
		(require-any (iokit-user-client-class "AppleARMIICDevice")
(iokit-user-client-class "AppleSPUInterface")))
	(require-all
		(iokit-user-client-class "IOAcceleratorES")
		(require-any
			(require-any (iokit-property "AGXParameterBufferMaxSize")
(iokit-property "IOGLES")
(iokit-property "InternalStatistics")
(iokit-property "InternalStatisticsAccm")
(iokit-property "MetalStatisticsName")
(iokit-property "PerformanceStatisticsAccum"))
			(iokit-property "PerformanceStatistics")
			(require-any (iokit-property "MetalPluginName")
(iokit-property "MetalPluginClassName")
(iokit-property "BaseAddressAlignmentRequirement"))))
	(require-all
		(iokit-property "MaxInputReportSize")
		(require-any (iokit-user-client-class "IOHIDDevice")
(iokit-user-client-class "IOHIDInterface")))
	(require-all
		(iokit-property "udid-version")
		(require-any
			(entitlement-is-bool-true "b'com.apple.system.get-hardware-identifiers'")
			(require-all
				(entitlement-is-present "b'fairplay-client'")
				(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'"))))))
(allow iokit-issue-extension
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(iokit-user-client-class "AGXDevice")
	(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
	(iokit-user-client-class "IOGPUDeviceUserClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
	(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AGXCommandQueue")
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "AGXSharedUserClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
	(require-all
		(iokit-user-client-class "AppleSPUHIDDeviceUserClient")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(iokit-user-client-class "AppleMobileFileIntegrityUserClient")
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-load-cdhash'"))
	(require-all
		(iokit-user-client-class "AppleAPFSUserClient")
		(require-any (signing-identifier "com.apple.DocumentsApp")
(signing-identifier "com.apple.DocumentManagerUICore.Service")))
	(require-all
		(iokit-user-client-class "com_apple_driver_FairPlayIOKitUserClient")
		(require-any
			(signing-identifier "com.apple.iBooks")
			(signing-identifier "com.apple.itunesu")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(iokit-user-client-class "RootDomainUserClient")
		(require-any
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.Bridge")
			(signing-identifier "com.apple.mobilemail")
			(signing-identifier "com.apple.Maps")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(iokit-user-client-class "IOHIDLibUserClient")))
(allow iokit-open*)
(allow iokit-open-user-client
	(require-all
		(iokit-property "FieldDiagsInflowInhibit")
		(iokit-user-client-class "IOPMPowerSource")
		(signing-identifier "com.apple.DiagnosticsService.Diagnostic-8187")))
(allow ipc-posix*
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))))
(allow ipc-posix-issue-extension
	(semaphore-owner self)
	(require-not (ipc-posix-name "purplebuddy.sentinel")))
(allow ipc-posix-sem*
	(require-any (ipc-posix-name "purplebuddy.sentinel")
(ipc-posix-name "containermanagerd.fb_check"))
	(semaphore-owner self))
(allow ipc-posix-sem-create
	(semaphore-owner self)
	(ipc-posix-name "purplebuddy.sentinel"))
(allow ipc-posix-sem-unlink
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
(allow ipc-posix-sem-wait
	(ipc-posix-name "/com.apple.AppSSO.version")
	(ipc-posix-name)
	(ipc-posix-name)
	(ipc-posix-name "apple.cfprefs.")
	(require-all
		(ipc-posix-name "AppleABL.")
		(entitlement-is-bool-true "b'inter-app-audio'")
		(ipc-posix-name-regex #"^AppleABL[.]." #"^AppleABL[.].+"))
	(require-all
		(ipc-posix-name "apple.shm.notification_center")
		(require-not (entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))))
(allow ipc-posix-shm-read-data
	(ipc-posix-name))
(allow ipc-posix-shm-write*
	(ipc-posix-name)
	(ipc-posix-name)
	(require-all
		(ipc-posix-name "AppleABL.")
		(entitlement-is-bool-true "b'inter-app-audio'")
		(ipc-posix-name-regex #"^AppleABL[.]." #"^AppleABL[.].+")))
(allow ipc-posix-shm-write-create
	(ipc-posix-name))
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(require-any (xpc-service-name "com.apple.iWorkFileFormat")
(xpc-service-name "com.apple.CompassCalibration")
(xpc-service-name "com.apple.CallKit.CallDirectory")
(xpc-service-name "com.apple.SafariServices.ContentBlockerLoader"))
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(require-any (xpc-service-name "com.apple.WebKit.Networking")
(xpc-service-name "com.apple.WebKit.WebAuthn")
(xpc-service-name "com.apple.WebKit.WebContent"))
	(global-name "com.apple.vibrationmanagerd")
	(xpc-service-name "com.apple.coremedia.decompressionsession.xpc")
	(global-name "com.apple.fairplayd.versioned")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.wcd")
	(global-name "com.apple.springboard.blockableservices")
	(global-name "com.apple.coremedia.compressionsession")
	(xpc-service-name "com.apple.coremedia.compressionsession.xpc")
	(xpc-service-name "com.apple.WebKit.GPU")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(global-name "com.apple.certui.relay")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(extension "b'com.apple.security.exception.mach-lookup.local-name'")
	(require-any (global-name "com.apple.mDNSResponder")
(global-name "com.apple.instruments.server.mig"))
	(global-name "com.apple.mediaserverd")
	(xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal")
	(xpc-service-name "com.apple.MapKit.SnapshotService")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(extension "b'com.apple.security.exception.mach-lookup.global-name'")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(require-any (global-name "com.apple.prdaily")
(global-name "com.apple.fileprovider.pushkit")
(global-name "com.apple.gizmoappd")
(global-name "com.apple.gamed.note")
(global-name "com.apple.datamigrator.dz")
(global-name "com.apple.distributed_notifications@0v3")
(global-name "com.apple.iapauthd")
(global-name "com.apple.itunescloudd.tcchelper")
(global-name "com.apple.vsassetd")
(global-name "com.apple.videoconference.avconference")
(global-name "com.apple.AdSheetPad.server")
(global-name "com.apple.AdSheetPhone.server")
(global-name "com.apple.scrod")
(global-name "com.apple.sandboxd")
(global-name "com.apple.springboard.watchdogserver")
(global-name "com.apple.weibod.server")
(global-name "com.apple.wapi.client")
(global-name "com.apple.watchconnectivity.complication")
(global-name "com.apple.cvmsCompAgent_armv7")
(global-name "com.apple.coremedia.wirelessdisplay")
(global-name "com.apple.coremedia.wirelessdisplayserver")
(global-name "com.apple.MediaControl.daemon")
(global-name "com.apple.MobileFileIntegrity")
(global-name "com.apple.Music.MPMusicPlayerMigServer")
(global-name "com.apple.telephonyutilities.remotelogdaemon")
(global-name "com.apple.telephonyutilities.callservicesdaemon.voip")
(global-name "com.apple.bypassBasebandAutoBooter.msgport")
(global-name "com.apple.backboard.watchdog")
(global-name "com.apple.backboard.workspaceserverconnection")
(global-name "com.apple.appleprofilepolicyd")
(global-name "com.apple.ait.client")
(global-name "com.apple.airplay.sender.xpc")
(global-name "com.apple.audio.AudioFileServer")
(global-name "com.apple.audio.AudioConverterServer")
(global-name "com.apple.mediastream.sharing-nowake")
(global-name "com.apple.managedconfiguration.mdmdservice")
(global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServer")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(require-any (global-name "com.apple.iapd.distributednotification.server")
(global-name "com.apple.iap2d.distributednotification.server"))
	(global-name "com.apple.itunescloudd.xpc")
	(require-any (global-name "com.apple.callkit.service")
(global-name "com.apple.coremedia.audioprocessingtap")
(global-name "com.apple.matter.support.xpc"))
	(global-name "com.apple.coremedia.videocodecd.decompressionsession")
	(global-name "com.apple.passd.assertions")
	(global-name "com.apple.librariand")
	(global-name "com.apple.mobile.installd")
	(require-any (global-name "com.apple.coremedia.cpe.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.cpe.xpc"))
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.networking.captivenetworksupport")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.mobileassetd")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(xpc-service-name "com.apple.siri.context.service")
	(xpc-service-name "com.apple.intents.intents-helper")
	(global-name "com.apple.calaccessd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.calaccessd.xpc")
	(global-name "com.apple.coremedia.sts")
	(require-any (xpc-service-name "com.apple.OSLogService")
(xpc-service-name "com.apple.mscamerad-xpc")
(xpc-service-name "com.apple.ModelIO.AssetLoader")
(xpc-service-name "com.apple.WorkoutKitXPCService")
(xpc-service-name "com.apple.avkit.SharedPreferences")
(xpc-service-name "com.apple.DocumentManagerCore.Rename")
(xpc-service-name "com.apple.uifoundation-bundle-helper")
(xpc-service-name "com.apple.BarcodeSupport.ParsingService")
(xpc-service-name "com.apple.datadetectors.AddToRecentsService")
(xpc-service-name "com.apple.SafariFoundation.AutoFillHelper")
(xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper"))
	(xpc-service-name "com.apple.accessibility.AccessibilityUIServer")
	(require-any (global-name "com.apple.accountsd.authmanager")
(global-name "com.apple.accountsd.accessmanager"))
	(global-name "com.apple.WebBookmarks.webbookmarksd")
	(require-any (global-name "com.apple.arkit.service.location")
(global-name "com.apple.arkit.service.geoTracking"))
	(global-name "com.apple.coremedia.decompressionsession")
	(xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent")
	(xpc-service-name "com.apple.textkit.nsattributedstringagent")
	(global-name "com.apple.healthd.restriction")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(global-name "com.apple.twitterd.server")
	(global-name "com.apple.spotlight.SearchAgent")
	(xpc-service-name "com.apple.MTLCompilerService")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.accountsd.oauthsigner")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.bird")
	(xpc-service-name "com.apple.accessibility.heard")
	(global-name "com.apple.healthd.server")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.VoiceOverTouch")
	(xpc-service-name "com.apple.AGXCompilerService")
	(global-name "com.apple.twitterd")
	(require-any (global-name "com.apple.ptpcamerad")
(global-name "com.apple.widget.pushkit")
(global-name "com.apple.relatived.public")
(global-name "com.apple.naturallanguaged")
(global-name "com.apple.translation.text")
(global-name "com.apple.ThreadNetwork.xpc")
(global-name "com.apple.gputools.producer")
(global-name "com.apple.VoiceOverTouch.drag.xpc")
(global-name "com.apple.uikit.eyedropperd.service")
(global-name "com.apple.SensorKit.SKMediaEventsHelper")
(global-name "com.apple.FontServices.FontProviderLoader")
(global-name "com.apple.DragUI.druid.source")
(global-name "com.apple.DragUI.druid.destination")
(global-name "com.apple.storekitservice")
(global-name "com.apple.storekit.configuration.xpc")
(global-name "com.apple.CoreMLModelSecurityService")
(global-name "com.apple.ClockKit.CLKWatchFaceLibrary")
(global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost")
(global-name "com.apple.fullkeyboardaccess.drag.xpc")
(global-name "com.apple.financed.service.financestore")
(global-name "com.apple.UIKit.OverlayUI.services")
(global-name "com.apple.UIKit.SecureControlService")
(global-name "com.apple.USDLib.FormatLoader")
(global-name "com.apple.USDKit.FormatLoader")
(global-name "com.apple.homed.xpc.accessory-setup")
(global-name "com.apple.handwritingd.pksettings")
(global-name "com.apple.handwritingd.pkanalytics")
(global-name "com.apple.managedappdistributiond.xpc")
(global-name "com.apple.metrickit.xpc")
(global-name "com.apple.metricmeasurement.MetricMeasurementHelper")
(global-name "com.apple.icprefd-xpc")
(global-name "com.apple.inputservice.keyboardui")
(global-name "com.apple.inputservice.input-ui-host")
(global-name "com.apple.iMessageAppsViewService.warmup-connection")
(global-name "com.apple.assistivetouchd.drag.xpc")
(global-name "com.apple.ap.promotedcontent.attributionservice")
(global-name "com.apple.ap.adprivacyd.attribution")
(global-name "com.apple.ap.adprivacyd.trackingtransparency")
(global-name "com.apple.chrono.widgetcenterconnection")
(global-name "com.apple.corelocation.locationUI")
(global-name "com.apple.commandandcontrol.drag.xpc")
(global-name "com.apple.contactsd.support")
(global-name "com.apple.contactsd.contact-provider")
(global-name "com.apple.dasd.end-prewarm")
(global-name "com.apple.dt.xctestd.target")
(global-name "com.apple.dt.testmanagerd.runner")
(global-name "com.apple.dt.testmanagerd.uiprocess")
(global-name "com.apple.donotdisturb.availability.service")
(global-name "com.apple.donotdisturb.appconfiguration.service")
(global-name "com.apple.AppTrackingTransparency.EnforcementService")
(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
	(require-any (global-name "com.apple.coremedia.mutablemovie.xpc")
(global-name "com.apple.coremedia.mutablecomposition.xpc")
(global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc"))
	(global-name "com.apple.ABDatabaseDoctor")
	(xpc-service-name "com.apple.PrintKit.PrinterTool")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.sessionservices")
	(global-name "com.apple.safarifetcherd")
	(global-name "com.apple.triald.namespace-management")
	(global-name "com.apple.sharingd.nsxpc")
	(global-name "com.apple.securityd")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(require-any (global-name "com.apple.cvhwa.xpc")
(global-name "com.apple.Safari.SafeBrowsing.Service"))
	(global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.dockaccessoryd")
	(require-any (global-name "com.apple.iap2d")
(global-name "com.apple.iaptransportd"))
	(global-name "com.apple.coremedia.videocodecd.compressionsession")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.passd.library")
	(global-name "com.apple.testmanagerd")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.mediaserverd")
	(require-any (global-name "com.apple.GameController.gamecontrollerd.app")
(global-name "com.apple.GameController.gamecontrollerd.haptics"))
	(require-any (global-name "com.apple.iTunesStore.daemon")
(global-name "com.apple.iTunesStore.daemon.deatchwatch")
(global-name "com.apple.iTunesStore.daemon-notifications"))
	(global-name "com.apple.siri.VoiceShortcuts.xpc")
	(global-name "com.apple.coremedia.videocodecd.compressionsession.xpc")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.handwritingd.remoterecognition")
	(global-name "com.apple.mobileasset.autoasset")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.nearbyd.xpc.nearbyinteraction")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.ClipServices.clipserviced")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.duetactivityscheduler")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(global-name "com.apple.SiriTTSService.TrialProxy")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.marco")
	(global-name "com.apple.ctkd.slot-client")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.commcenter.mobile-helper")
	(require-any (global-name "com.apple.iTunesStore.daemon.public")
(global-name "com.apple.iTunesStore.daemon.notifications.public"))
	(global-name "com.apple.contactsd")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.accessories.transport-server")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.corespotlightservice")
	(global-name "com.apple.librariand")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coresymbolicationd")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.shazamd")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.trustd")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.webprivacyd")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.mediaanalysisd.analysis")
	(global-name "com.apple.mobilemail.services.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.audio.AudioComponentPrefs")
	(global-name "com.apple.mediaanalysisd.service.public")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.GSSCred")
	(require-any (global-name "ScripterServer")
(global-name "UIASTNotificationCenter")
(global-name "com.apple.ondemandd.client")
(global-name "com.apple.hid.PencilHaptics")
(global-name "com.apple.sharing.sharesheet")
(global-name "com.apple.attributionkitd.xpc")
(global-name "com.apple.airplaydiagnostics.server"))
	(global-name "com.apple.AccessibilityUIServer")
	(global-name "com.apple.synapse.backlink-service")
	(global-name "com.apple.businessservicesd")
	(global-name "com.apple.AppSSO.service-xpc")
	(require-any (global-name "com.apple.commcenter.dm-helper")
(global-name "com.apple.callkit.callsourcehost"))
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.passd.in-app-payment")
	(global-name "com.apple.UIKit.statusbarserver")
	(global-name "com.apple.ScreenTimeAgent")
	(global-name "com.apple.ak.authorizationservices.xpc")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.bird")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.assistant.dictation")
	(global-name "com.apple.appleneuralengine")
	(global-name "com.apple.remindd")
	(global-name "com.apple.PointerUI.pointeruid.service")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.cache_delete.public")
	(global-name "com.apple.webinspector")
	(global-name "com.apple.DeviceAccess.xpc")
	(global-name "com.apple.backgroundassets.user")
	(global-name "com.apple.storekitd")
	(global-name "com.apple.fontservicesd")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.TextInput.lexicon-server")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.apsd")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.devicecheckd")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.audio.AudioSession")
	(global-name "com.apple.gamed")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(global-name "com.apple.itdbprep.server")
	(require-any (global-name "com.apple.TextInput.emoji")
(global-name "com.apple.TextInput.shortcuts")
(global-name "com.apple.TextInput.preferences"))
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.frontboard.workspace")
	(global-name "com.apple.bird.token")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.imavagent.embedded.auth")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.assetsd.changehub")
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(global-name "com.apple.revisiond")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.bird.token")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "PurplePPTServer")
	(global-name "com.apple.iapauthd.xpc")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.parsecd")
	(global-name "com.apple.linkd.transcript")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.springboard.backgroundappservices")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.notificationcenter.widgetcontrollerconnection")
	(global-name "com.apple.iconservices")
	(global-name "com.apple.atc")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.midiserver.io")
	(global-name "com.apple.accessibility.mediaaccessibilityd")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.pasteboard.pasted")
	(require-any (global-name "com.apple.iTunesStore.daemon.public")
(global-name "com.apple.iTunesStore.daemon.notifications.public"))
	(global-name "com.apple.ckdiscretionaryd")
	(global-name "PurpleSystemAppPort")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.accessories.externalaccessory-server")
	(global-name "com.apple.coremedia.mediaplaybackd.videoqueue")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.trustd")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.GameController.gamecontrollerd")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.kvsd")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.accessibility.gax.backboard")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.voiceservices.keepalive")
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.assistant.analytics")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.iphone.axserver-systemwide")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.springboard")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.dt.automationmode.reader")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.audio.AudioUnitServer")
	(require-any (global-name "com.apple.TextInput.rdt")
(global-name "com.apple.TextInput.image-cache-server"))
	(global-name "com.apple.awdd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.audio.hapticd")
	(global-name "com.apple.midiserver")
	(global-name "com.apple.homed.xpc")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.springboard.icongeneration")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.MobileAccessoryUpdater")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name "com.apple.webfilterd")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(require-any (global-name "com.apple.linkd.autoShortcut")
(global-name "com.apple.dictationd.recognition")
(global-name "com.apple.speech.localspeechrecognition")
(global-name "com.apple.KeyboardServices.TextReplacementService"))
	(global-name "com.apple.coremedia.videoqueue")
	(global-name "com.apple.backboard.hid-services.xpc")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
	(global-name "com.apple.iapd")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.progressd")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.ckdiscretionaryd.debug")
	(global-name "com.apple.VoiceOverTouch.xpc")
	(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
	(xpc-service-name "com.apple.audio.toolbox.reporting.service")
	(global-name "com.apple.iaptransportd.xpc")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.UIKit.pasteboardd")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.corerecents.recentsd")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.NPKCompanionAgent.library")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.gamecenter")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.iokit.powerdxpc")
	(xpc-service-name "com.apple.iconservices")
	(global-name "PurpleSystemEventPort")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.mediastream.sharing")
	(xpc-service-name)
	(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(xpc-service-name "com.apple.tonelibraryd")
	(global-name "com.apple.pairedsyncd.syncstate")
	(xpc-service-name "com.apple.externalaccessory.WACEAService")
	(xpc-service-name "com.apple.audio.analytics.service")
	(local-name "com.apple.assistant.contextprovider.")
	(xpc-service-name)
	(require-all
		(global-name "com.apple.lsd.advertisingidentifiers")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(signing-identifier "com.apple.mobilemail")
		(require-any
			(global-name "com.apple.routined.registration")
			(global-name "com.apple.harvestd.manager")
			(global-name "com.apple.backupd")
			(global-name "com.apple.mobilemail")
			(global-name "com.apple.nanoprefsync")
			(global-name "com.apple.bulletindistributord.server")
			(global-name "com.apple.identityservicesd.embedded.auth")
			(global-name "com.apple.sharingd.nsxpc")))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.developer.networking.multicast'")
		(require-any
			(global-name "com.apple.securityd")
			(global-name "com.apple.trustd")
			(global-name "com.apple.commcenter.xpc")
			(global-name "com.apple.commcenter.cupolicy.xpc")
			(global-name "com.apple.usymptomsd")
			(global-name "com.apple.symptomsd")
			(global-name "com.apple.symptoms.symptomsd.managed_events")
			(global-name "com.apple.SystemConfiguration.DNSConfiguration")
			(global-name "com.apple.SystemConfiguration.NetworkInformation")
			(global-name "com.apple.SystemConfiguration.helper")
			(global-name "com.apple.SystemConfiguration.configd")
			(global-name "com.apple.SystemConfiguration.PPPController")
			(global-name "com.apple.SystemConfiguration.SCNetworkReachability")))
	(require-all
		(xpc-service-name "com.apple.imdpersistence.IMDPersistenceAgent")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.imcore.imdpersistence.data-detection-access '")
			(entitlement-is-bool-true "b'com.apple.private.imcore.imdpersistence.database-access'")
			(entitlement-is-bool-true "b'com.apple.private.imcore.spi.database-access'")))
	(require-all
		(require-any (global-name "com.apple.ReportCrash")
(global-name "com.apple.ReportCrash.StackShot")
(global-name "com.apple.ReportCrash.SafetyNet")
(global-name "com.apple.ReportCrash.DirectoryService"))
		(process-attribute is-apple-signed-executable))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable))
	(require-all
		(global-name "com.apple.replayd")
		(require-not (process-attribute unknown)))
	(require-all
		(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.ids.remoteurlconnection'")
			(entitlement-is-bool-true "b'com.apple.private.imcore.imremoteurlconnection'")))
	(require-all
		(xpc-service-name "com.apple.StreamingUnzipService")
		(require-any (signing-identifier "com.apple.Home")
(signing-identifier "com.apple.Home.HomeControlService")))
	(require-all
		(global-name "com.apple.bulletinboard.utilitiesconnection")
		(entitlement-is-bool-true "b'com.apple.bulletinboard.utilities'"))
	(require-all
		(global-name "com.apple.lsd.xpc")
		(signing-identifier "com.apple.mobilesafari"))
	(require-all
		(global-name "com.apple.bulletinboard.systemstateconnection")
		(entitlement-is-bool-true "b'com.apple.bulletinboard.systemstate'"))
	(require-all
		(global-name "com.apple.safarifetcherd")
		(signing-identifier "com.apple.mobilesafari"))
	(require-all
		(global-name "com.apple.PowerManagement.control")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.bulletinboard.settingsconnection")
		(entitlement-is-bool-true "b'com.apple.bulletinboard.settings'"))
	(require-all
		(global-name "com.apple.iokit.powerdxpc")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.assistant.analytics")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.powerlog.plxpclogger.xpc")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.bulletinboard.observerconnection")
		(entitlement-is-bool-true "b'com.apple.bulletinboard.observer'"))
	(require-all
		(global-name "com.apple.nanomaps.xpc.Navigation")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.nanomaps.xpc.GeoServices.Navigation")
		(signing-identifier "com.apple.Maps"))
	(require-all
		(global-name "com.apple.mobile.keybagd.xpc")
		(signing-identifier "com.apple.WebContentFilter.remoteUI.WebContentAnalysisUI"))
	(require-all
		(local-name "com.apple.iphone.axserver")
		(entitlement-is-bool-true "b'com.apple.accessibility.api'"))
	(require-all
		(global-name "com.apple.icfcallserver")
		(entitlement-is-bool-true "b'com.apple.private.icfcallserver'"))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(require-any
			(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
			(signing-identifier "com.apple.iBooks")
			(signing-identifier "com.apple.stocks.watchkitextension")))
	(require-all
		(xpc-service-name "com.apple.ImageIOXPCService")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(global-name "com.apple.managedconfiguration.profiled")
		(entitlement-is-bool-true "b'com.apple.managedconfiguration.profiled-access'"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(global-name "com.apple.SharedWebCredentials")
			(xpc-service-name "com.apple.LORemoteUIPinService")
			(global-name "com.apple.dataaccess.dataaccessd")
			(global-name "com.apple.exchangesyncd")
			(xpc-service-name "com.apple.ctcategories.service")))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(global-name "com.apple.FileCoordination")
		(require-any
			(require-any (signing-identifier "com.apple.Health")
(signing-identifier "com.apple.PassbookUIService"))
			(signing-identifier "com.apple.iBooks")
			(signing-identifier "com.apple.stocks.watchkitextension")))
	(require-all
		(global-name "com.apple.SafetyKit")
		(entitlement-is-present "b'com.apple.developer.severe-vehicular-crash-event'"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(global-name "com.apple.mobile.keybagd.UserManager.xpc")
			(global-name "com.apple.mobile.keybagd.xpc")
			(global-name "com.apple.mobile.usermanagerd.xpc")
			(global-name "com.apple.aps.alertprovider.xpc")
			(global-name "com.apple.coreduetd")
			(global-name "com.apple.unfreed")
			(global-name "com.apple.lskdd")))
	(require-all
		(signing-identifier "com.apple.Bridge")
		(require-any
			(global-name "com.apple.powerlog.plxpclogger.xpc")
			(global-name "com.apple.iokit.powerdxpc")
			(global-name "com.apple.PowerManagement.control")))
	(require-all
		(global-name "com.apple.SystemConfiguration.PPPController-priv")
		(entitlement-is-present "b'com.apple.networking.vpn.configuration'"))
	(require-all
		(global-name "com.apple.weatherkit.authservice")
		(entitlement-is-present "b'com.apple.developer.weatherkit'"))
	(require-all
		(global-name "com.apple.marco")
		(signing-identifier "com.apple.Bridge"))
	(require-all
		(global-name "com.apple.merchantd.identity")
		(require-any
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.display'")
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.read'")))
	(require-all
		(global-name "com.apple.siri.vocabularyupdates")
		(require-any
			(entitlement-is-bool-true "b'com.apple.developer.siri'")
			(entitlement-is-bool-true "b'com.apple.siri.synapse'")))
	(require-all
		(global-name "com.apple.identityservicesd.embedded.auth")
		(signing-identifier "com.apple.Bridge"))
	(require-all
		(global-name "com.apple.familycircle.agent")
		(entitlement-is-bool-true "b'com.apple.private.familycircle'"))
	(require-all
		(global-name "com.apple.locationd.spi")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(global-name "com.apple.callkit.networkextension.voip")
		(entitlement-is-present "b'com.apple.developer.networking.networkextension'"))
	(require-all
		(global-name "com.apple.MomentsUIService")
		(entitlement-is-present "b'com.apple.developer.journal.allow'"))
	(require-all
		(global-name "com.apple.icloud.findmydeviced")
		(require-any
			(entitlement-is-bool-true "b'com.apple.icloud.findmydeviced.access'")
			(entitlement-is-bool-true "b'com.apple.aosnotification.aosnotifyd-access'")))
	(require-all
		(global-name "com.apple.locationd.registration")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(debug-mode)
		(require-any
			(global-name "com.apple.coremedia.videocodecd.decompressionsession")
			(global-name "com.apple.coremedia.videocodecd.compressionsession")
			(require-any (global-name "com.apple.EventTimingProfileService")
(global-name "com.apple.swiftuitracingsupport.xpc")
(global-name "com.apple.JetTracingSupport.JetTracingService"))))
	(require-all
		(global-name "com.apple.AOSNotification")
		(entitlement-is-bool-true "b'com.apple.aosnotification.aosnotifyd-access'"))
	(require-all
		(global-name "com.apple.mobilestoredemod")
		(entitlement-is-present "b'com.apple.private.mobilestoredemo.enabledemo'"))
	(require-all
		(global-name "com.apple.locationd.synchronous")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(global-name "com.apple.contactsd")
		(require-not (entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))
	(require-all
		(global-name "com.apple.gputools.service")
		(debug-mode))
	(require-all
		(global-name "com.apple.telephonyutilities.callservicesdaemon.ptt")
		(entitlement-is-bool-true "b'com.apple.developer.push-to-talk'"))
	(require-all
		(global-name "com.apple.seserviced.credential.manager")
		(entitlement-is-present "b'com.apple.developer.secure-element-credential'"))
	(require-all
		(global-name "com.apple.merchantd.transaction")
		(require-any
			(entitlement-is-bool-true "b'com.apple.developer.proximity-reader.payment.acceptance'")
			(entitlement-is-bool-true "b'com.apple.developer.proximity-reader.payment.acceptance-development'")))
	(require-all
		(global-name "com.apple.financed.service.coredatastore")
		(require-any
			(entitlement-is-present "b'com.apple.finance.private'")
			(entitlement-is-present "b'com.apple.developer.financekit'")))
	(require-all
		(global-name "com.apple.personad.xpc")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.persona.write'")
			(entitlement-is-bool-true "b'com.apple.private.persona.read'")
			(entitlement-is-bool-true "b'com.apple.private.contactsui'")))
	(require-all
		(global-name "com.apple.coreidvd.digital-presentment.xpc")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment.merchant-identifiers'")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment'"))
	(require-all
		(global-name "com.apple.assessmentagent")
		(entitlement-is-present "b'com.apple.developer.automatic-assessment-configuration'"))
	(require-all
		(global-name "com.apple.VideoSubscriberAccount.videosubscriptionsd")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.subscriptionservice.internal'")
			(entitlement-is-bool-true "b'com.apple.private.subscriptionservice.web-sources.read-write'")
			(entitlement-is-bool-true "b'com.apple.smoot.subscriptionservice'")
			(entitlement-is-bool-true "b'com.apple.developer.video-subscription-registration'")
			(entitlement-is-bool-true "b'com.apple.private.subscriptionservice.all-sources.read-only'")))
	(require-all
		(global-name "com.apple.ExposureNotification")
		(entitlement-is-bool-true "b'com.apple.developer.exposure-notification'"))
	(require-all
		(global-name "com.apple.cache_delete")
		(require-any
			(entitlement-is-bool-true "b'com.apple.mobile.deleted.AllowFreeSpace'")
			(entitlement-is-present "b'com.apple.private.CacheDelete'")))
	(require-all
		(global-name "com.apple.seserviced.session")
		(entitlement-is-bool-true "b'com.apple.developer.carkey.session'"))
	(require-all
		(global-name "com.apple.powerlog.plxpclogger.xpc")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(global-name "com.apple.marco")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(global-name "com.apple.iokit.powerdxpc")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(global-name "com.apple.PowerManagement.control")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(global-name "com.apple.identityservicesd.embedded.auth")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(global-name "com.apple.FileCoordination")
		(signing-identifier "com.apple.Music"))
	(require-all
		(global-name "com.apple.nanoprefsync")
		(signing-identifier "com.apple.Music"))
	(require-all
		(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
		(global-name "com.apple.uikit.viewservice."))
	(require-all
		(xpc-service-name-regex #".+")
		(require-any
			(global-name "com.apple.managedconfiguration.profiled.public")
			(global-name "com.apple.system.logger")
			(global-name "com.apple.mobilegestalt.xpc")
			(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
			(global-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.containermanagerd")
			(global-name "com.apple.containermanagerd.system")
			(local-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.diagnosticd")
			(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
			(global-name "com.apple.logd")
			(global-name "com.apple.logd.events")
			(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
			(global-name "com.apple.lsd.mapdb")
			(global-name "com.apple.lsd.open")
			(global-name "com.apple.distributed_notifications@1v3")
			(global-name "com.apple.analyticsd")
			(global-name "com.apple.ctkd.token-client")
			(global-name "com.apple.CoreAuthentication.daemon")
			(global-name "com.apple.runningboard")
			(global-name "com.apple.system.libinfo.muser")
			(global-name "com.apple.lsd.openurl")
			(global-name "com.apple.tccd")
			(global-name "com.apple.lsd.advertisingidentifiers")
			(global-name "com.apple.aggregated")
			(global-name "com.apple.duetknowledged.activity")
			(require-all
				(global-name "com.apple.coreduetd.people")
				(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
			(require-all
				(global-name "com.apple.osanalytics.osanalyticshelper")
				(process-attribute is-apple-signed-executable)))))
(allow mach-priv-host-port
	(extension "b'com.apple.security.exception.mach-register.local-name'")
	(extension "b'com.apple.security.exception.mach-register.global-name'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(extension "b'com.apple.sandbox.application-group'")
	(local-name "com.apple.iphone.axserver")
	(local-name "com.apple.assistant.contextprovider.")
	(local-name "com.apple.accessibility.gax.client")
	(require-all
		(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
		(signing-identifier "com.apple.Music"))
	(require-all
		(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
		(signing-identifier "com.apple.Music")))
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow necp-client-open
	(local ip "*:*")
	(entitlement-is-bool-true "b'com.apple.developer.networking.multicast'")
	(require-all
		(extension "b'com.apple.app-sandbox.read-write'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
				(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")))))
(allow network-inbound
	(control-name "com.apple.flow-divert")
	(require-all
		(extension "b'com.apple.app-sandbox.read-write'")
		(require-any
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.sandbox.container'")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal "/private/var/run/lockdown.sock"))
	(require-all
		(require-not (remote tcp "localhost:873"))
		(require-not (remote tcp "localhost:62078"))
		(require-not (remote tcp "localhost:22"))
		(require-not (remote tcp "localhost:23"))
		(require-any
			(control-name "com.apple.netsrc")
			(control-name "com.apple.network.statistics")
			(remote ip "*:*")
			(remote udp "*:443")
			(literal "/private/var/run/mDNSResponder")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(literal "/private/var/run/syslog")
			(require-all
				(extension "b'com.apple.app-sandbox.read-write'")
				(require-any
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
			(require-all
				(extension "b'com.apple.librarian.ubiquity-container'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(vnode-type SOCKET)
				(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))))
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow opendirectory-user-modify)
(allow process-fork
	(process-attribute is-apple-signed-executable)
	(entitlement-is-bool-true "b'com.apple.security.exception.process-info'")
	(require-all
		(target others)
		(entitlement-is-bool-true "b'com.apple.DiagnosticExtensions.extension'")))
(allow process-info-listpids
	(target self)
	(entitlement-is-bool-true "b'com.apple.security.exception.process-info'")
	(require-all
		(target others)
		(require-any
			(entitlement-is-bool-true "b'com.apple.DiagnosticExtensions.extension'")
			(signing-identifier "com.apple.webbookmarksd"))))
(allow process-legacy-codesigning-text-offset-get
	(target self)
	(require-all
		(target others)
		(require-any
			(entitlement-is-bool-true "b'com.apple.DiagnosticExtensions.extension'")
			(signing-identifier "com.apple.webbookmarksd"))))
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set)
(allow syscall*)
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "net.statistics")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname")
	(sysctl-name "kern.bootsessionuuid")
	(extension "b'com.apple.security.exception.sysctl.read-write'")
	(extension "b'com.apple.security.exception.sysctl.read-only'")
	(require-all
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2."))
		(require-any
			(entitlement-is-bool-true "b'com.apple.security.exception.process-info'")
			(sysctl-name "kern.proc.pid.1")
			(entitlement-is-bool-true "b'com.apple.DiagnosticExtensions.extension'")
			(require-all
				(sysctl-name "kern.proc.all")
				(signing-identifier "com.apple.webbookmarksd"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(sysctl-name "kern.proc.pid.")
					(sysctl-name "kern.argmax")
					(sysctl-name "kern.bootargs")
					(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot"))))))
	(require-all
		(sysctl-name "sysctl.proc_native")
		(require-any
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "hw.optional.")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.physmem")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cacheconfig")
(sysctl-name "hw.cachelinesize_compat"))
			(sysctl-name "kern.memorystatus_level")
			(require-any (sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.boottime")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.development")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "hw.usermem")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l3settings")
(sysctl-name "hw.l3cachesize_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l1dcachesize_compat"))
			(sysctl-name "hw.tbfrequency_compat")
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.ostype")
(sysctl-name "kern.osrelease"))
			(sysctl-name "hw.targettype")
			(require-any (sysctl-name "kern.ngroups")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs"))
			(sysctl-name "kern.bootsessionuuid")
			(sysctl-name "security.mac.lockdown_mode_state")
			(sysctl-name "kern.osversion")
			(require-any (sysctl-name "hw.activecpu")
(sysctl-name "hw.pagesize_compat"))
			(sysctl-name "hw.ncpu")
			(sysctl-name "kern.hostname")
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "hw.l2cachesize")
			(require-any (sysctl-name "hw.memsize")
(sysctl-name "hw.machine"))
			(require-any (sysctl-name "hw.cpufamily")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.nperflevels"))
			(sysctl-name "hw.target")
			(sysctl-name "hw.cachelinesize")
			(sysctl-name "hw.physicalcpu")
			(require-any (sysctl-name "kern.osvariant_status")
(sysctl-name "kern.osproductversion"))
			(require-any (sysctl-name "hw.perflevel")
(sysctl-name "kern.hv_vmm_present"))
			(sysctl-name "kern.secure_kernel")
			(sysctl-name "hw.product")
			(require-any (sysctl-name "kern.waketime")
(sysctl-name "machdep.ptrauth_enabled")
(sysctl-name "machdep.virtual_address_size")
(sysctl-name "security.mac.sandbox.sentinel"))
			(sysctl-name "vm.malloc_ranges")
			(sysctl-name "sysctl.name2oid")
			(require-any (sysctl-name "kern.hostid")
(sysctl-name "hw.tbfrequency"))
			(require-any (sysctl-name "kern.usrstack64")
(sysctl-name "hw.cpufrequency_max"))
			(sysctl-name "vm.loadavg")
			(sysctl-name "hw.vectorunit")
			(sysctl-name "kern.maxvnodes")
			(sysctl-name "kern.proc.pid.1")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(sysctl-name "kern.proc.pid.")
					(sysctl-name "kern.argmax")
					(sysctl-name "kern.bootargs")
					(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot")))))))
(allow system-automount)
(allow system-debug
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 93))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 31))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 72))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 24))
		(signing-identifier "com.apple.CloudDocs.FileProvider"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 2))
		(require-any
			(signing-identifier "com.apple.FileProvider.LocalStorage")
			(signing-identifier "com.apple.Music")))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 71))
		(signing-identifier "com.apple.Music"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 68))
		(signing-identifier "com.apple.Music"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 29))
		(signing-identifier "com.apple.camera.CameraMessagesApp"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 18))
		(signing-identifier "com.apple.camera.CameraMessagesApp"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 27))
		(signing-identifier "com.apple.camera.CameraMessagesApp"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "h" 28))
		(signing-identifier "com.apple.camera.CameraMessagesApp"))
	(require-all
		(fsctl-command-regex [UNSUPPORTED](_IO "J" 14))
		(signing-identifier "com.apple.DocumentsApp")))
(allow system-fcntl
	(require-all
		(info-type "net.link.addr")
		(entitlement-is-present "b'fairplay-client'")
		(require-not (entitlement-is-present "b'com.apple.private.MobileGestalt.AllowedProtectedKeys'"))))
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-necp-client-action
	(signing-identifier "com.apple.FileProvider.LocalStorage"))
(allow system-nfssvc)
(allow system-sched
	(socket-domain 39)
	(socket-domain AF_ROUTE)
	(signing-identifier "com.apple.TVSystemUIService"))
(allow system-swap
	(preference-domain "com.apple.dataaccess.dataaccessd")
	(preference-domain "com.apple.appleaccount")
	(require-any (preference-domain "mediaremote")
(preference-domain "itdbprepserver")
(preference-domain "com.apple.nike")
(preference-domain "com.apple.certui")
(preference-domain "com.apple.XCTest")
(preference-domain "com.apple.iqagent")
(preference-domain "com.apple.gamekit")
(preference-domain "com.apple.voicemail")
(preference-domain "com.apple.adtracking")
(preference-domain "com.apple.VoiceMemos")
(preference-domain "com.apple.preferences.network")
(preference-domain "com.apple.preferences.datetime")
(preference-domain "com.apple.messagesbadgecontroller")
(preference-domain "com.apple.managedconfiguration.janitor")
(preference-domain "com.apple.mobiletimer")
(preference-domain "com.apple.mobilestoresettings")
(preference-domain "com.apple.mobile.SyncMigrator")
(preference-domain "com.apple.mobileme.fmf.assistant"))
	(preference-domain "com.apple.aggregated")
	(preference-domain "com.apple.LaunchServices")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(preference-domain "com.apple.mobilecal.alarmengine")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.persistentconnection-mcc")
	(preference-domain "com.apple.mobilecal")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.AdLib")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.MapKit.internal")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.imdsmsrecordstore")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.apsd")
	(preference-domain "com.apple.logging")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.mms_override")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.itdbprep.server")
	(preference-domain "com.apple.mobilenotes")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.webinspectord")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.softwareupdateservicesd")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.camera")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.pairedsync")
	(require-any (preference-domain "com.apple.mobilevpn")
(preference-domain "com.apple.network.eapclient.tls.TrustExceptions"))
	(preference-domain "com.apple.preferences-sounds")
	(preference-domain "com.apple.compass")
	(preference-domain "com.apple.atc")
	(preference-domain "com.apple.TTY")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "com.apple.imagent")
	(preference-domain "com.apple.GMM")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.ubd")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.OTASyncState")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.gamed")
	(preference-domain "com.apple.avfoundation.videoperformancehud")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.Metal")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.VoiceOverTouch")
	(preference-domain "com.apple.MapKit.internal")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.WebUI")
	(require-any (preference-domain "com.apple.SwiftUI")
(preference-domain "com.apple.morphology")
(preference-domain "com.apple.LinearMediaKit")
(preference-domain "com.apple.Accessibility.speech"))
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mediaaccessibility")
	(preference-domain "com.apple.avkit")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.camera")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.DataDeliveryServices")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.InputModePreferences")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.indigo")
	(preference-domain "com.apple.lookup.shared")
	(preference-domain "com.apple.opengl")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.Wallet.public")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.PencilKit")
	(preference-domain "com.apple.voiceservices")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.keyboard.preferences")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.GameController")
	(preference-domain "com.apple.MobileAsset")
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-any
			(process-attribute is-apple-signed-executable)
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")
			(entitlement-is-bool-true "b'com.apple.itunesstored.private'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
	(require-all
		(preference-domain "com.apple.DataAccess.BehaviorOptions")
		(process-attribute is-apple-signed-executable))
	(require-all
		(preference-domain "com.apple.springboard")
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(entitlement-is-bool-true "b'com.apple.system.get-wallpaper'")
			(entitlement-is-bool-true "b'com.apple.system.set-alert-tone'")
			(entitlement-is-bool-true "b'com.apple.media.ringtones.read-only'")
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(preference-domain "com.apple.coreidv.public")
		(require-any
			(entitlement-is-bool-true "b'com.apple.developer.proximity-reader.identity.display'")
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.read'")))
	(require-all
		(preference-domain "com.apple.books")
		(require-any
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.demo-settings")
			(preference-domain "com.apple.security")
			(preference-domain "com.apple.morphology.internal")
			(preference-domain "com.apple.purplebuddy")
			(preference-domain "com.apple.Preferences")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
	(require-all
		(preference-domain "com.apple.ids")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
			(require-all
				(signing-identifier "com.apple.Bridge")
				(require-any
					(preference-domain "com.apple.ids")
					(preference-domain "com.apple.conference")
					(preference-domain "com.apple.logging")
					(preference-domain "com.apple.marco")))))
	(require-all
		(preference-domain "com.apple.groupactivities")
		(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
	(require-all
		(preference-domain "com.apple.conference")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))
			(require-all
				(signing-identifier "com.apple.Bridge")
				(require-any
					(preference-domain "com.apple.ids")
					(preference-domain "com.apple.conference")
					(preference-domain "com.apple.logging")
					(preference-domain "com.apple.marco")))))
	(require-all
		(preference-domain "com.apple.coremedia")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.marco")
		(require-any
			(signing-identifier "com.apple.shortcuts")
			(signing-identifier "com.apple.WorkflowKit.BackgroundShortcutRunner")
			(require-any (signing-identifier "com.apple.shortcuts.watch")
(signing-identifier "com.apple.WorkflowKit.ShortcutsIntents"))))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-any
			(signing-identifier "com.apple.iCloudDriveApp")
			(signing-identifier "com.apple.mobilemail")
			(preference-domain "com.apple.nanoprefsyncd")
			(require-all
				(signing-identifier "com.apple.Bridge")
				(require-any
					(preference-domain "com.apple.ids")
					(preference-domain "com.apple.conference")
					(preference-domain "com.apple.logging")
					(preference-domain "com.apple.marco")))))
	(require-all
		(preference-domain "com.apple.corevideo")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.medialibrary")
		(require-any
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(signing-identifier "com.apple.Bridge")
		(require-any
			(preference-domain "com.apple.logging")
			(preference-domain "com.apple.marco")))
	(require-all
		(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
		(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'"))
	(require-all
		(preference-domain "com.apple.homesharing")
		(require-any
			(signing-identifier "com.apple.mobilesafari")
			(signing-identifier "com.apple.itunesu")
			(signing-identifier "com.apple.iBooks")
			(entitlement-is-bool-true "b'com.apple.container2'")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(signing-identifier "com.apple.mobilesafari"))
	(require-all
		(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
		(require-any
			(signing-identifier "com.apple.mobilemail")
			(preference-domain "com.apple.nanoprefsyncd")
			(require-all
				(signing-identifier "com.apple.Bridge")
				(require-any
					(preference-domain "com.apple.ids")
					(preference-domain "com.apple.conference")
					(preference-domain "com.apple.logging")
					(preference-domain "com.apple.marco"))))))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'")
	(require-all
		(preference-domain "com.apple.ist.AppleConnect")
		(signing-identifier "com.apple.ist.AppleConnect.extension")))
(allow user-preference-read
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(require-all
		(signing-identifier "com.apple.mobilesafari")
		(require-any
			(preference-domain "com.apple.mobileipod")
			(preference-domain "com.apple.itunesstored")))
	(require-all
		(signing-identifier "com.apple.iBooks")
		(require-any
			(preference-domain "com.apple.mobileipod")
			(preference-domain "com.apple.itunesstored")))
	(require-all
		(signing-identifier "com.apple.itunesu")
		(require-any
			(preference-domain "com.apple.mobileipod")
			(preference-domain "com.apple.itunesstored")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.container2'")
		(require-any
			(preference-domain "com.apple.mobileipod")
			(preference-domain "com.apple.itunesstored")))
	(require-all
		(preference-domain "com.apple.springboard")
		(entitlement-is-bool-true "b'com.apple.system.set-alert-tone'"))
	(require-all
		(preference-domain "com.apple.cloud.quota")
		(require-any
			(signing-identifier "com.apple.iCloudDriveApp")
			(signing-identifier "com.apple.mobilemail")))
	(require-all
		(preference-domain "com.apple.youtube.dp")
		(signing-identifier "com.apple.mobilesafari"))
	(require-all
		(require-any (preference-domain "com.apple.OTASyncAgent")
(preference-domain "com.apple.mail.composition")
(preference-domain "com.apple.MailAccount-ExtProperties"))
		(signing-identifier "com.apple.mobilemail"))
	(require-all
		(preference-domain "com.apple.OTASyncState")
		(signing-identifier "com.apple.mobilemail")))
(allow user-preference-write)
