(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
	(extension-class "com.apple.mediaserverd.read")
	(extension-class "com.apple.mediaserverd.read-write")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.aned.read-only")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(require-any
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
					(require-all
						(extension "b'com.apple.sandbox.executable'")
						(extension-class "com.apple.nsurlsessiond.readonly"))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(extension "b'com.apple.sandbox.container'")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.sandbox.container'")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.sandbox.container'")
					(extension-class "com.apple.mediaserverd.read")
					(extension-class "com.apple.mediaserverd.read-write")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension "b'com.apple.fileprovider.read-write'")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library"))))))
(allow file-ioctl)
(allow file-issue-extension)
(allow file-link
	(subpath "/usr/lib")
	(literal "/AppleInternal/Library/Frameworks/CoreAutomation")
	(subpath "/Developer")
	(subpath "/System/Cryptexes")
	(subpath "/private/preboot/Cryptexes")
	(subpath "/System/Library")
	(subpath "/System/Developer")
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(literal))
	(require-all
		(debug-mode)
		(require-any
			(subpath "/usr/local")
			(subpath "/AppleInternal")
			(subpath "/usr/appleinternal")
			(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")))
	(require-all
		(debug-mode)
		(require-any
			(subpath "/AppleInternal")
			(subpath "/usr/local/lib")))
	(require-all
		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
	(require-all
		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-mount
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
			(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/vision"))
			(literal "/usr/sbin")
			(subpath "/private/var/containers/Bundle")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
			(require-any (subpath "/AppleInternal/Library/LocationBundles")
(literal "/private/var/Managed Preferences/mobile/com.apple.locationd.plist")
(subpath "/private/var/MobileAsset/AssetsV2/com_apple_MobileAsset_MobileAccessoryUpdate_DurianFirmware"))
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_debug/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
			(subpath "/Developer/Applications")
			(literal "/private/var/preferences/com.apple.security.plist")
			(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
			(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
			(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
			(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
			(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
			(literal "/AppleInternal/Library/Frameworks/CoreAutomation")
			(subpath "/Applications")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
				(process-attribute is-apple-signed-executable))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
			(require-all
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(literal "/dev/null")
					(literal "/dev/aes_0")
					(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
					(literal "/dev/urandom")
					(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
					(subpath "/private/var/db/datadetectors/sys")
					(literal "/dev/dtracehelper")
					(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
					(literal "/dev/zero")
					(literal "/dev/random")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
					(subpath "/private/var/containers/Data/System/com.apple.geod")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")))
					(require-all
						(uid 0)
						(literal "/private/etc/master.passwd"))
					(require-all
						(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
						(require-any
							(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
							(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.security.system-container'")
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Data/System/")
								(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
					(require-all
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(extension "b'com.apple.sandbox.system-group'")
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(entitlement-is-present "b'com.apple.security.system-group-containers'"))
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
							(require-all
								(entitlement-is-present "b'com.apple.security.system-group-containers'")
								(require-any
									(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Shared/SystemGroup/")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
						(extension "b'com.apple.logd.read-only'")
						(require-any
							(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
							(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE)
						(require-any
							(literal "/private")
							(subpath "/Developer")
							(subpath "/private/var/preferences/Logging")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(subpath "/System/Library/PrivateFrameworks")
							(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
							(literal "/private/etc/passwd")
							(subpath "/usr/lib")
							(subpath "/private/var/db/timezone")
							(subpath "/Library/RegionFeatures")
							(literal "/System")
							(literal "/private/etc/services")
							(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
							(subpath "/System/Library/Frameworks")
							(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
							(subpath "/System/Cryptexes")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/private/etc/hosts")
							(subpath "/private/preboot/Cryptexes")
							(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
							(literal "/")
							(subpath "/usr/share")
							(literal "/private/etc/fstab")
							(literal "/private/preboot")
							(subpath "/System/Library")
							(subpath "/System/Developer")
							(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(subpath "/usr/libexec")
									(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
									(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
									(require-all
										(subpath "/usr/local/libexec")
										(debug-mode))))
							(require-all
								(debug-mode)
								(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
							(require-all
								(subpath "/usr/local")
								(require-any
									(debug-mode)
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))))
							(require-all
								(subpath "/AppleInternal")
								(require-any
									(debug-mode)
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
									(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
							(require-all
								(subpath "/usr/appleinternal")
								(require-any
									(debug-mode)
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))))
							(require-all
								(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
								(subpath "/private/var/OOPJit")
								(extension "b'com.apple.sandbox.oopjit'"))))))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
						(subpath-prefix "${FRONT_USER_HOME}")))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read*
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/HTTPStorages")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
	(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
	(literal-prefix "${HOME}/Library/PPTDevice")
	(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Caches")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(literal "/private/var/root/Library/Caches")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sandbox.container'")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(vnode-type DIRECTORY)
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-any
					(process-attribute is-apple-signed-executable)
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
					(literal "/private/var/")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")))
			(require-all
				(literal "/private/var/")
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(literal "/private/var/"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
		(require-any
			(process-attribute is-apple-signed-executable)
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${FRONT_USER_HOME}")
		(require-any
			(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(require-any
					(process-attribute is-apple-signed-executable)
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences"))))
(allow file-read-data
	(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter"))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Logs/raven")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/vision"))
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter")
	(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
	(extension "b'com.apple.app-sandbox.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
	(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/"))
			(require-all
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(debug-mode)
		(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
			(extension "b'com.apple.sandbox.container'")
			(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
			(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
			(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
			(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
			(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
			(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-any
					(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
					(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
					(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
					(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))
(allow file-write*
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(require-any
					(process-attribute is-apple-signed-executable)
					(literal "/private/var/root/Library/Caches")))
			(require-all
				(literal "/private/var/")
				(require-any
					(literal "/private/var/root/Library/Caches")
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}"))))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
			(literal-prefix "${HOME}/Library/HTTPStorages")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync")
			(literal-prefix "${HOME}/Library/Caches")
			(literal-prefix "${FRONT_USER_HOME}/Library/Caches")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$")
				(subpath-prefix "${FRONT_USER_HOME}")))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-finderinfo
	(require-all
		(literal "/private/var/")
		(require-any
			(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
			(extension "b'com.apple.app-sandbox.read-write'")
			(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
			(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
			(require-all
				(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
				(require-any
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
					(extension "b'com.apple.sandbox.container'")
					(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
					(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
					(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
					(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
					(require-all
						(vnode-type DIRECTORY)
						(require-any
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
							(require-all
								(vnode-type REGULAR-FILE)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
							(require-all
								(vnode-type DIRECTORY)
								(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.security.system-container'")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(require-all
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
					(require-all
						(vnode-type BLOCK-DEVICE)
						(vnode-type CHARACTER-DEVICE))
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
							(require-all
								(entitlement-is-present "b'com.apple.security.system-group-containers'")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))))
(allow file-write-setugid
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(literal "/private/var/containers/Shared/SystemGroup/")
				(require-any
					(require-any (literal "/private/var/db/gpsd")
(subpath "/private/var/root/Library/Caches/locationd")
(literal "/private/var/root/Library/Caches/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.locationd.")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/vision")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/pipelined")
(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/raven"))
					(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PayloadManifest.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PayloadManifest.plist"))
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PayloadManifest.plist")
					(extension "b'com.apple.app-sandbox.read-write'")
					(subpath-prefix "${FRONT_USER_HOME}/Library/locationd")
					(literal "/private/var/Managed Preferences/mobile/com.apple.springboard.plist")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(require-all
						(extension "b'com.apple.sandbox.system-group'")
						(require-any
							(require-all
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(entitlement-is-present "b'com.apple.security.system-group-containers'")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync$"))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CoreLocation/"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]locationd[.]StatusBarIconManager")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(debug-mode)
						(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/locationd"))
					(require-all
						(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
						(require-any
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-shm")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-wal")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/statistics.db-journal"))
							(extension "b'com.apple.sandbox.container'")
							(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
							(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/DiagnosticLogs/CompanionSync/TransportLogs")
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.pipelined"))
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Logs/CompanionSync/TransportLogs")
							(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.locationd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.locationd"))
							(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/locationd")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.locationd"))
							(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
							(require-any (subpath "/private/var/tmp/com.apple.locationd")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.locationd"))
							(require-all
								(vnode-type REGULAR-FILE)
								(require-any
									(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
							(require-all
								(vnode-type DIRECTORY)
								(require-any
									(require-any (subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.locationd")
(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.pipelined"))
									(require-all
										(vnode-type REGULAR-FILE)
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))
									(require-all
										(vnode-type DIRECTORY)
										(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/locationd"))))
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Library/Logs/CrashReporter/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]com.apple.locationd" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]com.apple.locationd" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])com.apple.locationd")
									(regex #"^/private/var/mobile/Library/Logs/CrashReporter/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]VehicleConnection" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]VehicleConnection" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])VehicleConnection")
									(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/[.]CMActivityLog" #"^/private/var/mobile/Library/Logs/CrashReporter/Retired/[.]CMActivityLog" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/(((Retired/)?|[.])|Retired/[.])CMActivityLog")
									(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/nms[.]com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/CompanionSync/(nms[.])?com[.]apple[.]private[.]alloy[.]location[.]")))
							(require-all
								(entitlement-is-bool-true "b'com.apple.security.system-container'")
								(require-any
									(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
									(require-all
										(extension "b'com.apple.sandbox.system-container'")
										(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
										(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present "b'com.apple.security.system-groups'")
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
									(require-all
										(entitlement-is-present "b'com.apple.security.system-group-containers'")
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow iokit-issue-extension
	(iokit-user-client-class "AppleSPUHIDDeviceUserClient")
	(iokit-user-client-class "AppleOscarCMAUserClient")
	(iokit-user-client-class "AppleBasebandPCIUserClient")
	(iokit-user-client-class "AppleSPUHIDDriverUserClient")
	(iokit-user-client-class "AppleSMCClient")
	(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "IOHIDLibUserClient")
	(require-any (iokit-user-client-class "IOTimeSyncUserClient")
(iokit-user-client-class "IOTimeSyncClockManagerUserClient"))
	(iokit-user-client-class "AppleBasebandUserClient")
	(iokit-user-client-class "IOTimeSyncUserFilteredServiceUserClient")
	(iokit-user-client-class "RootDomainUserClient")
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient")))
(allow iokit-open*)
(allow iokit-open-user-client
	(require-all
		(iokit-property "interval")
		(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")))
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(global-name "com.apple.WirelessCoexManager")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.accessories.transport-server")
	(global-name "com.apple.icloud.searchpartyd.ownersession")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.routined.registration")
	(xpc-service-name "com.apple.externalaccessory.WACEAService")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.icloud.searchpartyd.beaconmanager")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.GSSCred")
	(require-any (global-name "com.apple.gpsd")
(global-name "com.apple.pipelined")
(global-name "com.apple.pipelined.maintenance")
(global-name "com.apple.proactive.hero.AppPrediction.predictions")
(global-name "com.apple.icloud.searchpartyd.scheduler")
(global-name "com.apple.icloud.searchpartyd.finderstatemanager")
(global-name "com.apple.icloud.searchpartyd.advertisementcache"))
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.icloud.searchpartyd.pairingmanager")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.apsd")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(global-name "com.apple.accessoryupdater.uarp")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.wirelessproxd")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.appleneuralengine")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.backlightd")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.timed.xpc")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.ckdiscretionaryd")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.locationd.registration")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.appconduitd.device-connection")
	(global-name "com.apple.accessories.externalaccessory-server")
	(require-any (global-name "com.apple.countryd.update")
(global-name "com.apple.network.IPConfiguration"))
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.mobileactivationd")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(require-any (global-name "com.apple.commcenter.atcs.xpc")
(global-name "com.apple.commcenter.ari.rt.xpc"))
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.backboard.hid.services")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.cache_delete")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callstatecontroller")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.awdd")
	(global-name "com.apple.callkit.callcontrollerhost")
	(global-name "com.apple.carkit.dnd.service")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.healthd.server")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.accessories.connection-info-server")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.corefollowup.agent")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.passd.usage")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.navigationListener")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(xpc-service-name "com.apple.extensionkitservice")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(extension "b'com.apple.security.exception.mach-lookup.global-name'")
	(extension "b'com.apple.security.exception.mach-lookup.local-name'")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.mobilegestalt.xpc")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.logd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.ckdiscretionaryd.debug")
	(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
	(global-name "com.apple.cloudkit.partlycloudd")
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-task*)
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow necp-client-open)
(allow network*)
(allow network-inbound)
(allow nvram*)
(allow opendirectory-user-modify)
(allow process-fork)
(allow process-info-listpids)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set)
(allow syscall*)
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "hw.targettype")
	(sysctl-name "kern.wake_abs_time")
	(sysctl-name "kern.wakereason")
	(extension "b'com.apple.security.exception.sysctl.read-write'")
	(extension "b'com.apple.security.exception.sysctl.read-only'")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname")
	(sysctl-name "net.statistics")
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.exception.process-info'")
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2.")))
	(require-all
		(sysctl-name "sysctl.proc_native")
		(require-any
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "hw.optional.")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.physmem")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cacheconfig")
(sysctl-name "hw.cachelinesize_compat"))
			(require-any (sysctl-name "kern.hostid")
(sysctl-name "hw.tbfrequency"))
			(require-any (sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.boottime")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.development")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "hw.usermem")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l3settings")
(sysctl-name "hw.l3cachesize_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l1dcachesize_compat"))
			(require-any (sysctl-name "hw.memsize")
(sysctl-name "hw.machine"))
			(sysctl-name "hw.targettype")
			(sysctl-name "kern.maxvnodes")
			(sysctl-name "hw.tbfrequency_compat")
			(sysctl-name "hw.l2cachesize")
			(require-any (sysctl-name "hw.activecpu")
(sysctl-name "hw.pagesize_compat"))
			(require-any (sysctl-name "hw.perflevel")
(sysctl-name "kern.hv_vmm_present"))
			(sysctl-name "kern.hostname")
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "hw.product")
			(sysctl-name "hw.ncpu")
			(require-any (sysctl-name "hw.cpufamily")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.nperflevels"))
			(sysctl-name "hw.target")
			(sysctl-name "hw.cachelinesize")
			(sysctl-name "hw.physicalcpu")
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.ostype")
(sysctl-name "kern.osrelease"))
			(require-any (sysctl-name "kern.ngroups")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs"))
			(require-any (sysctl-name "kern.waketime")
(sysctl-name "machdep.ptrauth_enabled")
(sysctl-name "machdep.virtual_address_size")
(sysctl-name "security.mac.sandbox.sentinel"))
			(sysctl-name "sysctl.name2oid")
			(require-any (sysctl-name "kern.usrstack64")
(sysctl-name "hw.cpufrequency_max"))
			(require-any (sysctl-name "kern.osvariant_status")
(sysctl-name "kern.osproductversion"))
			(sysctl-name "kern.bootsessionuuid")
			(sysctl-name "hw.vectorunit")
			(sysctl-name "vm.malloc_ranges")
			(sysctl-name "kern.secure_kernel")
			(sysctl-name "security.mac.lockdown_mode_state")
			(sysctl-name "kern.memorystatus_level")
			(sysctl-name "kern.osversion")
			(sysctl-name "vm.loadavg")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(sysctl-name "kern.proc.pid.")
					(sysctl-name "kern.argmax")
					(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot"))
					(sysctl-name "kern.bootargs"))))))
(allow system-automount)
(allow system-debug
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 14)))
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
(allow system-swap
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.locationd.notbackedup")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.operator")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.SOS")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.spotlightui")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.imessage.bag")
	(require-any (preference-domain "com.apple.pipelined.framework")
(preference-domain "com.apple.locationd.legacy-logging-dummy-settings"))
	(preference-domain "com.apple.CrashReporter")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.nanolifestyle")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.healthd")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.pairedsyncd")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.companionsync")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.corevideo")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.da")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.security")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-read
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.locationd.notbackedup")
	(preference-domain "com.apple.SOS")
	(preference-domain "com.apple.imessage.bag"))
(allow user-preference-write)
