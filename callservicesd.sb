(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-clone
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/CallServices/Ringtones")
					(subpath "/System/Library")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")
					(require-all
						(subpath-prefix "${HOME}/Media")
						(extension "b'com.apple.avasset.read-only'")
						(extension "b'com.apple.tcc.kTCCServicePhotos'"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/CallServices/Greetings")
					(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/CallServices/Greetings")
					(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/CallServices/Greetings")
					(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/CallServices/Greetings")
					(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(extension-class "com.apple.identityservices.send")
				(require-any
					(subpath-prefix "${PROCESS_TEMP_DIR}")
					(subpath "/private/var/tmp")))
			(require-all
				(entitlement-is-bool-true 124)
				(require-any
					(entitlement-is-bool-true 129)
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present 233)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))
(allow file-ioctl
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities")))
	(require-all
		(require-not (subpath-prefix "${HOME}/Media"))
		(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))))
(allow file-issue-extension)
(allow file-mount
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(subpath "/System/Library")
			(subpath "/usr/share")
			(subpath-prefix "${HOME}/Media/Purchases")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
			(require-any (subpath-prefix "${HOME}/Library/Voicemail")
(subpath-prefix "${HOME}/Library/CallDirectory")
(subpath-prefix "${HOME}/Library/CallServices")
(literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist"))
			(require-any (subpath-prefix "${HOME}/Library/Ringtones")
(subpath-prefix "${HOME}/Library/IdentityServices/files"))
			(subpath "/private/var/containers/Bundle")
			(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
			(subpath "/Developer/Applications")
			(subpath "/usr/lib")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
			(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
			(subpath-prefix "${HOME}/Library/CallHistoryDB")
			(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
			(subpath "/private/var/wireless/Library/Images")
			(subpath "/private/var/personalized_debug/Applications")
			(subpath "/Applications")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
						(subpath-prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(subpath-prefix "${HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
						(subpath-prefix "${FRONT_USER_HOME}"))
					(require-all
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
					(require-any (literal-prefix "${HOME}/Media/PhotoData")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal"))
					(require-any (literal-prefix "${HOME}/Library/com.apple.itunesstored")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal"))
					(subpath "/private/var/containers/Data/System/com.apple.geod")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
							(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
							(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
					(require-all
						(subpath-prefix "${HOME}/Media")
						(require-any
							(require-all
								(extension "b'com.apple.tcc.kTCCServicePhotos'")
								(require-any
									(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
									(subpath-prefix "${HOME}/Media/PhotoStreamsData")
									(subpath-prefix "${HOME}/Media/DCIM")
									(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
									(extension "b'com.apple.avasset.read-only'")
									(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
									(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
									(require-all
										(process-attribute is-platform-binary)
										(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
							(require-all
								(require-not (literal "/usr/sbin/fairplayd"))
								(require-any
									(literal "/dev/null")
									(literal "/dev/aes_0")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
									(literal "/dev/urandom")
									(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
									(subpath "/private/var/db/datadetectors/sys")
									(literal "/dev/dtracehelper")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
									(literal "/dev/zero")
									(literal "/dev/random")
									(entitlement-is-bool-true 129)
									(literal "/private/var/preferences/com.apple.networkd.plist")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal "/private")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
									(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
									(literal "/private/var/preferences/com.apple.security.plist")
									(literal "/private/var/db/com.apple.networkextension.tracker-info")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/System")
									(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
									(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
									(subpath "/private/preboot/Cryptexes")
									(literal "/")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
									(literal "/private/preboot")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
									(entitlement-is-bool-true 129)
									(require-all
										(entitlement-is-bool-true 3206)
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
										(process-attribute is-apple-signed-executable))
									(require-all
										(entitlement-is-present 1555)
										(literal "/private/var/preferences/com.apple.networkextension.plist"))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
										(extension "b'com.apple.identityservices.deliver'"))
									(require-all
										(extension "b'com.apple.assets.read'")
										(require-any
											(subpath "/private/var/MobileAsset")
											(subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(entitlement-is-bool-true 408)
										(require-any
											(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
											(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
									(require-all
										(uid 0)
										(literal "/private/etc/master.passwd"))
									(require-all
										(entitlement-is-bool-true 124)
										(extension "b'com.apple.sandbox.system-container'")
										(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Data/System/")
												(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
									(require-all
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(extension "b'com.apple.sandbox.system-group'")
										(entitlement-is-present 190)
										(entitlement-is-present 233))
									(require-all
										(extension "b'com.apple.sandbox.system-group'")
										(require-any
											(require-all
												(entitlement-is-present 190)
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
											(require-all
												(entitlement-is-present 233)
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
									(require-all
										(entitlement-is-bool-true 511)
										(extension "b'com.apple.logd.read-only'")
										(require-any
											(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
											(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
									(require-all
										(vnode-type BLOCK-DEVICE)
										(vnode-type CHARACTER-DEVICE)
										(require-any
											(literal "/private")
											(subpath "/Developer")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Library/PrivateFrameworks")
											(literal "/private/etc/passwd")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
											(literal "/private/etc/services")
											(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
											(subpath "/System/Library/Frameworks")
											(literal "/System")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/private/etc/hosts")
											(subpath "/private/preboot/Cryptexes")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
											(literal "/")
											(literal "/private/etc/fstab")
											(literal "/private/preboot")
											(subpath "/System/Developer")
											(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
													(subpath "/usr/libexec")
													(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
													(require-all
														(subpath "/usr/local/libexec")
														(debug-mode))))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/usr/local")
													(subpath "/AppleInternal")
													(subpath "/usr/appleinternal")))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/AppleInternal")
													(subpath "/usr/local/lib")))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
												(require-any
													(entitlement-is-bool-true 290)
													(entitlement-is-bool-true 297)))
											(require-all
												(entitlement-is-present 305)
												(subpath "/private/var/OOPJit")
												(extension "b'com.apple.sandbox.oopjit'"))))))))
					(require-all
						(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
						(require-not (literal "/usr/sbin/fairplayd"))
						(require-any
							(literal "/dev/null")
							(literal "/dev/aes_0")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(literal "/dev/urandom")
							(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
							(subpath "/private/var/db/datadetectors/sys")
							(literal "/dev/dtracehelper")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
							(literal "/dev/zero")
							(literal "/dev/random")
							(entitlement-is-bool-true 129)
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(subpath-prefix "${HOME}/Library/Fonts")
							(literal "/private")
							(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
							(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(subpath "/System/Cryptexes")
							(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
							(literal "/System")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
							(subpath "/private/preboot/Cryptexes")
							(literal "/")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/preboot")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
							(entitlement-is-bool-true 129)
							(require-all
								(entitlement-is-bool-true 3206)
								(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
								(require-any
									(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
									(subpath-prefix "${HOME}/Library/AddressBook")
									(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
								(process-attribute is-apple-signed-executable))
							(require-all
								(entitlement-is-present 1555)
								(literal "/private/var/preferences/com.apple.networkextension.plist"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
								(extension "b'com.apple.identityservices.deliver'"))
							(require-all
								(extension "b'com.apple.assets.read'")
								(require-any
									(subpath "/private/var/MobileAsset")
									(subpath-prefix "${HOME}/Library/Assets")))
							(require-all
								(entitlement-is-bool-true 408)
								(require-any
									(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
									(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
							(require-all
								(uid 0)
								(literal "/private/etc/master.passwd"))
							(require-all
								(entitlement-is-bool-true 124)
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(require-any
									(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Data/System/")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(extension "b'com.apple.sandbox.system-group'")
								(entitlement-is-present 190)
								(entitlement-is-present 233))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present 190)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
									(require-all
										(entitlement-is-present 233)
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
							(require-all
								(entitlement-is-bool-true 511)
								(extension "b'com.apple.logd.read-only'")
								(require-any
									(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
									(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(literal "/private")
									(subpath "/Developer")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Library/PrivateFrameworks")
									(literal "/private/etc/passwd")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
									(literal "/private/etc/services")
									(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
									(subpath "/System/Library/Frameworks")
									(literal "/System")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/private/etc/hosts")
									(subpath "/private/preboot/Cryptexes")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
									(literal "/")
									(literal "/private/etc/fstab")
									(literal "/private/preboot")
									(subpath "/System/Developer")
									(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
											(subpath "/usr/libexec")
											(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
											(require-all
												(subpath "/usr/local/libexec")
												(debug-mode))))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/usr/local")
											(subpath "/AppleInternal")
											(subpath "/usr/appleinternal")))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
										(require-any
											(entitlement-is-bool-true 290)
											(entitlement-is-bool-true 297)))
									(require-all
										(entitlement-is-present 305)
										(subpath "/private/var/OOPJit")
										(extension "b'com.apple.sandbox.oopjit'")))))))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read*
	(vnode-type SYMLINK)
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(literal-prefix "${HOME}")
	(subpath-prefix "${HOME}/Library/CallServices/Greetings")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal "/private/var/run/syslog")
	(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
	(entitlement-is-bool-true 129)
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(vnode-type DIRECTORY)
	(require-all
		(entitlement-is-bool-true 124)
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-container'"))
	(require-all
		(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(entitlement-is-present 190)
			(entitlement-is-present 233)))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(vnode-type DIRECTORY)
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences")
			(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
			(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
			(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
			(extension "b'com.apple.sharing.airdrop.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
			(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.sandbox.executable'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$"))
			(require-all
				(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
				(literal "/usr/standalone/firmware/apticket.der")
				(require-any
					(subpath "/System/Library")
					(subpath "/usr/share")
					(subpath-prefix "${HOME}/Media/Purchases")
					(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
					(require-any (subpath-prefix "${HOME}/Library/Voicemail")
(subpath-prefix "${HOME}/Library/CallDirectory")
(subpath-prefix "${HOME}/Library/CallServices")
(literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist"))
					(require-any (subpath-prefix "${HOME}/Library/Ringtones")
(subpath-prefix "${HOME}/Library/IdentityServices/files"))
					(subpath "/private/var/containers/Bundle")
					(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
					(subpath "/Developer/Applications")
					(subpath "/usr/lib")
					(subpath "/private/var/db/timezone")
					(subpath "/Library/RegionFeatures")
					(subpath-prefix "${FRONT_USER_HOME}/Containers/Bundle")
					(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
					(subpath-prefix "${HOME}/Library/CallHistoryDB")
					(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
					(subpath "/private/var/wireless/Library/Images")
					(subpath "/private/var/personalized_debug/Applications")
					(subpath "/Applications")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$")
								(subpath-prefix "${HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
								(subpath-prefix "${HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
						(require-any
							(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
							(require-any (literal-prefix "${HOME}/Media/PhotoData")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-shm")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-wal")
(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite-journal"))
							(require-any (literal-prefix "${HOME}/Library/com.apple.itunesstored")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-wal")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-shm")
(literal-prefix "${HOME}/Library/com.apple.itunesstored/kvs.sqlitedb-journal"))
							(subpath "/private/var/containers/Data/System/com.apple.geod")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
							(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/")
									(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
									(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-any
									(require-all
										(extension "b'com.apple.tcc.kTCCServicePhotos'")
										(require-any
											(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
											(subpath-prefix "${HOME}/Media/PhotoStreamsData")
											(subpath-prefix "${HOME}/Media/DCIM")
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
											(extension "b'com.apple.avasset.read-only'")
											(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
											(require-all
												(process-attribute is-platform-binary)
												(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
									(require-all
										(literal "/usr/sbin/fairplayd")
										(require-any
											(literal "/dev/null")
											(literal "/dev/aes_0")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
											(literal "/dev/urandom")
											(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
											(subpath "/private/var/db/datadetectors/sys")
											(literal "/dev/dtracehelper")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
											(literal "/dev/zero")
											(literal "/dev/random")
											(entitlement-is-bool-true 129)
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(subpath-prefix "${HOME}/Library/Fonts")
											(literal "/private")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
											(subpath "/private/preboot/Cryptexes")
											(literal "/")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
											(literal "/private/preboot")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
											(entitlement-is-bool-true 129)
											(require-all
												(entitlement-is-bool-true 3206)
												(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
												(require-any
													(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
													(subpath-prefix "${HOME}/Library/AddressBook")
													(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
											(require-all
												(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
												(process-attribute is-apple-signed-executable))
											(require-all
												(entitlement-is-present 1555)
												(literal "/private/var/preferences/com.apple.networkextension.plist"))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
												(extension "b'com.apple.identityservices.deliver'"))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(entitlement-is-bool-true 408)
												(require-any
													(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
													(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
											(require-all
												(uid 0)
												(literal "/private/etc/master.passwd"))
											(require-all
												(entitlement-is-bool-true 124)
												(extension "b'com.apple.sandbox.system-container'")
												(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
												(require-any
													(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Data/System/")
														(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
											(require-all
												(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
												(extension "b'com.apple.sandbox.system-group'")
												(entitlement-is-present 190)
												(entitlement-is-present 233))
											(require-all
												(extension "b'com.apple.sandbox.system-group'")
												(require-any
													(require-all
														(entitlement-is-present 190)
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
													(require-all
														(entitlement-is-present 233)
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
											(require-all
												(entitlement-is-bool-true 511)
												(extension "b'com.apple.logd.read-only'")
												(require-any
													(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
													(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
											(require-all
												(vnode-type BLOCK-DEVICE)
												(vnode-type CHARACTER-DEVICE)
												(require-any
													(literal "/private")
													(subpath "/Developer")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Library/PrivateFrameworks")
													(literal "/private/etc/passwd")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
													(literal "/private/etc/services")
													(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
													(subpath "/System/Library/Frameworks")
													(literal "/System")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/private/etc/hosts")
													(subpath "/private/preboot/Cryptexes")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
													(literal "/")
													(literal "/private/etc/fstab")
													(literal "/private/preboot")
													(subpath "/System/Developer")
													(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-any
															(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
															(subpath "/usr/libexec")
															(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
															(require-all
																(subpath "/usr/local/libexec")
																(debug-mode))))
													(require-all
														(debug-mode)
														(require-any
															(subpath "/usr/local")
															(subpath "/AppleInternal")
															(subpath "/usr/appleinternal")))
													(require-all
														(debug-mode)
														(require-any
															(subpath "/AppleInternal")
															(subpath "/usr/local/lib")))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
														(require-any
															(entitlement-is-bool-true 290)
															(entitlement-is-bool-true 297)))
													(require-all
														(entitlement-is-present 305)
														(subpath "/private/var/OOPJit")
														(extension "b'com.apple.sandbox.oopjit'"))))))))
							(require-all
								(subpath-prefix "${HOME}/Library/FairPlay")
								(literal "/usr/sbin/fairplayd")
								(require-any
									(literal "/dev/null")
									(literal "/dev/aes_0")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
									(literal "/dev/urandom")
									(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
									(subpath "/private/var/db/datadetectors/sys")
									(literal "/dev/dtracehelper")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
									(literal "/dev/zero")
									(literal "/dev/random")
									(entitlement-is-bool-true 129)
									(literal "/private/var/preferences/com.apple.networkd.plist")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal "/private")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/EffectiveUserSettings.plist")
									(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
									(literal "/private/var/preferences/com.apple.security.plist")
									(literal "/private/var/db/com.apple.networkextension.tracker-info")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/System")
									(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
									(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
									(subpath "/private/preboot/Cryptexes")
									(literal "/")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
									(literal "/private/preboot")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/EffectiveUserSettings.plist")
									(entitlement-is-bool-true 129)
									(require-all
										(entitlement-is-bool-true 3206)
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
										(process-attribute is-apple-signed-executable))
									(require-all
										(entitlement-is-present 1555)
										(literal "/private/var/preferences/com.apple.networkextension.plist"))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
										(extension "b'com.apple.identityservices.deliver'"))
									(require-all
										(extension "b'com.apple.assets.read'")
										(require-any
											(subpath "/private/var/MobileAsset")
											(subpath-prefix "${HOME}/Library/Assets")))
									(require-all
										(entitlement-is-bool-true 408)
										(require-any
											(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
											(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
									(require-all
										(uid 0)
										(literal "/private/etc/master.passwd"))
									(require-all
										(entitlement-is-bool-true 124)
										(extension "b'com.apple.sandbox.system-container'")
										(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Data/System/")
												(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
									(require-all
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(extension "b'com.apple.sandbox.system-group'")
										(entitlement-is-present 190)
										(entitlement-is-present 233))
									(require-all
										(extension "b'com.apple.sandbox.system-group'")
										(require-any
											(require-all
												(entitlement-is-present 190)
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
											(require-all
												(entitlement-is-present 233)
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
									(require-all
										(entitlement-is-bool-true 511)
										(extension "b'com.apple.logd.read-only'")
										(require-any
											(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
											(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
									(require-all
										(vnode-type BLOCK-DEVICE)
										(vnode-type CHARACTER-DEVICE)
										(require-any
											(literal "/private")
											(subpath "/Developer")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Library/PrivateFrameworks")
											(literal "/private/etc/passwd")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
											(literal "/private/etc/services")
											(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
											(subpath "/System/Library/Frameworks")
											(literal "/System")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/private/etc/hosts")
											(subpath "/private/preboot/Cryptexes")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
											(literal "/")
											(literal "/private/etc/fstab")
											(literal "/private/preboot")
											(subpath "/System/Developer")
											(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
													(subpath "/usr/libexec")
													(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
													(require-all
														(subpath "/usr/local/libexec")
														(debug-mode))))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/usr/local")
													(subpath "/AppleInternal")
													(subpath "/usr/appleinternal")))
											(require-all
												(debug-mode)
												(require-any
													(subpath "/AppleInternal")
													(subpath "/usr/local/lib")))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
												(require-any
													(entitlement-is-bool-true 290)
													(entitlement-is-bool-true 297)))
											(require-all
												(entitlement-is-present 305)
												(subpath "/private/var/OOPJit")
												(extension "b'com.apple.sandbox.oopjit'")))))))))))))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath-prefix "${HOME}/Library/Voicemail")
(subpath-prefix "${HOME}/Library/CallDirectory")
(subpath-prefix "${HOME}/Library/CallServices")
(literal-prefix "${HOME}/Library/SMS/com.apple.messages.abcache.callservicesd.plist"))
	(subpath-prefix "${HOME}/Library/CallHistoryDB")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-any (subpath "/private/var/tmp/com.apple.TelephonyUtilities")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.TelephonyUtilities"))
	(extension "b'com.apple.app-sandbox.read-write'")
	(require-all
		(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(entitlement-is-bool-true 3206)
				(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
				(require-any
					(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
					(require-all
						(vnode-type REGULAR-FILE)
						(literal-prefix "${HOME}/Library/AddressBook/"))))
			(require-all
				(entitlement-is-bool-true 124)
				(require-any
					(entitlement-is-bool-true 129)
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present 233)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)))))
(allow file-write*
	(require-all
		(process-attribute is-apple-signed-executable)
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}"))))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/dtracehelper")
			(literal "/dev/zero")
			(literal "/dev/null"))))
(allow file-write-setugid
	(entitlement-is-present 305)
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath "/private/var/tmp")
			(subpath-prefix "${PROCESS_TEMP_DIR}")))
	(require-all
		(extension "b'com.apple.identityservices.deliver'")
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices"))
	(require-all
		(extension "b'com.apple.sandbox.oopjit'")
		(subpath "/private/var/OOPJit")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true 124)
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present 233)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow iokit-open*)
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-issue-extension
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.dmd.emergency-mode")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.coreservices.lsbestappsuggestionmanager.xpc")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(require-any (global-name "com.apple.incoming-call-filter-server")
(global-name "com.apple.voicetrigger.voicetriggerservice")
(global-name "com.apple.coremedia.captureassertionservice")
(global-name "com.apple.bulletinboard.serverconduitconnection"))
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.SystemConfiguration.configd")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(xpc-service-name "com.apple.tonelibraryd")
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.SharingServices")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.apsd")
	(xpc-service-name "com.apple.audio.toolbox.reporting.service")
	(global-name "com.apple.siri.external_request")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.imavagent.embedded.auth")
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.AttentionAwareness")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.mobileactivationd")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.backboard.hid.services")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.awdd")
	(global-name "com.apple.CallHistorySyncHelper")
	(global-name "com.apple.suggestd.contacts")
	(global-name "com.apple.donotdisturb.service")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.carkit.dnd.service")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.voicemail.vmd")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(global-name "com.apple.synapse.backlink-service")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.assertiond.applicationstateconnection")
	(global-name "com.apple.frontboard.systemappservices")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset.xpc")
	(xpc-service-name "com.apple.audio.analytics.service")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.systemstatus.activityattribution")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.corespeech.voicetriggerservice")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.idsremoteurlconnectionagent.embedded.auth")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.logd.events")
	(global-name "com.apple.runningboard")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(global-name "com.apple.aggregated")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd.system")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.logd")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(global-name "com.apple.containermanagerd")
	(require-all
		(local-name-regex #".+")
		(require-any
			(extension "b'com.apple.security.exception.mach-lookup.local-name'")
			(local-name "com.apple.cfprefsd.agent")))
	(require-all
		(extension "b'com.apple.security.exception.mach-lookup.global-name'")
		(global-name-regex #".+"))
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true 2672)
			(entitlement-is-bool-true 2676)
			(entitlement-is-bool-true 2681)))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true 2672)
			(entitlement-is-bool-true 2676)
			(entitlement-is-bool-true 2681)))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true 2691)
			(entitlement-is-bool-true 2696)
			(entitlement-is-bool-true 2702)
			(entitlement-is-bool-true 2707)
			(entitlement-is-bool-true 2711)))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")
					(global-name "com.apple.SharedWebCredentials")))))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true 408))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true 761))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-task*)
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow necp-client-open)
(allow network*)
(allow network-inbound)
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow opendirectory-user-modify)
(allow process-exec-interpreter)
(allow process-fork)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set
	(c1 381e afff affe)
	(require-all
		(syscall-number SYS_memorystatus_control)
		(debug-mode)))
(allow syscall*
	(cb 3828 affc e1bf))
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname")
	(extension "b'com.apple.security.exception.sysctl.read-write'")
	(extension "b'com.apple.security.exception.sysctl.read-only'")
	(sysctl-name "net.statistics")
	(require-all
		(entitlement-is-bool-true 1025)
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2.")))
	(require-all
		(sysctl-name "sysctl.proc_native")
		(require-any
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.product")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "sysctl.name2oid")
(sysctl-name "hw.physmem")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.nperflevels")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpufamily")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cachelinesize_compat"))
			(require-any (sysctl-name "vm.loadavg")
(sysctl-name "machdep.virtual_address_size")
(sysctl-name "kern.hostid")
(sysctl-name "kern.ngroups")
(sysctl-name "kern.boottime")
(sysctl-name "kern.waketime")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.maxvnodes")
(sysctl-name "kern.usrstack64")
(sysctl-name "kern.development")
(sysctl-name "hw.usermem")
(sysctl-name "hw.tbfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.cpufrequency_max")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l3settings")
(sysctl-name "hw.l3cachesize_compat"))
			(require-any (sysctl-name "security.mac.sandbox.sentinel")
(sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l1dcachesize_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat"))
			(require-any (sysctl-name "hw.ncpu")
(sysctl-name "hw.activecpu")
(sysctl-name "hw.machine")
(sysctl-name "hw.memsize")
(sysctl-name "kern.secure_kernel")
(sysctl-name "kern.osproductversion")
(sysctl-name "kern.osvariant_status"))
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.osrelease"))
			(sysctl-name "hw.targettype")
			(require-any (sysctl-name "kern.ostype")
(sysctl-name "kern.hostname"))
			(sysctl-name "security.mac.lockdown_mode_state")
			(require-any (sysctl-name "hw.l2cachesize")
(sysctl-name "hw.cachelinesize"))
			(require-any (sysctl-name "hw.optional.")
(sysctl-name "hw.perflevel")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.vectorunit")
(sysctl-name "hw.cacheconfig")
(sysctl-name "kern.hv_vmm_present")
(sysctl-name "kern.memorystatus_level"))
			(sysctl-name "hw.pagesize_compat")
			(sysctl-name "vm.malloc_ranges")
			(sysctl-name "kern.osversion")
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "hw.tbfrequency_compat")
			(sysctl-name "hw.physicalcpu")
			(sysctl-name "hw.target")
			(sysctl-name "kern.bootsessionuuid")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot")))
			(require-all
				(sysctl-name "kern.argmax")
				(process-attribute is-apple-signed-executable))
			(require-all
				(sysctl-name "kern.bootargs")
				(process-attribute is-apple-signed-executable))
			(require-all
				(sysctl-name "kern.proc.pid.")
				(process-attribute is-apple-signed-executable)))))
(allow system-automount)
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
(allow system-swap
	(preference-domain "com.apple.MobileSMS")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.messages")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.avfaudio")
	(preference-domain "com.apple.VideoConference")
	(preference-domain "com.apple.messages.nicknames")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.facetime")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.mobilephone")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.GameKitServices")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.Sharing")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.audio.virtualaudio")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.imessage.bag")
	(require-any (preference-domain "com.apple.InCallService")
(preference-domain "com.apple.ScreenTimeAgent.conversation")
(preference-domain "com.apple.telephonyutilities.callservicesd"))
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.ids.debug")
	(preference-domain "com.apple.assistant")
	(preference-domain "com.apple.facetime.bag")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.TTY")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.MobileAsset")
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.corevideo")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.da")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.security")
			(require-all
				(entitlement-is-bool-true 2843)
				(preference-domain "com.apple.itunesstored")))))
(allow user-preference*
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-read
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.mobilephone")
	(preference-domain "com.apple.voicetrigger")
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.imessage.bag")
	(require-any (preference-domain "com.apple.InCallService")
(preference-domain "com.apple.ScreenTimeAgent.conversation")
(preference-domain "com.apple.telephonyutilities.callservicesd"))
	(preference-domain "com.apple.TelephonyUtilities")
	(preference-domain "com.apple.facetime.bag"))
