(version 1)
(deny default)
(allow device-camera)
(allow darwin-notification-post)
(allow file*)
(allow file-ioctl)
(allow file-issue-extension)
(allow file-mount
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/aes_0")
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
			(literal "/dev/urandom")
			(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
			(subpath "/private/var/db/datadetectors/sys")
			(literal "/dev/dtracehelper")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/zero")
			(literal "/dev/random")
			(entitlement-is-bool-true 129)
			(require-any (literal "/var")
(literal "/etc")
(literal "/tmp"))
			(literal "/private")
			(require-any (literal "/Library")
(literal "/private/var/db")
(literal "/private/var/networkd")
(literal "/private/var/tmp")
(literal "/private/var/tmp/notify_pathwatch.test")
(literal "/private/var/preferences")
(literal "/private/var/preferences/SystemConfiguration")
(literal-prefix "${FRONT_USER_HOME}/tmp")
(literal-prefix "${FRONT_USER_HOME}/tmp/notify_pathwatch.test"))
			(require-any (subpath "/private/var/tmp/Bom.dst")
(literal "/private/var/run/notifyd_")
(literal "/private/var/log/notifyd.log")
(subpath-prefix "${FRONT_USER_HOME}/tmp/Bom.dst"))
			(literal "/private/var")
			(subpath "/private/etc")
			(subpath "/usr")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(subpath "/System/Library")
			(subpath "/private/var/preferences/FeatureFlags")
			(entitlement-is-bool-true 129)
			(require-all
				(entitlement-is-bool-true 408)
				(require-any
					(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
					(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
			(require-all
				(entitlement-is-bool-true 124)
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Data/System/")
						(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
			(require-all
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(extension "b'com.apple.sandbox.system-group'")
				(entitlement-is-present 190)
				(entitlement-is-present 233))
			(require-all
				(entitlement-is-bool-true 511)
				(extension "b'com.apple.logd.read-only'")
				(require-any
					(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
					(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present 233)
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)
				(require-any
					(literal "/private")
					(subpath "/Developer")
					(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
					(subpath "/System/Library/PrivateFrameworks")
					(literal "/private/etc/passwd")
					(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
					(literal "/private/etc/services")
					(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
					(subpath "/System/Library/Frameworks")
					(literal "/System")
					(subpath "/System/Cryptexes")
					(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
					(literal "/private/etc/hosts")
					(subpath "/private/preboot/Cryptexes")
					(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
					(literal "/")
					(literal "/private/etc/fstab")
					(literal "/private/preboot")
					(subpath "/System/Developer")
					(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
					(require-all
						(process-attribute is-apple-signed-executable)
						(require-any
							(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
							(subpath "/usr/libexec")
							(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
							(require-all
								(subpath "/usr/local/libexec")
								(debug-mode))))
					(require-all
						(debug-mode)
						(require-any
							(subpath "/usr/local")
							(subpath "/AppleInternal")
							(subpath "/usr/appleinternal")))
					(require-all
						(debug-mode)
						(require-any
							(subpath "/AppleInternal")
							(subpath "/usr/local/lib")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
						(require-any
							(entitlement-is-bool-true 290)
							(entitlement-is-bool-true 297)))
					(require-all
						(entitlement-is-present 305)
						(subpath "/private/var/OOPJit")
						(extension "b'com.apple.sandbox.oopjit'")))))))
(allow file-mount-update
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read*
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(entitlement-is-bool-true 129)
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true 124)
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences")))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present 190)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present 233)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-revoke)
(allow file-test-existence
	(require-any (subpath "/private/var/tmp/Bom.dst")
(literal "/private/var/run/notifyd_")
(literal "/private/var/log/notifyd.log")
(subpath-prefix "${FRONT_USER_HOME}/tmp/Bom.dst"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(entitlement-is-bool-true 129)
	(require-all
		(entitlement-is-bool-true 124)
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present 190)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present 233)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE)))
(allow file-write-acl
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/null")
			(literal "/dev/dtracehelper"))))
(allow file-write-setugid
	(entitlement-is-present 305)
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-times
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true 129)
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true 124)
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present 190)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present 233)
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow file-write-unlink)
(allow file-write-xattr)
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-snapshot-create)
(allow hid-control)
(allow ipc-sysv-shm)
(allow lsopen)
(allow mach*)
(allow mach-bootstrap)
(allow mach-host-special-port-set)
(allow mach-task-name)
(allow mach-task-read)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow opendirectory-user-modify)
(allow process-fork)
(allow process-legacy-codesigning-text-offset-get)
(allow pseudo-tty)
(allow socket-ioctl)
(allow socket-option*)
(allow socket-option-set
	(c1 68ba 4a84 4a7b)
	(require-all
		(require-not (syscall-number SYS_reboot))
		(require-any
			(syscall-number SYS_map_with_linking_np)
			(require-all
				(syscall-number SYS_flock)
				(require-any
					(syscall-number SYS_workq_open)
					(syscall-number SYS_workq_kernreturn)
					(syscall-number 38)
					(syscall-number SYS_dup)
					(entitlement-is-bool-true 408)))
			(require-all
				(syscall-number SYS_fsync)
				(require-any
					(syscall-number SYS_workq_open)
					(syscall-number SYS_workq_kernreturn)
					(syscall-number 38)
					(syscall-number SYS_dup)
					(entitlement-is-bool-true 408)))
			(require-all
				(syscall-number SYS_guarded_open_dprotected_np)
				(require-any
					(syscall-number SYS_workq_open)
					(syscall-number SYS_workq_kernreturn)
					(syscall-number 38)
					(syscall-number SYS_dup)
					(entitlement-is-bool-true 408)))
			(require-all
				(syscall-number SYS_memorystatus_control)
				(debug-mode)))))
(allow syscall*)
(allow syscall-unix)
(allow syscall-mig
	(sysctl-name "hw.ephemeral_storage")
	(sysctl-name "kern.osbuildconfig")
	(extension "b'com.apple.security.exception.sysctl.read-write'")
	(extension "b'com.apple.security.exception.sysctl.read-only'")
	(require-all
		(entitlement-is-bool-true 1025)
		(require-any (sysctl-name "kern.proc.")
(sysctl-name "kern.procargs2.")))
	(require-all
		(sysctl-name "sysctl.proc_native")
		(require-any
			(require-any (sysctl-name "hw.model")
(sysctl-name "hw.logicalcpu_max")
(sysctl-name "hw.product")
(sysctl-name "hw.physicalcpu_max"))
			(require-any (sysctl-name "sysctl.name2oid")
(sysctl-name "hw.physmem")
(sysctl-name "hw.byteorder")
(sysctl-name "hw.nperflevels")
(sysctl-name "hw.logicalcpu")
(sysctl-name "hw.l3cachesize")
(sysctl-name "hw.l1dcachesize")
(sysctl-name "hw.l1icachesize")
(sysctl-name "hw.cputype")
(sysctl-name "hw.cpufamily")
(sysctl-name "hw.cpusubfamily")
(sysctl-name "hw.cachesize")
(sysctl-name "hw.cachelinesize_compat"))
			(require-any (sysctl-name "vm.loadavg")
(sysctl-name "machdep.virtual_address_size")
(sysctl-name "kern.hostid")
(sysctl-name "kern.ngroups")
(sysctl-name "kern.boottime")
(sysctl-name "kern.waketime")
(sysctl-name "kern.saved_ids")
(sysctl-name "kern.clockrate")
(sysctl-name "kern.maxvnodes")
(sysctl-name "kern.usrstack64")
(sysctl-name "kern.development")
(sysctl-name "hw.usermem")
(sysctl-name "hw.tbfrequency")
(sysctl-name "hw.busfrequency_compat")
(sysctl-name "hw.cpusubtype")
(sysctl-name "hw.cpu64bit_capable")
(sysctl-name "hw.cpufrequency_max")
(sysctl-name "hw.l1icachesize_compat")
(sysctl-name "hw.l3settings")
(sysctl-name "hw.l3cachesize_compat"))
			(require-any (sysctl-name "security.mac.sandbox.sentinel")
(sysctl-name "security.mac.amfi.developer_mode_status")
(sysctl-name "kern.usrstack")
(sysctl-name "kern.wq_limit_cooperative_threads")
(sysctl-name "kern.maxproc")
(sysctl-name "kern.monotonicclock")
(sysctl-name "kern.monotoniclock_offset_usecs")
(sysctl-name "hw.busfrequency")
(sysctl-name "hw.cpufrequency")
(sysctl-name "hw.cpufrequency_compat")
(sysctl-name "hw.l1dcachesize_compat")
(sysctl-name "hw.l2settings")
(sysctl-name "hw.l2cachesize_compat"))
			(require-any (sysctl-name "hw.ncpu")
(sysctl-name "hw.activecpu")
(sysctl-name "hw.machine")
(sysctl-name "hw.memsize")
(sysctl-name "kern.secure_kernel")
(sysctl-name "kern.osproductversion")
(sysctl-name "kern.osvariant_status"))
			(require-any (sysctl-name "kern.version")
(sysctl-name "kern.osrelease"))
			(sysctl-name "hw.targettype")
			(require-any (sysctl-name "kern.ostype")
(sysctl-name "kern.hostname"))
			(sysctl-name "security.mac.lockdown_mode_state")
			(require-any (sysctl-name "hw.l2cachesize")
(sysctl-name "hw.cachelinesize"))
			(require-any (sysctl-name "hw.optional.")
(sysctl-name "hw.perflevel")
(sysctl-name "hw.pagesize")
(sysctl-name "hw.vectorunit")
(sysctl-name "hw.cacheconfig")
(sysctl-name "kern.hv_vmm_present")
(sysctl-name "kern.memorystatus_level"))
			(sysctl-name "hw.pagesize_compat")
			(sysctl-name "vm.malloc_ranges")
			(sysctl-name "kern.osversion")
			(sysctl-name "kern.maxfilesperproc")
			(sysctl-name "hw.tbfrequency_compat")
			(sysctl-name "hw.physicalcpu")
			(sysctl-name "hw.target")
			(sysctl-name "kern.bootsessionuuid")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any (sysctl-name "kern.willshutdown")
(sysctl-name "kern.willuserspacereboot")))
			(require-all
				(sysctl-name "kern.argmax")
				(process-attribute is-apple-signed-executable))
			(require-all
				(sysctl-name "kern.bootargs")
				(process-attribute is-apple-signed-executable))
			(require-all
				(sysctl-name "kern.proc.pid.")
				(process-attribute is-apple-signed-executable)))))
(allow system-automount)
(allow system-mac*)
(allow system-mac-label)
(allow system-mac-syscall)
(allow system-nfssvc)
