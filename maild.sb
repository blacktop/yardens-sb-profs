(version 1)
(deny default)
(allow darwin-notification-post)
(allow dynamic-code-generation)
(allow file-clone)
(allow file-issue-extension
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.sharing.airdrop.readonly")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
				(extension "b'com.apple.clouddocs.version'"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
				(vnode-type REGULAR-FILE))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read-write")
								(require-any
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(extension "b'com.apple.quicklook.readonly'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
									(extension "b'com.apple.app-sandbox.read'")
									(extension "b'com.apple.app-sandbox.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
									(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
									(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
									(extension "b'com.apple.sharing.airdrop.readonly'")))))))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
				(vnode-type REGULAR-FILE))))
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.app-sandbox.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.aned.read-only")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(literal "/private/var/")
				(subpath-prefix "${HOME}")
				(extension "b'com.apple.usernotifications.attachments.read-only'")
				(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$"))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(subpath-prefix "${HOME}/Library/Mail")
				(require-any
					(extension-class "com.apple.quicklook.readonly")
					(extension-class "com.apple.spotlight-indexable")))
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.odr-assets'")
				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(extension "b'com.apple.odr-assets'")
				(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))
					(require-all
						(extension "b'com.apple.assets.read'")
						(require-any
							(subpath "/private/var/MobileAsset")
							(subpath-prefix "${HOME}/Library/Assets")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(subpath-prefix "${HOME}/Library/Mobile Documents")
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
							(extension "b'com.apple.librarian.ubiquity-container'")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension "b'com.apple.fileprovider.read-write'")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension "b'com.apple.tcc.kTCCServicePhotos'")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(require-all
								(subpath-prefix "${HOME}/Media")
								(extension "b'com.apple.avasset.read-only'"))))
					(require-all
						(subpath "/System/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))
					(require-all
						(subpath "/private/preboot/Cryptexes")
						(extension-class "com.apple.app-sandbox.read"))))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(subpath "/Library/RegionFeatures")
					(subpath "/System/Library")))))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(extension "b'com.apple.quicklook.readonly'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
							(extension "b'com.apple.app-sandbox.read'")
							(extension "b'com.apple.app-sandbox.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
							(extension "b'com.apple.sharing.airdrop.readonly'")))))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.sharing.airdrop.readonly'")))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'"))))
(allow file-lock)
(allow file-read*
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
	(subpath-prefix "${HOME}/Library/Carrier Bundles")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
	(require-all
		(extension "b'com.apple.librarian.ubiquity-revision'")
		(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(literal "/System/Library/Carrier Bundles/")
		(require-any
			(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
			(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
		(extension "b'com.apple.clouddocs.version'"))
	(require-all
		(literal "/private/var/")
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
		(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
		(extension "b'com.apple.clouddocs.version'"))
	(require-all
		(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
		(vnode-type REGULAR-FILE)
		(extension "b'com.apple.clouddocs.version'"))
	(require-all
		(literal "/private/var/")
		(subpath-prefix "${HOME}")
		(require-not (regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$")))
	(require-all
		(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
		(vnode-type REGULAR-FILE)
		(extension "b'com.apple.clouddocs.version'"))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(literal "/private/var/preferences/com.apple.security.plist")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(subpath-prefix "${HOME}/Media/Purchases")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
			(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
			(require-all
				(process-attribute is-apple-signed-executable)
				(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
			(require-all
				(literal "/private/var/preferences/com.apple.networkextension.plist")
				(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
					(require-all
						(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
						(subpath-prefix "${HOME}"))))
			(require-all
				(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
				(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
				(subpath-prefix "${HOME}")
				(extension "b'com.apple.usernotifications.attachments.read-only'"))
			(require-all
				(require-not (literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist"))
				(require-any
					(subpath-prefix "${HOME}/Library/Fonts")
					(subpath-prefix "${HOME}/Library/Fonts")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
						(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
						(require-any
							(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
							(subpath-prefix "${HOME}/Library/AddressBook")
							(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
					(require-all
						(extension "b'com.apple.sandbox.application-group'")
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
										(subpath-prefix "${FRONT_USER_HOME}"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
					(require-all
						(extension "b'com.apple.fileprovider.read-write'")
						(require-any
							(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
								(subpath-prefix "${HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
								(subpath-prefix "${HOME}"))))
					(require-all
						(require-not (literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin"))
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(subpath "/private/var/containers/Data/System/com.apple.geod")
							(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
							(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
							(subpath-prefix "${HOME}/Library/Fonts")
							(subpath "/Library/Audio/Tunings/Generic/Haptics")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
							(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
							(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
							(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
							(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
							(require-all
								(literal "/private/var/")
								(require-any
									(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
									(require-all
										(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
										(subpath-prefix "${HOME}"))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
										(process-attribute is-apple-signed-executable))
									(require-all
										(literal "/private/var/preferences/com.apple.networkextension.plist")
										(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
							(require-all
								(literal "/private/var/")
								(require-any
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(require-any
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
											(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
							(require-all
								(extension "b'com.apple.fileprovider.read-write'")
								(require-any
									(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
										(subpath-prefix "${FRONT_USER_HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/ReplayKit")
								(extension "b'com.apple.replayd.read-only'"))
							(require-all
								(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
								(extension "b'com.apple.Pasteboard-readonly'"))
							(require-all
								(extension "b'com.apple.odr-assets'")
								(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
							(require-all
								(extension "b'com.apple.assets.read'")
								(require-any
									(subpath "/private/var/MobileAsset")
									(subpath-prefix "${HOME}/Library/Assets")))
							(require-all
								(extension "b'com.apple.classkit.read-write'")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
									(require-all
										(literal "/private/var/")
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
							(require-all
								(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
								(extension "b'com.apple.librarian.ubiquity-revision'"))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
								(extension "b'com.apple.librarian.ubiquity-revision'"))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
									(subpath-prefix "${HOME}/Library/Mobile Documents")
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
							(require-all
								(extension "b'com.apple.librarian.ubiquity-container'")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
									(subpath-prefix "${HOME}/Library/Mobile Documents")
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
									(require-all
										(literal "/private/var/")
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
								(extension "b'com.apple.clouddocs.version'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
								(vnode-type REGULAR-FILE))
							(require-all
								(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
								(vnode-type REGULAR-FILE))
							(require-all
								(subpath-prefix "${HOME}/Media")
								(require-any
									(require-all
										(extension "b'com.apple.tcc.kTCCServicePhotos'")
										(require-any
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
											(extension "b'com.apple.avasset.read-only'")
											(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
											(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
											(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
											(subpath-prefix "${HOME}/Media/PhotoStreamsData")
											(subpath-prefix "${HOME}/Media/DCIM")
											(require-all
												(process-attribute is-platform-binary)
												(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
									(require-all
										(require-not (literal "/usr/sbin/fairplayd"))
										(require-any
											(literal "/dev/null")
											(literal "/dev/aes_0")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
											(literal "/dev/urandom")
											(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
											(subpath "/private/var/db/datadetectors/sys")
											(literal "/dev/dtracehelper")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
											(literal "/dev/zero")
											(literal "/dev/random")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(literal "/private")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/System")
											(subpath "/private/preboot/Cryptexes")
											(literal "/")
											(literal "/private/preboot")
											(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
												(extension "b'com.apple.identityservices.deliver'"))
											(require-all
												(uid 0)
												(literal "/private/etc/master.passwd"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
												(require-any
													(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
													(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
											(require-all
												(entitlement-is-bool-true "b'com.apple.security.system-container'")
												(extension "b'com.apple.sandbox.system-container'")
												(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
												(require-any
													(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Data/System/")
														(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
											(require-all
												(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
												(extension "b'com.apple.sandbox.system-group'")
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(entitlement-is-present "b'com.apple.security.system-group-containers'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
												(extension "b'com.apple.logd.read-only'")
												(require-any
													(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
													(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
											(require-all
												(vnode-type BLOCK-DEVICE)
												(vnode-type CHARACTER-DEVICE)
												(require-any
													(literal "/private")
													(subpath "/Developer")
													(subpath "/private/var/preferences/Logging")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Library/PrivateFrameworks")
													(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
													(literal "/private/etc/passwd")
													(subpath "/usr/lib")
													(subpath "/private/var/db/timezone")
													(subpath "/Library/RegionFeatures")
													(literal "/System")
													(literal "/private/etc/services")
													(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
													(subpath "/System/Library/Frameworks")
													(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/private/etc/hosts")
													(subpath "/private/preboot/Cryptexes")
													(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
													(literal "/")
													(subpath "/usr/share")
													(literal "/private/etc/fstab")
													(literal "/private/preboot")
													(subpath "/System/Library")
													(subpath "/System/Developer")
													(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
													(require-all
														(process-attribute is-apple-signed-executable)
														(require-any
															(subpath "/usr/libexec")
															(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
															(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
															(require-all
																(subpath "/usr/local/libexec")
																(debug-mode))))
													(require-all
														(debug-mode)
														(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
													(require-all
														(subpath "/usr/local")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
														(require-any
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
															(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
													(require-all
														(subpath "/AppleInternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))
													(require-all
														(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
														(subpath "/private/var/OOPJit")
														(extension "b'com.apple.sandbox.oopjit'"))
													(require-all
														(subpath "/usr/appleinternal")
														(require-any
															(debug-mode)
															(require-all
																(debug-mode)
																(require-any
																	(subpath "/AppleInternal")
																	(subpath "/usr/local/lib")))))))
											(require-all
												(extension "b'com.apple.sandbox.system-group'")
												(require-any
													(require-all
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
													(require-all
														(entitlement-is-present "b'com.apple.security.system-group-containers'")
														(require-any
															(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Shared/SystemGroup/")
																(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
							(require-all
								(require-not (subpath-prefix "${HOME}/Library/FairPlay"))
								(require-not (literal "/usr/sbin/fairplayd"))
								(require-any
									(literal "/dev/null")
									(literal "/dev/aes_0")
									(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
									(literal "/dev/urandom")
									(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
									(subpath "/private/var/db/datadetectors/sys")
									(literal "/dev/dtracehelper")
									(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
									(literal "/dev/zero")
									(literal "/dev/random")
									(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
									(literal "/private")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/System")
									(subpath "/private/preboot/Cryptexes")
									(literal "/")
									(literal "/private/preboot")
									(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
										(extension "b'com.apple.identityservices.deliver'"))
									(require-all
										(uid 0)
										(literal "/private/etc/master.passwd"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
										(require-any
											(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
											(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
									(require-all
										(entitlement-is-bool-true "b'com.apple.security.system-container'")
										(extension "b'com.apple.sandbox.system-container'")
										(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Data/System/")
												(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
									(require-all
										(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
										(extension "b'com.apple.sandbox.system-group'")
										(entitlement-is-present "b'com.apple.security.system-groups'")
										(entitlement-is-present "b'com.apple.security.system-group-containers'"))
									(require-all
										(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
										(extension "b'com.apple.logd.read-only'")
										(require-any
											(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
											(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
									(require-all
										(vnode-type BLOCK-DEVICE)
										(vnode-type CHARACTER-DEVICE)
										(require-any
											(literal "/private")
											(subpath "/Developer")
											(subpath "/private/var/preferences/Logging")
											(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
											(subpath "/System/Library/PrivateFrameworks")
											(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
											(literal "/private/etc/passwd")
											(subpath "/usr/lib")
											(subpath "/private/var/db/timezone")
											(subpath "/Library/RegionFeatures")
											(literal "/System")
											(literal "/private/etc/services")
											(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
											(subpath "/System/Library/Frameworks")
											(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
											(subpath "/System/Cryptexes")
											(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
											(literal "/private/etc/hosts")
											(subpath "/private/preboot/Cryptexes")
											(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
											(literal "/")
											(subpath "/usr/share")
											(literal "/private/etc/fstab")
											(literal "/private/preboot")
											(subpath "/System/Library")
											(subpath "/System/Developer")
											(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
											(require-all
												(process-attribute is-apple-signed-executable)
												(require-any
													(subpath "/usr/libexec")
													(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
													(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
													(require-all
														(subpath "/usr/local/libexec")
														(debug-mode))))
											(require-all
												(debug-mode)
												(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
											(require-all
												(subpath "/usr/local")
												(require-any
													(debug-mode)
													(require-all
														(debug-mode)
														(require-any
															(subpath "/AppleInternal")
															(subpath "/usr/local/lib")))))
											(require-all
												(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
												(require-any
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
													(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
											(require-all
												(subpath "/AppleInternal")
												(require-any
													(debug-mode)
													(require-all
														(debug-mode)
														(require-any
															(subpath "/AppleInternal")
															(subpath "/usr/local/lib")))))
											(require-all
												(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
												(subpath "/private/var/OOPJit")
												(extension "b'com.apple.sandbox.oopjit'"))
											(require-all
												(subpath "/usr/appleinternal")
												(require-any
													(debug-mode)
													(require-all
														(debug-mode)
														(require-any
															(subpath "/AppleInternal")
															(subpath "/usr/local/lib")))))))
									(require-all
										(extension "b'com.apple.sandbox.system-group'")
										(require-any
											(require-all
												(entitlement-is-present "b'com.apple.security.system-groups'")
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
											(require-all
												(entitlement-is-present "b'com.apple.security.system-group-containers'")
												(require-any
													(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
													(require-all
														(literal "/private/var/containers/Shared/SystemGroup/")
														(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))))))))))
(allow file-read-data
	(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))))
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'")))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))))
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal "/private/var")
	(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles")
	(literal-prefix "${HOME}/Library/Mobile Documents")
	(literal-prefix "${HOME}")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices")
	(literal-prefix "${HOME}/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal-prefix "${HOME}/Library/GameKit/Data")
	(literal-prefix "${HOME}/Library")
	(literal "/private/var/run/syslog")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
						(extension "b'com.apple.revisiond.staging'"))
					(require-all
						(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
						(extension "b'com.apple.revisiond.staging'"))
					(require-all
						(extension "b'com.apple.revisiond.revision'")
						(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID")))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(extension "b'com.apple.revisiond.revision'")
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID")))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(extension "b'com.apple.revisiond.revision'")
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID")))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(extension "b'com.apple.revisiond.revision'")
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID")))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-container'"))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(extension "b'com.apple.revisiond.revision'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(entitlement-is-present "b'com.apple.security.system-group-containers'")
			(entitlement-is-present "b'com.apple.security.system-groups'")))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}")
			(literal-prefix "${HOME}/Library/Preferences"))))
(allow file-read-xattr
	(extension "b'com.apple.tcc.kTCCServiceMediaLibrary'")
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'"))))
	(require-all
		(vnode-type SYMLINK)
		(require-any
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
				(extension "b'com.apple.revisiond.staging'"))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/PerUID")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]/[UNSUPPORTED]DocumentRevisions-V100/PerUID/?")
(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/PerUID"))
				(require-any
					(extension "b'com.apple.revisiond.revision'")
					(subpath-prefix "${HOME}/Library/Carrier Bundles")
					(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
					(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
					(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
					(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
					(extension "b'com.apple.sharing.airdrop.readonly'")
					(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
					(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
					(extension "b'com.apple.quicklook.readonly'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.app-sandbox.read'")
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.sandbox.executable'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(require-all
						(extension "b'com.apple.librarian.ubiquity-revision'")
						(require-any (subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")))
					(require-all
						(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(extension "b'com.apple.librarian.ubiquity-container'")
						(require-any
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
							(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
							(subpath-prefix "${HOME}/Library/Mobile Documents")
							(require-all
								(literal "/private/var/")
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
					(require-all
						(literal "/System/Library/Carrier Bundles/")
						(require-any
							(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
							(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
								(subpath-prefix "${FRONT_USER_HOME}"))))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
						(extension "b'com.apple.clouddocs.version'"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
					(require-all
						(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
						(vnode-type REGULAR-FILE))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
						(vnode-type REGULAR-FILE))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${HOME}")
						(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/iTunesPrefs$"))
					(require-all
						(require-any (literal "/System/Library/Caches/apticket.der")
(subpath "/System/Library/Caches/com.apple.factorydata")
(subpath "/System/Library/Caches/com.apple.kernelcaches"))
						(subpath "/private/var/hardware/FactoryData")
						(literal "/usr/standalone/firmware/apticket.der")
						(require-any
							(literal "/private/var/preferences/com.apple.networkd.plist")
							(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
							(literal "/private/var/preferences/com.apple.security.plist")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/SystemConfiguration/com.apple.wifi.plist")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(subpath-prefix "${HOME}/Media/Purchases")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/Managed Preferences/mobile/com.apple.webcontentfilter.plist")
							(require-all
								(process-attribute is-apple-signed-executable)
								(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist"))
							(require-all
								(literal "/private/var/preferences/com.apple.networkextension.plist")
								(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))
							(require-all
								(literal "/private/var/")
								(require-any
									(require-all
										(subpath-prefix "${HOME}")
										(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/Ringtones.plist$"))
									(require-all
										(regex #"^/private/var/mobile/Media/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/iTunes_Control/Ringtones$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Ringtones$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Ringtones$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Ringtones$")
										(subpath-prefix "${HOME}"))))
							(require-all
								(subpath-prefix "${HOME}/Library/BulletinDistributor/Attachments")
								(extension "b'com.apple.bulletindistributor.attachments.read-only'"))
							(require-all
								(literal "/private/var/")
								(regex #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/mobile/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/euser[0-9]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/[-0-9A-F]+/Library/UserNotifications/[^/]+/Attachments$" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments/" #"^/private/var/Users/[^/]+/Library/UserNotifications/[^/]+/Attachments$")
								(subpath-prefix "${HOME}")
								(extension "b'com.apple.usernotifications.attachments.read-only'"))
							(require-all
								(literal-prefix "${ANY_USER_HOME}/Library/Preferences/com.apple.apsalerts.plist")
								(require-any
									(subpath-prefix "${HOME}/Library/Fonts")
									(subpath-prefix "${HOME}/Library/Fonts")
									(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/com.apple.carrier.plist")
									(subpath-prefix "${FRONT_USER_HOME}/Library/Carrier Bundles/Overlay")
									(require-all
										(literal "/System/Library/Carrier Bundles/")
										(require-any
											(regex #"^/System/Library/Carrier Bundles//carrier[.]plist$" #"^/System/Library/Carrier Bundles/.+/carrier[.]plist$")
											(regex #"^/System/Library/Carrier Bundles/[.]png$" #"^/System/Library/Carrier Bundles/.+[.]png$")))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles//carrier[.]plist$" #"^/private/var/mobile/Library/Carrier Bundles/.+/carrier[.]plist$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*/carrier[.]plist$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*/carrier[.]plist$")
												(subpath-prefix "${FRONT_USER_HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Library/Carrier Bundles/[.]png$" #"^/private/var/mobile/Library/Carrier Bundles/.+[.]png$" #"^/private/var/euser[0-9]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/[-0-9A-F]+/Library/Carrier Bundles/.*[.]png$" #"^/private/var/Users/[^/]+/Library/Carrier Bundles/.*[.]png$")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
										(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
										(require-any
											(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
											(subpath-prefix "${HOME}/Library/AddressBook")
											(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
									(require-all
										(extension "b'com.apple.sandbox.application-group'")
										(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple.")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/")
												(subpath-prefix "${FRONT_USER_HOME}")
												(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]"))
											(require-all
												(literal "/private/var/")
												(require-any
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
														(subpath-prefix "${FRONT_USER_HOME}"))
													(require-all
														(literal "/private/var/PersonaVolumes/")
														(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
									(require-all
										(extension "b'com.apple.fileprovider.read-write'")
										(require-any
											(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
												(subpath-prefix "${FRONT_USER_HOME}"))))
									(require-all
										(literal "/private/var/")
										(require-any
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/iTunes_Control/Artwork$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/Artwork$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/Artwork$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/Artwork$")
												(subpath-prefix "${HOME}"))
											(require-all
												(regex #"^/private/var/mobile/Media/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/iTunes_Control/iTunes$" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes/" #"^/private/var/mobile/Media/[^/]+/iTunes_Control/iTunes$" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/euser[0-9]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/[-0-9A-F]+/Media/([^/]+/)?iTunes_Control/iTunes$" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes/" #"^/private/var/Users/[^/]+/Media/([^/]+/)?iTunes_Control/iTunes$")
												(subpath-prefix "${HOME}"))))
									(require-all
										(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
										(require-any
											(literal "/private/var/preferences/com.apple.networkd.plist")
											(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
											(literal "/private/var/preferences/com.apple.security.plist")
											(subpath "/private/var/containers/Data/System/com.apple.geod")
											(subpath-prefix "${FRONT_USER_HOME}/Library/Caches/GeoServices")
											(literal "/private/var/db/com.apple.networkextension.tracker-info")
											(require-any (subpath "/Library/Dictionaries")
(subpath-prefix "${HOME}/Library/Dictionaries"))
											(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
											(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.UIStatusBar")
											(subpath-prefix "${HOME}/Library/Fonts")
											(subpath "/Library/Audio/Tunings/Generic/Haptics")
											(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards")
											(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.lsd.iconscache")
											(literal-prefix "${HOME}/Library/Caches/com.apple.itunesstored/url-resolution.plist")
											(require-any (subpath-prefix "${HOME}/Library/VoiceServices/Assets")
(subpath-prefix "${HOME}/Library/Assets/com_apple_MobileAsset_VoiceServicesVocalizerVoice"))
											(require-any (subpath "/Library/Ringtones")
(literal-prefix "${HOME}/Media/Vibrations/UserGeneratedVibrationPatterns.plist"))
											(literal-prefix "${HOME}/Library/Caches/Checkpoint.plist")
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/preferences/SystemConfiguration/com.apple.radios.plist")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/GeoServices/"))
													(require-all
														(regex #"^/private/var/mobile/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/euser[0-9]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/[-0-9A-F]+/Library/GameKit/Data/[^/]+.gcdata$" #"^/private/var/Users/[^/]+/Library/GameKit/Data/[^/]+.gcdata$")
														(subpath-prefix "${HOME}"))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
														(process-attribute is-apple-signed-executable))
													(require-all
														(literal "/private/var/preferences/com.apple.networkextension.plist")
														(entitlement-is-present "b'com.apple.private.networkextension.configuration'"))))
											(require-all
												(process-attribute is-apple-signed-executable)
												(literal "/private/var/preferences/SystemConfiguration/com.apple.accounts.exists.plist"))
											(require-all
												(literal "/private/var/")
												(require-any
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}")
														(require-any
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/[.]GlobalPreferences$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com.apple.nanoprefsyncd$")
															(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+/NanoPreferencesSync/NanoDomains/com[.]apple[.]ToneLibrary$")))))
											(require-all
												(extension "b'com.apple.fileprovider.read-write'")
												(require-any
													(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
														(subpath-prefix "${FRONT_USER_HOME}"))))
											(require-all
												(subpath-prefix "${HOME}/Library/ReplayKit")
												(extension "b'com.apple.replayd.read-only'"))
											(require-all
												(literal-prefix "${FRONT_USER_HOME}/Library/Caches/com.apple.Pasteboard/")
												(extension "b'com.apple.Pasteboard-readonly'"))
											(require-all
												(extension "b'com.apple.odr-assets'")
												(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.ondemandresources/Library/AssetPacks")
(subpath-prefix "${HOME}/Library/OnDemandResources/AssetPacks")))
											(require-all
												(extension "b'com.apple.assets.read'")
												(require-any
													(subpath "/private/var/MobileAsset")
													(subpath-prefix "${HOME}/Library/Assets")))
											(require-all
												(extension "b'com.apple.classkit.read-write'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
													(require-all
														(literal "/private/var/")
														(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
														(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/Ubiquity/genstore")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/Ubiquity/genstore/?")
												(extension "b'com.apple.librarian.ubiquity-revision'"))
											(require-all
												(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(extension "b'com.apple.librarian.ubiquity-container'")
												(require-any
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
													(subpath-prefix "${HOME}/Library/Mobile Documents")
													(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
													(require-all
														(literal "/private/var/")
														(subpath-prefix "${FRONT_USER_HOME}")
														(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/iCloudDrive/[UNSUPPORTED]+/session/r/?")
												(extension "b'com.apple.clouddocs.version'"))
											(require-all
												(literal "/private/var/")
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/iCloudDrive/[^/]+/session/r$")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
											(require-all
												(subpath-prefix "${HOME}/Media")
												(require-any
													(require-all
														(extension "b'com.apple.tcc.kTCCServicePhotos'")
														(require-any
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/CPLAssets")
(subpath-prefix "${HOME}/Media/PhotoData/Sync")
(subpath-prefix "${HOME}/Media/PhotoData/Mutations"))
															(extension "b'com.apple.avasset.read-only'")
															(subpath-prefix "${HOME}/Media/PhotoData/PhotoCloudSharingData")
															(require-any (subpath-prefix "${HOME}/Media/PhotoData/Thumbnails")
(subpath-prefix "${HOME}/Media/PhotoData/Metadata"))
															(literal-prefix "${HOME}/Media/PhotoData/syncInfo.plist")
															(subpath-prefix "${HOME}/Media/PhotoStreamsData")
															(subpath-prefix "${HOME}/Media/DCIM")
															(require-all
																(process-attribute is-platform-binary)
																(literal-prefix "${HOME}/Media/PhotoData/Photos.sqlite"))))
													(require-all
														(literal "/usr/sbin/fairplayd")
														(require-any
															(literal "/dev/null")
															(literal "/dev/aes_0")
															(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
															(literal "/dev/urandom")
															(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
															(subpath "/private/var/db/datadetectors/sys")
															(literal "/dev/dtracehelper")
															(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
															(literal "/dev/zero")
															(literal "/dev/random")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(literal "/private")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/System")
															(subpath "/private/preboot/Cryptexes")
															(literal "/")
															(literal "/private/preboot")
															(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
																(extension "b'com.apple.identityservices.deliver'"))
															(require-all
																(uid 0)
																(literal "/private/etc/master.passwd"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
																(require-any
																	(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
																	(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
															(require-all
																(entitlement-is-bool-true "b'com.apple.security.system-container'")
																(extension "b'com.apple.sandbox.system-container'")
																(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
																(require-any
																	(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Data/System/")
																		(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
															(require-all
																(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
																(extension "b'com.apple.sandbox.system-group'")
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(entitlement-is-present "b'com.apple.security.system-group-containers'"))
															(require-all
																(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
																(extension "b'com.apple.logd.read-only'")
																(require-any
																	(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
																	(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
															(require-all
																(vnode-type BLOCK-DEVICE)
																(vnode-type CHARACTER-DEVICE)
																(require-any
																	(literal "/private")
																	(subpath "/Developer")
																	(subpath "/private/var/preferences/Logging")
																	(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
																	(subpath "/System/Library/PrivateFrameworks")
																	(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
																	(literal "/private/etc/passwd")
																	(subpath "/usr/lib")
																	(subpath "/private/var/db/timezone")
																	(subpath "/Library/RegionFeatures")
																	(literal "/System")
																	(literal "/private/etc/services")
																	(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
																	(subpath "/System/Library/Frameworks")
																	(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
																	(subpath "/System/Cryptexes")
																	(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
																	(literal "/private/etc/hosts")
																	(subpath "/private/preboot/Cryptexes")
																	(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
																	(literal "/")
																	(subpath "/usr/share")
																	(literal "/private/etc/fstab")
																	(literal "/private/preboot")
																	(subpath "/System/Library")
																	(subpath "/System/Developer")
																	(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
																	(require-all
																		(process-attribute is-apple-signed-executable)
																		(require-any
																			(subpath "/usr/libexec")
																			(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																			(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																			(require-all
																				(subpath "/usr/local/libexec")
																				(debug-mode))))
																	(require-all
																		(debug-mode)
																		(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
																	(require-all
																		(subpath "/usr/local")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																		(require-any
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																			(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
																	(require-all
																		(subpath "/AppleInternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))
																	(require-all
																		(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																		(subpath "/private/var/OOPJit")
																		(extension "b'com.apple.sandbox.oopjit'"))
																	(require-all
																		(subpath "/usr/appleinternal")
																		(require-any
																			(debug-mode)
																			(require-all
																				(debug-mode)
																				(require-any
																					(subpath "/AppleInternal")
																					(subpath "/usr/local/lib")))))))
															(require-all
																(extension "b'com.apple.sandbox.system-group'")
																(require-any
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-groups'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
																	(require-all
																		(entitlement-is-present "b'com.apple.security.system-group-containers'")
																		(require-any
																			(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																			(require-all
																				(literal "/private/var/containers/Shared/SystemGroup/")
																				(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))
											(require-all
												(subpath-prefix "${HOME}/Library/Application Support/CloudDocs/session/r")
												(vnode-type REGULAR-FILE))
											(require-all
												(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Application Support/CloudDocs/session/r/?")
												(vnode-type REGULAR-FILE))
											(require-all
												(subpath-prefix "${HOME}/Library/FairPlay")
												(literal "/usr/sbin/fairplayd")
												(require-any
													(literal "/dev/null")
													(literal "/dev/aes_0")
													(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
													(literal "/dev/urandom")
													(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
													(subpath "/private/var/db/datadetectors/sys")
													(literal "/dev/dtracehelper")
													(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
													(literal "/dev/zero")
													(literal "/dev/random")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(literal "/private")
													(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
													(subpath "/System/Cryptexes")
													(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
													(literal "/System")
													(subpath "/private/preboot/Cryptexes")
													(literal "/")
													(literal "/private/preboot")
													(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
													(require-all
														(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices")
														(extension "b'com.apple.identityservices.deliver'"))
													(require-all
														(uid 0)
														(literal "/private/etc/master.passwd"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
														(require-any
															(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
															(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
													(require-all
														(entitlement-is-bool-true "b'com.apple.security.system-container'")
														(extension "b'com.apple.sandbox.system-container'")
														(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
														(require-any
															(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
															(require-all
																(literal "/private/var/containers/Data/System/")
																(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
													(require-all
														(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
														(extension "b'com.apple.sandbox.system-group'")
														(entitlement-is-present "b'com.apple.security.system-groups'")
														(entitlement-is-present "b'com.apple.security.system-group-containers'"))
													(require-all
														(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
														(extension "b'com.apple.logd.read-only'")
														(require-any
															(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
															(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
													(require-all
														(vnode-type BLOCK-DEVICE)
														(vnode-type CHARACTER-DEVICE)
														(require-any
															(literal "/private")
															(subpath "/Developer")
															(subpath "/private/var/preferences/Logging")
															(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
															(subpath "/System/Library/PrivateFrameworks")
															(require-any (literal "/private/var/db/eligibilityd/eligibility.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist"))
															(literal "/private/etc/passwd")
															(subpath "/usr/lib")
															(subpath "/private/var/db/timezone")
															(subpath "/Library/RegionFeatures")
															(literal "/System")
															(literal "/private/etc/services")
															(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
															(subpath "/System/Library/Frameworks")
															(literal "/private/var/db/DarwinDirectory/local/recordStore.data")
															(subpath "/System/Cryptexes")
															(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
															(literal "/private/etc/hosts")
															(subpath "/private/preboot/Cryptexes")
															(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
															(literal "/")
															(subpath "/usr/share")
															(literal "/private/etc/fstab")
															(literal "/private/preboot")
															(subpath "/System/Library")
															(subpath "/System/Developer")
															(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
															(require-all
																(process-attribute is-apple-signed-executable)
																(require-any
																	(subpath "/usr/libexec")
																	(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
																	(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
																	(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
																	(require-all
																		(subpath "/usr/local/libexec")
																		(debug-mode))))
															(require-all
																(debug-mode)
																(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
															(require-all
																(subpath "/usr/local")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
																(require-any
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
																	(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
															(require-all
																(subpath "/AppleInternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))
															(require-all
																(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
																(subpath "/private/var/OOPJit")
																(extension "b'com.apple.sandbox.oopjit'"))
															(require-all
																(subpath "/usr/appleinternal")
																(require-any
																	(debug-mode)
																	(require-all
																		(debug-mode)
																		(require-any
																			(subpath "/AppleInternal")
																			(subpath "/usr/local/lib")))))))
													(require-all
														(extension "b'com.apple.sandbox.system-group'")
														(require-any
															(require-all
																(entitlement-is-present "b'com.apple.security.system-groups'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
															(require-all
																(entitlement-is-present "b'com.apple.security.system-group-containers'")
																(require-any
																	(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
																	(require-all
																		(literal "/private/var/containers/Shared/SystemGroup/")
																		(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))))))))))
			(require-all
				(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))
				(extension "b'com.apple.revisiond.staging'")))))
(allow file-test-existence
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
(allow file-write*
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-all
		(entitlement-is-bool-true "b'com.apple.Contacts.database-allow'")
		(extension "b'com.apple.tcc.kTCCServiceAddressBook'")
		(require-any
			(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(literal-prefix "${HOME}/Library/AddressBook/")
					(require-all
						(extension "b'com.apple.revisiond.staging'")
						(require-any
							(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
							(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))))))
	(require-all
		(vnode-type REGULAR-FILE)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(vnode-type DIRECTORY)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(vnode-type SYMLINK)
		(extension "b'com.apple.revisiond.staging'")
		(require-any
			(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
			(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.sandbox.application-group'")
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
	(require-all
		(extension "b'com.apple.fileprovider.read-write'")
		(require-any
			(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(literal-prefix "${HOME}/Library/Preferences/com.apple.springboard.plist")
		(literal-prefix "${ANY_USER_HOME}/Library/Caches/GeoServices/tguid.bin")
		(literal-prefix "${HOME}/Library/Caches/DateFormats.plist")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(process-attribute is-apple-signed-executable)
				(subpath-prefix "${HOME}/Library/Caches/com.apple.keyboards"))
			(require-all
				(extension "b'com.apple.fileprovider.read-write'")
				(require-any
					(require-any (subpath-prefix "${ANY_USER_HOME}/tmp/com.apple.fileproviderd")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/com[UNSUPPORTED]apple[UNSUPPORTED]fileproviderd/?"))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Application Support/Collaboration/com.apple.iWork/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension "b'com.apple.classkit.read-write'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/ClassKit/?")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/ClassKit$")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(subpath-prefix "${HOME}/Library/Mobile Documents")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
					(extension "b'com.apple.librarian.ubiquity-container'")))
			(require-all
				(vnode-type REGULAR-FILE)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))
			(require-all
				(vnode-type DIRECTORY)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(vnode-type SYMLINK)
				(extension "b'com.apple.revisiond.staging'")
				(require-any
					(subpath-prefix "${FRONT_USER_HOME}/.DocumentRevisions-V100/staging")
					(require-any (subpath "/private/var/.DocumentRevisions-V100/staging")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/[UNSUPPORTED]DocumentRevisions-V100/staging/?"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents")
			(require-all
				(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry")
				(process-attribute is-apple-signed-executable))
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/euser[0-9]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/[-0-9A-F]+/Library/DeviceRegistry/[-0-9A-Z]+$" #"^/private/var/Users/[^/]+/Library/DeviceRegistry/[-0-9A-Z]+$")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(literal-prefix "${HOME}/Library/Caches/com.apple.DictionaryServices"))
			(require-all
				(literal "/private/var/")
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))
			(require-all
				(require-all (require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.UIKit.plist"))
(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.Accessibility.plist")))
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${HOME}/Library/Mobile Documents")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents"))))))
(allow file-write-data
	(literal "/dev/aes_0")
	(require-all
		(vnode-type SOCKET)
		(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea"))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-unlink
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(extension "b'com.apple.identityservices.deliver'")
		(subpath-prefix "${FRONT_USER_HOME}/Library/IdentityServices"))
	(require-all
		(extension "b'com.apple.sandbox.oopjit'")
		(subpath "/private/var/OOPJit")))
(allow file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-quota-stat)
(allow fs-quota-sync)
(allow fs-snapshot-mount)
(allow iokit-get-properties)
(allow iokit-open-user-client
	(require-any (iokit-user-client-class "IOAccelDevice2")
(iokit-user-client-class "IOAccelContext2")
(iokit-user-client-class "IOAccelSharedUserClient2"))
	(iokit-user-client-class "IOGPUDeviceUserClient")
	(iokit-user-client-class "IOSurfaceSendRight")
	(require-any (iokit-user-client-class "H11ANEInDirectPathClient")
(iokit-user-client-class "AppleVirtIONeuralEngineDeviceUserClient"))
	(iokit-user-client-class "AppleJPEGDriverUserClient")
	(require-any (iokit-user-client-class "IOAccelDevice")
(iokit-user-client-class "IOAccelContext")
(iokit-user-client-class "IOAccelSubmitter2")
(iokit-user-client-class "IOAccelSharedUserClient"))
	(iokit-user-client-class "IOSurfaceAcceleratorClient")
	(iokit-user-client-class "AGXCommandQueue")
	(iokit-user-client-class "IOMobileFramebufferUserClient")
	(iokit-user-client-class "AGXSharedUserClient")
	(iokit-user-client-class "AGXDevice")
	(iokit-user-client-class "IOSurfaceRootUserClient")
	(iokit-user-client-class "AppleKeyStoreUserClient")
	(iokit-user-client-class "IOHIDEventServiceFastPathUserClient")
	(require-any (iokit-connection "IOGPU")
(iokit-connection "IOGraphicsAccelerator2"))
	(extension "b'com.apple.security.exception.iokit-user-client-class'")
	(iokit-user-client-class "RootDomainUserClient")
	(require-all
		(process-attribute is-apple-signed-executable)
		(iokit-user-client-class "IOHIDLibUserClient")))
(allow iokit-open-service)
(allow ipc-posix-sem*
	(semaphore-owner self))
(allow ipc-posix-sem-create
	(require-not (ipc-posix-name "purplebuddy.sentinel")))
(allow ipc-posix-sem-open
	(require-any (ipc-posix-name "purplebuddy.sentinel")
(ipc-posix-name "containermanagerd.fb_check")))
(allow ipc-posix-shm-write-create
	(ipc-posix-name))
(allow lsopen)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.wcd")
	(global-name "com.apple.springboard.blockableservices")
	(global-name "com.apple.coremedia.compressionsession")
	(global-name "com.apple.server.bluetooth.le.pipe.xpc")
	(global-name "com.apple.certui.relay")
	(require-any (global-name "com.apple.mDNSResponder")
(global-name "com.apple.instruments.server.mig"))
	(global-name "com.apple.replayd")
	(require-any (global-name "com.apple.ReportCrash")
(global-name "com.apple.ReportCrash.StackShot")
(global-name "com.apple.ReportCrash.SafetyNet")
(global-name "com.apple.ReportCrash.DirectoryService"))
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(global-name "com.apple.server.bluetooth.le.att.xpc")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(require-any (xpc-service-name "com.apple.iWorkFileFormat")
(xpc-service-name "com.apple.CompassCalibration")
(xpc-service-name "com.apple.CallKit.CallDirectory")
(xpc-service-name "com.apple.SafariServices.ContentBlockerLoader"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(require-any (global-name "com.apple.iapd.distributednotification.server")
(global-name "com.apple.iap2d.distributednotification.server"))
	(require-any (global-name "com.apple.prdaily")
(global-name "com.apple.fileprovider.pushkit")
(global-name "com.apple.gizmoappd")
(global-name "com.apple.gamed.note")
(global-name "com.apple.datamigrator.dz")
(global-name "com.apple.distributed_notifications@0v3")
(global-name "com.apple.iapauthd")
(global-name "com.apple.itunescloudd.tcchelper")
(global-name "com.apple.vsassetd")
(global-name "com.apple.videoconference.avconference")
(global-name "com.apple.AdSheetPad.server")
(global-name "com.apple.AdSheetPhone.server")
(global-name "com.apple.scrod")
(global-name "com.apple.sandboxd")
(global-name "com.apple.springboard.watchdogserver")
(global-name "com.apple.weibod.server")
(global-name "com.apple.wapi.client")
(global-name "com.apple.watchconnectivity.complication")
(global-name "com.apple.cvmsCompAgent_armv7")
(global-name "com.apple.coremedia.wirelessdisplay")
(global-name "com.apple.coremedia.wirelessdisplayserver")
(global-name "com.apple.MediaControl.daemon")
(global-name "com.apple.MobileFileIntegrity")
(global-name "com.apple.Music.MPMusicPlayerMigServer")
(global-name "com.apple.telephonyutilities.remotelogdaemon")
(global-name "com.apple.telephonyutilities.callservicesdaemon.voip")
(global-name "com.apple.bypassBasebandAutoBooter.msgport")
(global-name "com.apple.backboard.watchdog")
(global-name "com.apple.backboard.workspaceserverconnection")
(global-name "com.apple.appleprofilepolicyd")
(global-name "com.apple.ait.client")
(global-name "com.apple.airplay.sender.xpc")
(global-name "com.apple.audio.AudioFileServer")
(global-name "com.apple.audio.AudioConverterServer")
(global-name "com.apple.mediastream.sharing-nowake")
(global-name "com.apple.managedconfiguration.mdmdservice")
(global-name "com.apple.mobileipod.MPMusicPlayerControllerInternal")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServer")
(global-name "com.apple.mobileipod.MPMusicPlayerMigServerExists"))
	(global-name "com.apple.coremedia.videocodecd.decompressionsession")
	(global-name "com.apple.passd.assertions")
	(global-name "com.apple.librariand")
	(global-name "com.apple.mobile.installd")
	(require-any (global-name "com.apple.coremedia.cpe.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.cpe.xpc"))
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.networking.captivenetworksupport")
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.WebBookmarks.webbookmarksd")
	(global-name "com.apple.locationd.synchronous")
	(global-name "com.apple.coremedia.decompressionsession")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.bird")
	(global-name "com.apple.VoiceOverTouch")
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(require-any (global-name "com.apple.coremedia.mutablemovie.xpc")
(global-name "com.apple.coremedia.mutablecomposition.xpc")
(global-name "com.apple.coremedia.mediaparserd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablemovie.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.mutablecomposition.xpc"))
	(global-name "com.apple.contactsd")
	(global-name "com.apple.safarifetcherd")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.coremedia.videocodecd.decompressionsession.xpc")
	(require-any (global-name "com.apple.iap2d")
(global-name "com.apple.iaptransportd"))
	(global-name "com.apple.coremedia.videocodecd.compressionsession")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.calaccessd")
	(global-name "com.apple.calaccessd.xpc")
	(global-name "com.apple.coremedia.videocodecd.compressionsession.xpc")
	(global-name "com.apple.aps.alertprovider.xpc")
	(extension "b'com.apple.security.exception.mach-lookup.local-name'")
	(extension "b'com.apple.security.exception.mach-lookup.global-name'")
	(require-any (global-name "com.apple.personad.xpc")
(global-name "com.apple.suggestd.mail"))
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.coremedia.audiodeviceclock")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.commcenter.mobile-helper")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.mobilemail.services.xpc")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.mobile.keybagd.xpc")
	(xpc-service-name "com.apple.WebKit.WebContent.CaptivePortal")
	(global-name "com.apple.unfreed")
	(global-name "com.apple.passd.in-app-payment")
	(global-name "com.apple.MobileInternetSharing")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(xpc-service-name "com.apple.WebKit.GPU")
	(global-name "com.apple.locationd.spi")
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(global-name "com.apple.apsd")
	(require-any (xpc-service-name "com.apple.WebKit.Networking")
(xpc-service-name "com.apple.WebKit.WebAuthn")
(xpc-service-name "com.apple.WebKit.WebContent"))
	(global-name "com.apple.lskdd")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.gamed")
	(global-name "com.apple.nesessionmanager")
	(global-name "com.apple.itdbprep.server")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.bird.token")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.imavagent.embedded.auth")
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "PurplePPTServer")
	(global-name "com.apple.iapauthd.xpc")
	(global-name "com.apple.parsecd")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.videoconference.camera")
	(global-name "com.apple.syncdefaultsd")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.notificationcenter.widgetcontrollerconnection")
	(global-name "com.apple.atc")
	(global-name "com.apple.osanalytics.osanalyticshelper")
	(global-name "com.apple.midiserver.io")
	(global-name "com.apple.twitterd")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(require-any (global-name "com.apple.iTunesStore.daemon.public")
(global-name "com.apple.iTunesStore.daemon.notifications.public"))
	(global-name "PurpleSystemAppPort")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.GameController.gamecontrollerd")
	(global-name "com.apple.locationd.registration")
	(require-any (global-name "com.apple.accountsd.authmanager")
(global-name "com.apple.accountsd.accessmanager"))
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.kvsd")
	(global-name "com.apple.ProgressReporting")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.healthd.restriction")
	(global-name "com.apple.server.bluetooth")
	(global-name "com.apple.mediastream.sharing")
	(global-name "com.apple.twitterd.server")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.FSEvents")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.coresymbolicationd")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.springboard")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.cache_delete")
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.audio.AudioUnitServer")
	(global-name "com.apple.awdd")
	(global-name "com.apple.midiserver")
	(global-name "com.apple.homed.xpc")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.springboard.icongeneration")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.MobileAccessoryUpdater")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.accountsd.oauthsigner")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(global-name "com.apple.spotlight.SearchAgent")
	(global-name "com.apple.healthd.server")
	(global-name "com.apple.webfilterd")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.coremedia.videoqueue")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.devicecheckd")
	(global-name "com.apple.iaptransportd.xpc")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.VoiceOverTouch.xpc")
	(global-name "com.apple.corerecents.recentsd")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(xpc-service-name "com.apple.MapKit.SnapshotService")
	(global-name "com.apple.gamecenter")
	(global-name "PurpleSystemEventPort")
	(global-name "com.apple.networkd")
	(global-name "com.apple.bulletindistributord.server")
	(global-name "com.apple.Music.MPMusicPlayerControllerInternal")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.mobile.softwareupdated")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.iapd")
	(require-any (global-name "com.apple.commcenter.dm-helper")
(global-name "com.apple.callkit.callsourcehost"))
	(global-name "com.apple.webinspector")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.Music.MPMusicPlayerMigServerExists")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.medialibraryd.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(extension "b'com.apple.sandbox.application-group'")
	(xpc-service-name "com.apple.siri.context.service")
	(xpc-service-name "com.apple.intents.intents-helper")
	(require-any (xpc-service-name "com.apple.OSLogService")
(xpc-service-name "com.apple.mscamerad-xpc")
(xpc-service-name "com.apple.ModelIO.AssetLoader")
(xpc-service-name "com.apple.WorkoutKitXPCService")
(xpc-service-name "com.apple.avkit.SharedPreferences")
(xpc-service-name "com.apple.DocumentManagerCore.Rename")
(xpc-service-name "com.apple.uifoundation-bundle-helper")
(xpc-service-name "com.apple.BarcodeSupport.ParsingService")
(xpc-service-name "com.apple.datadetectors.AddToRecentsService")
(xpc-service-name "com.apple.SafariFoundation.AutoFillHelper")
(xpc-service-name "com.apple.SafariFoundation.CredentialProviderExtensionHelper"))
	(xpc-service-name "com.apple.accessibility.AccessibilityUIServer")
	(require-any (global-name "com.apple.arkit.service.location")
(global-name "com.apple.arkit.service.geoTracking"))
	(xpc-service-name "com.apple.imfoundation.IMRemoteURLConnectionAgent")
	(xpc-service-name "com.apple.textkit.nsattributedstringagent")
	(xpc-service-name "com.apple.MTLCompilerService")
	(xpc-service-name "com.apple.accessibility.heard")
	(require-any (global-name "com.apple.ptpcamerad")
(global-name "com.apple.widget.pushkit")
(global-name "com.apple.relatived.public")
(global-name "com.apple.naturallanguaged")
(global-name "com.apple.translation.text")
(global-name "com.apple.ThreadNetwork.xpc")
(global-name "com.apple.gputools.producer")
(global-name "com.apple.VoiceOverTouch.drag.xpc")
(global-name "com.apple.uikit.eyedropperd.service")
(global-name "com.apple.SensorKit.SKMediaEventsHelper")
(global-name "com.apple.FontServices.FontProviderLoader")
(global-name "com.apple.DragUI.druid.source")
(global-name "com.apple.DragUI.druid.destination")
(global-name "com.apple.storekitservice")
(global-name "com.apple.storekit.configuration.xpc")
(global-name "com.apple.CoreMLModelSecurityService")
(global-name "com.apple.ClockKit.CLKWatchFaceLibrary")
(global-name "com.apple.IncomingCallNotifications.ICNotificationManagerHost")
(global-name "com.apple.fullkeyboardaccess.drag.xpc")
(global-name "com.apple.financed.service.financestore")
(global-name "com.apple.UIKit.OverlayUI.services")
(global-name "com.apple.UIKit.SecureControlService")
(global-name "com.apple.USDLib.FormatLoader")
(global-name "com.apple.USDKit.FormatLoader")
(global-name "com.apple.homed.xpc.accessory-setup")
(global-name "com.apple.handwritingd.pksettings")
(global-name "com.apple.handwritingd.pkanalytics")
(global-name "com.apple.managedappdistributiond.xpc")
(global-name "com.apple.metrickit.xpc")
(global-name "com.apple.metricmeasurement.MetricMeasurementHelper")
(global-name "com.apple.icprefd-xpc")
(global-name "com.apple.inputservice.keyboardui")
(global-name "com.apple.inputservice.input-ui-host")
(global-name "com.apple.iMessageAppsViewService.warmup-connection")
(global-name "com.apple.assistivetouchd.drag.xpc")
(global-name "com.apple.ap.promotedcontent.attributionservice")
(global-name "com.apple.ap.adprivacyd.attribution")
(global-name "com.apple.ap.adprivacyd.trackingtransparency")
(global-name "com.apple.chrono.widgetcenterconnection")
(global-name "com.apple.corelocation.locationUI")
(global-name "com.apple.commandandcontrol.drag.xpc")
(global-name "com.apple.contactsd.support")
(global-name "com.apple.contactsd.contact-provider")
(global-name "com.apple.dasd.end-prewarm")
(global-name "com.apple.dt.xctestd.target")
(global-name "com.apple.dt.testmanagerd.runner")
(global-name "com.apple.dt.testmanagerd.uiprocess")
(global-name "com.apple.donotdisturb.availability.service")
(global-name "com.apple.donotdisturb.appconfiguration.service")
(global-name "com.apple.AppTrackingTransparency.EnforcementService")
(global-name "com.apple.AuthenticationServicesCore.AuthenticationServicesAgent"))
	(xpc-service-name "com.apple.AGXCompilerService")
	(global-name "com.apple.sessionservices")
	(xpc-service-name "com.apple.PrintKit.PrinterTool")
	(global-name "com.apple.securityd")
	(global-name "com.apple.triald.namespace-management")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.sharingd.nsxpc")
	(require-any (global-name "com.apple.cvhwa.xpc")
(global-name "com.apple.Safari.SafeBrowsing.Service"))
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.dockaccessoryd")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.vibrationmanagerd")
	(global-name "com.apple.testmanagerd")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.passd.library")
	(global-name "com.apple.commcenter.coretelephony.xpc")
	(global-name "com.apple.backboard.animation-fence-arbiter")
	(require-any (global-name "com.apple.iTunesStore.daemon")
(global-name "com.apple.iTunesStore.daemon.deatchwatch")
(global-name "com.apple.iTunesStore.daemon-notifications"))
	(global-name "com.apple.siri.VoiceShortcuts.xpc")
	(global-name "com.apple.SystemConfiguration.configd")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.handwritingd.remoterecognition")
	(global-name "com.apple.geoanalyticsd")
	(global-name "com.apple.voiceservices.tts")
	(global-name "com.apple.nearbyd.xpc.nearbyinteraction")
	(global-name "com.apple.gpumemd.source")
	(global-name "com.apple.mobileasset.autoasset")
	(global-name "com.apple.ClipServices.clipserviced")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.duetactivityscheduler")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.SiriTTSService.TrialProxy")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.iTunesStore.daemon.public")
(global-name "com.apple.iTunesStore.daemon.notifications.public"))
	(global-name "com.apple.ctkd.slot-client")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.contactsd")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.corespotlightservice")
	(global-name "com.apple.trustd")
	(global-name "com.apple.accessories.transport-server")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.librariand")
	(global-name "com.apple.shazamd")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.webprivacyd")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.mobileassetd")
	(global-name "com.apple.mediaanalysisd.analysis")
	(global-name "com.apple.AppSSO.service-xpc")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.mediaanalysisd.service.public")
	(global-name "com.apple.audio.AudioComponentPrefs")
	(global-name "com.apple.AccessibilityUIServer")
	(require-any (global-name "com.apple.geod")
(global-name "com.apple.nanomaps.xpc.GeoServices"))
	(require-any (global-name "ScripterServer")
(global-name "UIASTNotificationCenter")
(global-name "com.apple.ondemandd.client")
(global-name "com.apple.hid.PencilHaptics")
(global-name "com.apple.sharing.sharesheet")
(global-name "com.apple.attributionkitd.xpc")
(global-name "com.apple.airplaydiagnostics.server"))
	(global-name "com.apple.synapse.backlink-service")
	(global-name "com.apple.cvmsServ")
	(global-name "com.apple.usernotifications.remotenotificationservice")
	(global-name "com.apple.businessservicesd")
	(global-name "com.apple.appleneuralengine")
	(global-name "com.apple.UIKit.statusbarserver")
	(global-name "com.apple.ScreenTimeAgent")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.bird")
	(global-name "com.apple.ak.authorizationservices.xpc")
	(global-name "com.apple.cache_delete.public")
	(global-name "com.apple.assistant.dictation")
	(global-name "com.apple.remindd")
	(global-name "com.apple.nanoprefsync")
	(global-name "com.apple.PointerUI.pointeruid.service")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.backgroundassets.user")
	(global-name "com.apple.DeviceAccess.xpc")
	(global-name "com.apple.storekitd")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.TextInput.lexicon-server")
	(global-name "com.apple.fontservicesd")
	(global-name "com.apple.identityservicesd.embedded.auth")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.audio.AudioQueueServer")
	(global-name "com.apple.mediaremoted.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.backboard.display.services")
	(global-name "com.apple.FileCoordination")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(require-any (global-name "com.apple.TextInput.emoji")
(global-name "com.apple.TextInput.shortcuts")
(global-name "com.apple.TextInput.preferences"))
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.mobileassetd.v2")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(global-name "com.apple.iohideventsystem")
	(global-name "com.apple.PowerManagement.control")
	(require-any (global-name "com.apple.iapd.xpc")
(global-name "com.apple.iap2d.xpc"))
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.bird.token")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.assetsd.changehub")
	(global-name "com.apple.linkd.transcript")
	(global-name "com.apple.revisiond")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.cloudd")
	(global-name "com.apple.iconservices")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.frontboard.workspace")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.ckdiscretionaryd")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.iaptransportd.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.accessories.externalaccessory-server")
	(global-name "com.apple.springboard.services")
	(global-name "com.apple.pasteboard.pasted")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.audio.AURemoteIOServer")
	(global-name "com.apple.photos.service")
	(global-name "com.apple.accessibility.gax.backboard")
	(global-name "com.apple.PersistentURLTranslator.Gatekeeper")
	(global-name "com.apple.itunesstored.xpc")
	(global-name "com.apple.usernotifications.usernotificationservice")
	(global-name "com.apple.backboard.hid.services")
	(global-name "com.apple.accessibility.mediaaccessibilityd")
	(global-name "com.apple.voiceservices.keepalive")
	(global-name "com.apple.assistant.analytics")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.FileProvider")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.iap2d.ExternalAccessory.distributednotification.server")
	(global-name "com.apple.iphone.axserver-systemwide")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.accessibility.AXBackBoardServer")
	(global-name "com.apple.dt.automationmode.reader")
	(global-name "com.apple.TextInput")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(require-any (global-name "com.apple.TextInput.rdt")
(global-name "com.apple.TextInput.image-cache-server"))
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.audio.hapticd")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.quicklook.ThumbnailsAgent")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.mobilecheckpoint.checkpointd")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.coremedia.player.xpc")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.audioanalyticsd")
	(global-name "com.apple.UIKit.KeyboardManagement.hosted")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(require-any (global-name "com.apple.linkd.autoShortcut")
(global-name "com.apple.dictationd.recognition")
(global-name "com.apple.speech.localspeechrecognition")
(global-name "com.apple.KeyboardServices.TextReplacementService"))
	(global-name "com.apple.backboard.hid-services.xpc")
	(global-name "com.apple.backboard.TouchDeliveryPolicyServer")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.progressd")
	(global-name "com.apple.ckdiscretionaryd.debug")
	(xpc-service-name "com.apple.audio.toolbox.reporting.service")
	(require-any (global-name "com.apple.cloudd.debug")
(global-name "com.apple.cloudkit.partlycloudd.debug"))
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(xpc-service-name "com.apple.MediaPlayer.RemotePlayerService")
	(global-name "com.apple.UIKit.pasteboardd")
	(global-name "com.apple.audio.SystemSoundServer-iOS")
	(global-name "com.apple.usernotifications.listener")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.NPKCompanionAgent.library")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.callkit.callcontrollerhost")
	(xpc-service-name "com.apple.iconservices")
	(global-name "com.apple.frontboard.systemappservices")
	(xpc-service-name)
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(xpc-service-name "com.apple.tonelibraryd")
	(xpc-service-name "com.apple.externalaccessory.WACEAService")
	(xpc-service-name "com.apple.audio.analytics.service")
	(local-name "com.apple.assistant.contextprovider.")
	(xpc-service-name)
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true "b'com.apple.authkit.client'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
			(entitlement-is-bool-true "b'com.apple.authkit.client.private'")))
	(require-all
		(global-name "com.apple.SafetyKit")
		(entitlement-is-present "b'com.apple.developer.severe-vehicular-crash-event'"))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(global-name "com.apple.SharedWebCredentials")
			(xpc-service-name "com.apple.LORemoteUIPinService")
			(global-name "com.apple.dataaccess.dataaccessd")
			(global-name "com.apple.exchangesyncd")
			(xpc-service-name "com.apple.ctcategories.service")))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
			(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
			(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
			(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")
			(entitlement-is-bool-true "b'com.apple.networkd_privileged'")))
	(require-all
		(global-name "com.apple.weatherkit.authservice")
		(entitlement-is-present "b'com.apple.developer.weatherkit'"))
	(require-all
		(global-name "com.apple.merchantd.identity")
		(require-any
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.display'")
			(entitlement-is-present "b'com.apple.developer.proximity-reader.identity.read'")))
	(require-all
		(global-name "com.apple.callkit.networkextension.voip")
		(entitlement-is-present "b'com.apple.developer.networking.networkextension'"))
	(require-all
		(global-name "com.apple.MomentsUIService")
		(entitlement-is-present "b'com.apple.developer.journal.allow'"))
	(require-all
		(debug-mode)
		(require-any
			(global-name "com.apple.coremedia.videocodecd.decompressionsession")
			(global-name "com.apple.coremedia.videocodecd.compressionsession")
			(require-any (global-name "com.apple.EventTimingProfileService")
(global-name "com.apple.swiftuitracingsupport.xpc")
(global-name "com.apple.JetTracingSupport.JetTracingService"))))
	(require-all
		(global-name "com.apple.gputools.service")
		(debug-mode))
	(require-all
		(global-name "com.apple.seserviced.credential.manager")
		(entitlement-is-present "b'com.apple.developer.secure-element-credential'"))
	(require-all
		(global-name "com.apple.financed.service.coredatastore")
		(require-any
			(entitlement-is-present "b'com.apple.finance.private'")
			(entitlement-is-present "b'com.apple.developer.financekit'")))
	(require-all
		(global-name "com.apple.coreidvd.digital-presentment.xpc")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment.merchant-identifiers'")
		(entitlement-is-present "b'com.apple.developer.in-app-identity-presentment'"))
	(require-all
		(global-name "com.apple.assessmentagent")
		(entitlement-is-present "b'com.apple.developer.automatic-assessment-configuration'"))
	(require-all
		(global-name "com.apple.ExposureNotification")
		(entitlement-is-bool-true "b'com.apple.developer.exposure-notification'"))
	(require-all
		(global-name "com.apple.seserviced.session")
		(entitlement-is-bool-true "b'com.apple.developer.carkey.session'"))
	(require-all
		(global-name-regex #"^com[.]apple[.]uikit[.]viewservice[.].+")
		(global-name "com.apple.uikit.viewservice."))
	(require-all
		(xpc-service-name-regex #".+")
		(require-any
			(global-name "com.apple.managedconfiguration.profiled.public")
			(global-name "com.apple.system.logger")
			(global-name "com.apple.mobilegestalt.xpc")
			(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
			(global-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.containermanagerd")
			(global-name "com.apple.containermanagerd.system")
			(local-name "com.apple.cfprefsd.agent")
			(global-name "com.apple.diagnosticd")
			(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
			(global-name "com.apple.logd")
			(global-name "com.apple.logd.events")
			(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
			(global-name "com.apple.lsd.mapdb")
			(global-name "com.apple.lsd.open")
			(global-name "com.apple.distributed_notifications@1v3")
			(global-name "com.apple.analyticsd")
			(global-name "com.apple.ctkd.token-client")
			(global-name "com.apple.CoreAuthentication.daemon")
			(global-name "com.apple.runningboard")
			(global-name "com.apple.system.libinfo.muser")
			(global-name "com.apple.lsd.openurl")
			(global-name "com.apple.tccd")
			(global-name "com.apple.lsd.advertisingidentifiers")
			(global-name "com.apple.aggregated")
			(global-name "com.apple.duetknowledged.activity")
			(require-all
				(global-name "com.apple.coreduetd.people")
				(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
			(require-all
				(global-name "com.apple.system.notification_center")
				(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.SharedWebCredentials")
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")))
			(require-all
				(global-name "com.apple.osanalytics.osanalyticshelper")
				(process-attribute is-apple-signed-executable)))))
(allow mach-task-name)
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow necp-client-open)
(allow network-inbound
	(local ip "*:*")
	(require-all
		(extension "b'com.apple.app-sandbox.read-write'")
		(require-any
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$")))))
(allow network-outbound
	(control-name "com.apple.flow-divert")
	(literal "/private/var/run/lockdown.sock")
	(require-all
		(extension "b'com.apple.app-sandbox.read-write'")
		(require-any
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
	(require-all
		(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(extension "b'com.apple.librarian.ubiquity-container'")
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
			(subpath-prefix "${HOME}/Library/Mobile Documents")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
	(require-all
		(require-not (remote tcp "localhost:873"))
		(require-not (remote tcp "localhost:62078"))
		(require-not (remote tcp "localhost:22"))
		(require-not (remote tcp "localhost:23"))
		(require-any
			(control-name "com.apple.netsrc")
			(control-name "com.apple.network.statistics")
			(remote ip "*:*")
			(remote udp "*:443")
			(literal "/private/var/run/mDNSResponder")
			(literal "/private/var/run/syslog")
			(require-all
				(extension "b'com.apple.sandbox.application-group'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
						(subpath-prefix "${FRONT_USER_HOME}"))))
			(require-all
				(extension "b'com.apple.app-sandbox.read-write'")
				(require-any
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.private.librarian.container-proxy'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(extension "b'com.apple.librarian.ubiquity-container'")
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Mobile Documents/?")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/File Provider Storage/?")
					(subpath-prefix "${HOME}/Library/Mobile Documents")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/File Provider Storage$"))))
			(require-all
				(vnode-type SOCKET)
				(literal-prefix "${FRONT_USER_HOME}/Library/ExternalAccessory/ea")))))
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow process-codesigning)
(allow process-info-codesignature
	(process-attribute is-apple-signed-executable)
	(entitlement-is-bool-true "b'com.apple.security.exception.process-info'"))
(allow socket-ioctl)
(allow socket-option-get)
(allow socket-option-set)
(allow syscall-unix
	(c1 6011 5e94 df7e))
(allow syscall-mach)
(allow syscall-mig)
(allow sysctl-read
	(sysctl-name "net.statistics")
	(sysctl-name "net.routetable.")
	(sysctl-name "kern.ipc.maxsockbuf")
	(sysctl-name "kern.nisdomainname"))
(allow system-fcntl)
(allow system-fsctl
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 93))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "h" 31))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 3))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 72)))
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-necp-client-action)
(allow system-privilege)
(allow user-preference-read
	(preference-domain "com.apple.carrier")
	(preference-domain "com.apple.dataaccess.dataaccessd")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.appleaccount")
	(require-any (preference-domain "mediaremote")
(preference-domain "itdbprepserver")
(preference-domain "com.apple.nike")
(preference-domain "com.apple.certui")
(preference-domain "com.apple.XCTest")
(preference-domain "com.apple.iqagent")
(preference-domain "com.apple.gamekit")
(preference-domain "com.apple.voicemail")
(preference-domain "com.apple.adtracking")
(preference-domain "com.apple.VoiceMemos")
(preference-domain "com.apple.preferences.network")
(preference-domain "com.apple.preferences.datetime")
(preference-domain "com.apple.messagesbadgecontroller")
(preference-domain "com.apple.managedconfiguration.janitor")
(preference-domain "com.apple.mobiletimer")
(preference-domain "com.apple.mobilestoresettings")
(preference-domain "com.apple.mobile.SyncMigrator")
(preference-domain "com.apple.mobileme.fmf.assistant"))
	(preference-domain "com.apple.locationd")
	(preference-domain "com.apple.aggregated")
	(preference-domain "com.apple.LaunchServices")
	(preference-domain "com.apple.Metal")
	(preference-domain "com.apple.GameController")
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.lookup.shared")
	(preference-domain "com.apple.persistentconnection-mcc")
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.assistant.support")
	(preference-domain "com.apple.AdLib")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.CoreMotion")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.nanoprefsyncd")
	(preference-domain "com.apple.VoiceOverTouch")
	(preference-domain "com.apple.MapKit.internal")
	(preference-domain "com.apple.EmojiPreferences")
	(preference-domain "com.apple.imessage")
	(preference-domain "com.apple.imdsmsrecordstore")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.apsd")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.mms_override")
	(preference-domain "com.apple.WebUI")
	(require-any (preference-domain "com.apple.SwiftUI")
(preference-domain "com.apple.morphology")
(preference-domain "com.apple.LinearMediaKit")
(preference-domain "com.apple.Accessibility.speech"))
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.springboard")
	(preference-domain "com.apple.ConfigServer")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.itdbprep.server")
	(preference-domain "com.apple.mobilenotes")
	(preference-domain "com.apple.GEO")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.assistant.backedup")
	(preference-domain "com.apple.DataAccess.BehaviorOptions")
	(preference-domain "com.apple.mediaaccessibility")
	(preference-domain "com.apple.softwareupdateservicesd")
	(preference-domain "com.apple.avkit")
	(preference-domain "com.apple.airplay")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.camera")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.DataDeliveryServices")
	(preference-domain "com.apple.preferences-sounds")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.compass")
	(preference-domain "com.apple.mediaremote")
	(preference-domain "com.apple.mobilecal.alarmengine")
	(preference-domain "com.apple.madrid")
	(preference-domain "com.apple.telephonyutilities.dialassist")
	(preference-domain "com.apple.InputModePreferences")
	(preference-domain "com.apple.TTY")
	(preference-domain "com.apple.atc")
	(preference-domain "com.apple.SpeakSelection")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.youtubeframework")
	(preference-domain "com.apple.imagent")
	(preference-domain "com.apple.GMM")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.preferences.sounds")
	(preference-domain "com.apple.ubd")
	(preference-domain "com.apple.mobileslideshow")
	(preference-domain "com.apple.indigo")
	(preference-domain "com.apple.OTASyncState")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.opengl")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.Wallet.public")
	(preference-domain "com.apple.celestial")
	(preference-domain "com.apple.PencilKit")
	(preference-domain "com.apple.voiceservices")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.videos")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.keyboard.preferences")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.avfoundation.videoperformancehud")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.MobileAsset")
	(require-any (preference-domain "com.apple.mobilevpn")
(preference-domain "com.apple.network.eapclient.tls.TrustExceptions"))
	(preference-domain "com.apple.mobilecal")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.iapd")
	(preference-domain "com.apple.da")
	(preference-domain "com.apple.coreanimation")
	(preference-domain "com.apple.gamed")
	(require-all
		(preference-domain "com.apple.itunesstored")
		(process-attribute is-apple-signed-executable)
		(require-not (entitlement-is-bool-true "b'com.apple.itunesstored.private'")))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.security")
			(preference-domain "com.apple.morphology.internal")
			(preference-domain "com.apple.purplebuddy")
			(preference-domain "com.apple.Preferences")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'"))))
	(require-all
		(preference-domain "com.apple.groupactivities")
		(entitlement-is-bool-true "b'com.apple.developer.group-session'"))
	(require-all
		(preference-domain "com.apple.coremedia")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.coreaudio")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.avfoundation")
		(extension "b'com.apple.tcc.kTCCServicePhotos'"))
	(require-all
		(preference-domain "com.apple.corevideo")
		(extension "b'com.apple.tcc.kTCCServicePhotos'")))
(allow managed-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow process-exec-update-label)
