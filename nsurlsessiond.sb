(version 1)
(deny default)
(allow darwin-notification-post)
(allow dynamic-code-generation)
(allow file-clone)
(allow file-issue-extension
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension "b'com.apple.app-sandbox.read-write'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension "b'com.apple.app-sandbox.read'")
			(extension "b'com.apple.app-sandbox.read-write'")
			(extension "b'com.apple.quicklook.readonly'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
			(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
			(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
			(extension "b'com.apple.sharing.airdrop.readonly'")))
	(require-all
		(extension "b'com.apple.sandbox.executable'")
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(require-any
							(subpath "/System/Library")
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(require-any
							(subpath "/Library/RegionFeatures")
							(subpath "/System/Library")))))
			(require-all
				(require-any (extension-class "com.apple.STExtractionService")
(extension-class "com.apple.StreamingUnzipService"))
				(require-any
					(require-any (subpath "/private/var/MobileAsset/AssetsV2/downloadDir")
(subpath "/private/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/downloadDir")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(require-any (subpath "/private/var/MobileAsset/AssetsV2/downloadDir")
(subpath "/private/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/downloadDir")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets")))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(require-any
							(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
							(extension "b'com.apple.security.exception.files.absolute-path.read-write'")))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
					(subpath-prefix "${HOME}/Library/Cookies")
					(extension-class "com.apple.mediaserverd.read")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
					(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
					(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension "b'com.apple.sandbox.executable'"))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Cookies")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond"))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(extension "b'com.apple.fileprovider.read-write'"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(extension "b'com.apple.fileprovider.read-write'")))))
(allow file-link)
(allow file-lock)
(allow file-read*
	(subpath "/private/var/preferences/Logging")
	(require-any (literal "/private/var/db/DarwinDirectory/local/recordStore.data")
(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.sandbox.executable'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(subpath "/usr/lib")
			(subpath "/private/var/db/timezone")
			(subpath "/Library/RegionFeatures")
			(subpath "/usr/share")
			(subpath "/System/Library")
			(require-all
				(require-all (require-not (subpath "/private/var/logs/MobileMediaFactoryLogs"))
(require-not (subpath "/private/var/logs/MobileLibraryLogs")))
				(require-not (subpath "/private/var/logs/WirelessLibraryLogs"))
				(require-any
					(literal "/private/var/preferences/com.apple.networkd.plist")
					(require-any (literal "/private/var/tmp/AirTraffic")
(literal-prefix "${FRONT_USER_HOME}/tmp/AirTraffic")
(subpath-prefix "${HOME}/Library/com.apple.nsurlsessiond-launchd")
(subpath-prefix "${HOME}/Library/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/Logs/com.apple.nsurlsessiond")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/com.apple.nsurlsessiond"))
					(require-any (subpath "/private/var/MobileAsset/AssetsV2/downloadDir")
(subpath "/private/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/downloadDir")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond"))
					(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles")
					(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
					(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
					(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
					(require-any (subpath "/AppleInternal/Applications")
(subpath "/System/Developer/Applications")
(subpath "/private/var/personalized_automation/Applications")
(regex #"/private/var/personalized_factory/[UNSUPPORTED]+/Applications/?")
(regex #"/private/var/factory_mount/[UNSUPPORTED]+/Applications/?"))
					(subpath "/Developer/Applications")
					(literal "/private/var/preferences/com.apple.security.plist")
					(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles")
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
					(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles")
					(subpath "/private/var/personalized_debug/Applications")
					(subpath "/Applications")
					(subpath-prefix "${HOME}/Library/Cookies")
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
					(require-all
						(vnode-type REGULAR-FILE)
						(require-any
							(extension "b'com.apple.nsurlsessiond.readonly'")
							(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.nsurlsessiond")))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.nsurlsessiond"))
					(require-all
						(literal "/private/var/")
						(require-any
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
							(literal "/private/var/db/com.apple.networkextension.tracker-info")
							(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
							(require-all
								(subpath-prefix "${HOME}")
								(require-any
									(regex #"^/private/var/mobile/Media/Downloads$" #"^/private/var/mobile/Media/Downloads/" #"^/private/var/mobile/Media/[^/]+/Downloads$" #"^/private/var/mobile/Media/[^/]+/Downloads/" #"^/private/var/mobile/Media/Purchases$" #"^/private/var/mobile/Media/Purchases/" #"^/private/var/mobile/Media/[^/]+/Purchases$" #"^/private/var/mobile/Media/[^/]+/Purchases/" #"^/private/var/mobile/Media/ManagedPurchases$" #"^/private/var/mobile/Media/ManagedPurchases/" #"^/private/var/mobile/Media/[^/]+/ManagedPurchases$" #"^/private/var/mobile/Media/[^/]+/ManagedPurchases/" #"^/private/var/euser[0-9]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/euser[0-9]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/" #"^/private/var/[-0-9A-F]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/[-0-9A-F]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/" #"^/private/var/Users/[^/]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/Users/[^/]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/")
									(regex #"^/private/var/mobile/Media/Music/Cache/" #"^/private/var/mobile/Media/Music/Cache$" #"^/private/var/mobile/Media/[^/]+/Music/Cache/" #"^/private/var/mobile/Media/[^/]+/Music/Cache$" #"^/private/var/mobile/Media/Music/Downloads/" #"^/private/var/mobile/Media/Music/Downloads$" #"^/private/var/mobile/Media/[^/]+/Music/Downloads/" #"^/private/var/mobile/Media/[^/]+/Music/Downloads$" #"^/private/var/euser[0-9]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/euser[0-9]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$" #"^/private/var/[-0-9A-F]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/[-0-9A-F]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$" #"^/private/var/Users/[^/]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/Users/[^/]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$")
									(regex #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
									(require-all
										(vnode-type REGULAR-FILE)
										(regex #"^/private/var/mobile/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/euser[0-9]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/[-0-9A-F]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/Users/[^/]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/"))))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-any
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
									(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
									(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
									(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets")
									(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-any
									(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$")
									(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$")))))
					(require-all
						(entitlement-is-present "b'com.apple.private.networkextension.configuration'")
						(literal "/private/var/preferences/com.apple.networkextension.plist"))
					(require-all
						(require-not (literal-prefix "${HOME}/Library/Preferences/com.apple.coremedia"))
						(require-any
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(literal "/dev/null")
							(literal "/dev/aes_0")
							(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
							(literal "/dev/urandom")
							(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
							(subpath "/private/var/db/datadetectors/sys")
							(literal "/dev/dtracehelper")
							(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
							(literal "/dev/zero")
							(literal "/dev/random")
							(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
							(require-all
								(entitlement-is-bool-true "b'com.apple.coreduetd.people'")
								(require-any
									(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
									(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
							(require-all
								(uid 0)
								(literal "/private/etc/master.passwd"))
							(require-all
								(entitlement-is-bool-true "b'com.apple.security.system-container'")
								(extension "b'com.apple.sandbox.system-container'")
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
								(require-any
									(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
									(require-all
										(literal "/private/var/containers/Data/System/")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
								(extension "b'com.apple.sandbox.system-group'")
								(entitlement-is-present "b'com.apple.security.system-groups'")
								(entitlement-is-present "b'com.apple.security.system-group-containers'"))
							(require-all
								(extension "b'com.apple.sandbox.system-group'")
								(require-any
									(require-all
										(entitlement-is-present "b'com.apple.security.system-groups'")
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
									(require-all
										(entitlement-is-present "b'com.apple.security.system-group-containers'")
										(require-any
											(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
											(require-all
												(literal "/private/var/containers/Shared/SystemGroup/")
												(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
							(require-all
								(entitlement-is-bool-true "b'com.apple.private.logging.diagnostic'")
								(extension "b'com.apple.logd.read-only'")
								(require-any
									(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))
									(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))))
							(require-all
								(vnode-type BLOCK-DEVICE)
								(vnode-type CHARACTER-DEVICE)
								(require-any
									(subpath "/private/preboot/Cryptexes")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.bin")
									(literal "/")
									(literal "/private/etc/fstab")
									(literal "/private/preboot")
									(subpath "/System/Developer")
									(subpath "/private/var/MobileAsset/PreinstalledAssetsV2/InstallWithOs")
									(literal "/private")
									(subpath "/Developer")
									(literal "/private/preboot/cryptex1/current/RestoreVersion.plist")
									(subpath "/System/Library/PrivateFrameworks")
									(literal "/private/etc/passwd")
									(literal-prefix "${FRONT_USER_HOME}/Library/Application Support/com.apple.palette.green.plist")
									(literal "/private/etc/services")
									(require-any (literal "/private/etc/group")
(literal "/private/etc/protocols"))
									(subpath "/System/Library/Frameworks")
									(literal "/System")
									(subpath "/System/Cryptexes")
									(literal "/private/preboot/cryptex1/current/SystemVersion.plist")
									(literal "/private/etc/hosts")
									(require-all
										(process-attribute is-apple-signed-executable)
										(require-any
											(literal "/private/var/preferences/SystemConfiguration/preferences.plist")
											(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
											(subpath "/usr/libexec")
											(require-any (literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/CloudConfigurationSetAsideDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationDetails.plist")
(literal-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/CloudConfigurationSetAsideDetails.plist"))
											(require-all
												(subpath "/usr/local/libexec")
												(debug-mode))))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/usr/local")
											(subpath "/AppleInternal")
											(subpath "/usr/appleinternal")))
									(require-all
										(debug-mode)
										(require-any
											(subpath "/AppleInternal")
											(subpath "/usr/local/lib")))
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}/Library/NanoTimeKit/FaceSupport")
										(require-any
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.Argon'")
											(entitlement-is-bool-true "b'com.apple.private.security.storage.NanoTimeKit.FaceSupport'")))
									(require-all
										(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
										(subpath "/private/var/OOPJit")
										(extension "b'com.apple.sandbox.oopjit'")))))))))))
(allow file-read-data
	(require-all
		(literal)
		(require-not (extension "b'com.apple.sandbox.executable'"))))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/HTTPStorages")
	(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
	(literal-prefix "${HOME}/Library/PPTDevice")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
	(literal-prefix "${HOME}/Library/Logs/CrashReporter")
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Caches")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal "/private/var/run/syslog")
	(extension "b'com.apple.sharing.airdrop.readonly'")
	(extension "b'com.apple.quicklook.readonly'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-only'")
	(extension "b'com.apple.app-sandbox.read'")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-only'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-all
		(extension "b'com.apple.sandbox.system-container'")
		(entitlement-is-bool-true "b'com.apple.security.system-container'")
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension "b'com.apple.sandbox.system-group'")
		(require-any
			(require-all
				(entitlement-is-present "b'com.apple.security.system-groups'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present "b'com.apple.security.system-group-containers'")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(literal-prefix "${HOME}")))
(allow file-test-existence)
(allow file-write*
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(extension "b'com.apple.app-sandbox.read-write'")
	(extension "b'com.apple.security.exception.files.home-relative-path.read-write'")
	(extension "b'com.apple.security.exception.files.absolute-path.read-write'")
	(require-all
		(require-all (require-not (subpath "/private/var/logs/MobileMediaFactoryLogs"))
(require-not (subpath "/private/var/logs/MobileLibraryLogs")))
		(require-not (subpath "/private/var/logs/WirelessLibraryLogs"))
		(require-any
			(require-any (subpath "/private/var/MobileAsset/AssetsV2/downloadDir")
(subpath "/private/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/downloadDir")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/com.apple.nsurlsessiond"))
			(require-any (subpath "/private/var/tmp/com.apple.nsurlsessiond")
(subpath-prefix "${PROCESS_TEMP_DIR}/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.nsurlsessiond"))
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.UserManagedAssets")
			(require-any (literal "/private/var/tmp/AirTraffic")
(literal-prefix "${FRONT_USER_HOME}/tmp/AirTraffic")
(subpath-prefix "${HOME}/Library/com.apple.nsurlsessiond-launchd")
(subpath-prefix "${HOME}/Library/com.apple.nsurlsessiond")
(subpath-prefix "${HOME}/Library/Logs/com.apple.nsurlsessiond")
(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs/com.apple.nsurlsessiond"))
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-any
							(regex #"^/private/var/mobile/Media/Downloads$" #"^/private/var/mobile/Media/Downloads/" #"^/private/var/mobile/Media/[^/]+/Downloads$" #"^/private/var/mobile/Media/[^/]+/Downloads/" #"^/private/var/mobile/Media/Purchases$" #"^/private/var/mobile/Media/Purchases/" #"^/private/var/mobile/Media/[^/]+/Purchases$" #"^/private/var/mobile/Media/[^/]+/Purchases/" #"^/private/var/mobile/Media/ManagedPurchases$" #"^/private/var/mobile/Media/ManagedPurchases/" #"^/private/var/mobile/Media/[^/]+/ManagedPurchases$" #"^/private/var/mobile/Media/[^/]+/ManagedPurchases/" #"^/private/var/euser[0-9]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/euser[0-9]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/" #"^/private/var/[-0-9A-F]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/[-0-9A-F]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/" #"^/private/var/Users/[^/]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s$" #"^/private/var/Users/[^/]+/Media/((((([^/]+/)?Download|Purchase)|[^/]+/Purchase)|ManagedPurchase)|[^/]+/ManagedPurchase)s/")
							(regex #"^/private/var/mobile/Media/Music/Cache/" #"^/private/var/mobile/Media/Music/Cache$" #"^/private/var/mobile/Media/[^/]+/Music/Cache/" #"^/private/var/mobile/Media/[^/]+/Music/Cache$" #"^/private/var/mobile/Media/Music/Downloads/" #"^/private/var/mobile/Media/Music/Downloads$" #"^/private/var/mobile/Media/[^/]+/Music/Downloads/" #"^/private/var/mobile/Media/[^/]+/Music/Downloads$" #"^/private/var/euser[0-9]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/euser[0-9]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$" #"^/private/var/[-0-9A-F]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/[-0-9A-F]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$" #"^/private/var/Users/[^/]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)/" #"^/private/var/Users/[^/]+/Media/((([^/]+/)?Music/Cache|Music/Downloads)|[^/]+/Music/Downloads)$")
							(regex #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
							(require-all
								(vnode-type REGULAR-FILE)
								(regex #"^/private/var/mobile/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/euser[0-9]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/[-0-9A-F]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/" #"^/private/var/Users/[^/]+/Library/com[.]apple[.]nsurlsessiond/[^/]+/[^/]+/Uploads/"))))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies(([.]dat)?|[^/]+[.]dat)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Caches/com[.]apple[.]nsurlsessiond")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]UserManagedAssets")
							(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/com[.]apple[.]UserManagedAssets")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-any
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$")
							(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[.]dat$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Cookies/[^/]+[.]binarycookies[^/]+[.]dat$")))
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.nsurlsessiond"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.nsurlsessiond"))))
			(require-all
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(require-any
					(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
					(require-all
						(extension "b'com.apple.sandbox.system-container'")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))))
(allow file-write-create
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
			(literal-prefix "${HOME}/Library/Logs/CrashReporter")))
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${HOME}/Library/HTTPStorages")
			(literal-prefix "${HOME}/Library/Caches"))))
(allow file-write-data
	(literal "/dev/aes_0")
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/zero")
			(literal "/dev/null")
			(literal "/dev/dtracehelper"))))
(allow file-write-unlink
	(entitlement-is-present "b'com.apple.private.oop-jit.loader'")
	(require-all
		(subpath "/private/var/OOPJit")
		(extension "b'com.apple.sandbox.oopjit'")))
(allow file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true "b'com.apple.private.amfi.can-execute-cdhash'")
			(require-all
				(extension "b'com.apple.sandbox.system-container'")
				(entitlement-is-bool-true "b'com.apple.security.system-container'")
				(literal "/private/var/containers/Data/System/")
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(extension "b'com.apple.sandbox.system-group'")
				(require-any
					(require-all
						(entitlement-is-present "b'com.apple.security.system-groups'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
					(require-all
						(entitlement-is-present "b'com.apple.security.system-group-containers'")
						(literal "/private/var/containers/Shared/SystemGroup/")
						(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$")))))))
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-quota-stat)
(allow fs-quota-sync)
(allow fs-snapshot-mount)
(allow iokit-get-properties)
(allow iokit-open-service)
(allow lsopen)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(global-name "com.apple.securityd")
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(global-name "com.apple.lsd.xpc")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(global-name "com.apple.wifi.manager")
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.audio.AudioComponentRegistrar")
	(global-name "com.apple.mobile.usermanagerd.xpc")
	(global-name "com.apple.ocspd")
	(global-name "com.apple.trustd")
	(global-name "com.apple.awdd")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.installcoordinationd")
	(global-name "com.apple.PowerManagement.control")
	(require-any (global-name "com.apple.coremedia.assetdownloader")
(global-name "com.apple.coremedia.mediaplaybackd.assetdownloader.xpc"))
	(global-name "com.apple.cache_delete.public")
	(global-name "com.apple.duetactivityscheduler")
	(xpc-service-name "com.apple.extensionkitservice")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.ProgressReporting")
	(extension "b'com.apple.pluginkit.plugin-service'")
	(require-all
		(global-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-lookup.global-name'"))
	(require-all
		(local-name-regex #".+")
		(extension "b'com.apple.security.exception.mach-lookup.local-name'"))
	(require-all
		(require-not (global-name "com.apple.mediaserverd"))
		(require-any
			(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
			(global-name "com.apple.SystemConfiguration.DNSConfiguration")
			(global-name "com.apple.SystemConfiguration.NetworkInformation")
			(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
			(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
			(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
			(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
			(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
			(global-name "com.apple.coremedia.sandboxserver.xpc")
			(global-name "com.apple.SystemConfiguration.helper")
			(global-name "com.apple.commcenter.xpc")
			(global-name "com.apple.SystemConfiguration.configd")
			(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
			(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
			(global-name "com.apple.accountsd.accountmanager")
			(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
			(global-name "com.apple.audio.AudioSession")
			(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
			(global-name "com.apple.GSSCred")
			(global-name "com.apple.coremedia.routingcontext.xpc")
			(global-name "com.apple.coremedia.figcontentkeysession.xpc")
			(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
			(global-name "com.apple.cfnetwork.cfnetworkagent")
			(global-name "com.apple.coremedia.sts")
			(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
			(global-name "com.apple.nehelper")
			(global-name "com.apple.nesessionmanager")
			(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
			(global-name "com.apple.networkserviceproxy.fetch-token")
			(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
			(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
			(global-name "com.apple.springboard.backgroundappservices")
			(global-name "com.apple.dnssd.service")
			(global-name "com.apple.coremedia.formatreader.xpc")
			(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
			(global-name "com.apple.marco")
			(global-name "com.apple.coremedia.endpoint.xpc")
			(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
			(global-name "com.apple.usymptomsd")
			(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
			(global-name "com.apple.SystemConfiguration.PPPController")
			(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
			(global-name "com.apple.airplay.apsynccontroller.xpc")
			(global-name "com.apple.commcenter.cupolicy.xpc")
			(global-name "com.apple.itunesstored.xpc")
			(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
			(global-name "com.apple.nsurlsessiond")
			(global-name "com.apple.coremedia.videocompositor")
			(global-name "com.apple.coremedia.customurlloader.xpc")
			(global-name "com.apple.symptomsd")
			(global-name "com.apple.AppSSO.service-xpc")
			(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
			(global-name "com.apple.audioanalyticsd")
			(global-name "com.apple.symptoms.symptomsd.managed_events")
			(global-name "com.apple.cfnetwork.AuthBrokerAgent")
			(global-name "com.apple.coremedia.bytestream.xpc")
			(global-name "com.apple.coremedia.systemcontroller.xpc")
			(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
			(global-name "com.apple.coremedia.admin")
			(global-name "com.apple.coremedia.asset.xpc")
			(global-name "com.apple.itunescloudd.xpc")
			(global-name "com.apple.pegasus")
			(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
			(global-name "com.apple.coremedia.visualcontext.xpc")
			(global-name "com.apple.identityservicesd.embedded.auth")
			(global-name "com.apple.privacyaccountingd")
			(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
			(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
			(global-name "com.apple.coremedia.player.xpc")
			(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
			(global-name "com.apple.networkd")
			(global-name "com.apple.coremedia.sandboxserver")
			(global-name "com.apple.timesync.ptp.manager")
			(global-name "com.apple.coremedia.assetimagegenerator.xpc")
			(require-all
				(global-name "com.apple.ak.auth.xpc")
				(require-any
					(process-attribute is-apple-signed-executable)
					(entitlement-is-bool-true "b'com.apple.authkit.client'")
					(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
					(entitlement-is-bool-true "b'com.apple.authkit.client.private'")
					(require-all
						(xpc-service-name "com.apple.WebKit.")
						(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
						(require-any
							(xpc-service-name-regex #".+")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(global-name "com.apple.SharedWebCredentials")
									(global-name "com.apple.datamigrator")
									(global-name "com.apple.Honeybee.event-notify")
									(global-name "com.apple.mobile.usermanagerd.xpc")))))))
			(require-all
				(global-name "com.apple.ak.anisette.xpc")
				(require-any
					(process-attribute is-apple-signed-executable)
					(entitlement-is-bool-true "b'com.apple.authkit.client'")
					(entitlement-is-bool-true "b'com.apple.authkit.client.internal'")
					(entitlement-is-bool-true "b'com.apple.authkit.client.private'")
					(require-all
						(xpc-service-name "com.apple.WebKit.")
						(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
						(require-any
							(xpc-service-name-regex #".+")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(global-name "com.apple.SharedWebCredentials")
									(global-name "com.apple.datamigrator")
									(global-name "com.apple.Honeybee.event-notify")
									(global-name "com.apple.mobile.usermanagerd.xpc")))))))
			(require-all
				(global-name "com.apple.networkd_privileged")
				(require-any
					(entitlement-is-bool-true "b'com.apple.networkd.modify_settings'")
					(entitlement-is-bool-true "b'com.apple.networkd.disable_opportunistic'")
					(entitlement-is-bool-true "b'com.apple.networkd.advisory_socket'")
					(entitlement-is-bool-true "b'com.apple.networkd_privileged'")
					(entitlement-is-bool-true "b'com.apple.networkd.persistent_interface'")
					(require-all
						(xpc-service-name "com.apple.WebKit.")
						(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
						(require-any
							(xpc-service-name-regex #".+")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(global-name "com.apple.SharedWebCredentials")
									(global-name "com.apple.datamigrator")
									(global-name "com.apple.Honeybee.event-notify")
									(global-name "com.apple.mobile.usermanagerd.xpc")))))))
			(require-all
				(require-not (global-name "com.apple.CARenderServer"))
				(require-any
					(global-name "com.apple.managedconfiguration.profiled.public")
					(global-name "com.apple.system.logger")
					(global-name "com.apple.mobilegestalt.xpc")
					(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
					(global-name "com.apple.cfprefsd.agent")
					(global-name "com.apple.containermanagerd")
					(global-name "com.apple.containermanagerd.system")
					(local-name "com.apple.cfprefsd.agent")
					(global-name "com.apple.diagnosticd")
					(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
					(global-name "com.apple.logd")
					(global-name "com.apple.logd.events")
					(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
					(global-name "com.apple.lsd.mapdb")
					(global-name "com.apple.lsd.open")
					(global-name "com.apple.CoreAuthentication.daemon")
					(global-name "com.apple.analyticsd")
					(global-name "com.apple.ctkd.token-client")
					(global-name "com.apple.distributed_notifications@1v3")
					(global-name "com.apple.aggregated")
					(global-name "com.apple.duetknowledged.activity")
					(global-name "com.apple.runningboard")
					(global-name "com.apple.system.libinfo.muser")
					(global-name "com.apple.lsd.openurl")
					(global-name "com.apple.tccd")
					(global-name "com.apple.lsd.advertisingidentifiers")
					(require-all
						(global-name "com.apple.coreduetd.people")
						(entitlement-is-bool-true "b'com.apple.coreduetd.people'"))
					(require-all
						(xpc-service-name "com.apple.WebKit.")
						(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
						(require-any
							(xpc-service-name-regex #".+")
							(require-all
								(process-attribute is-apple-signed-executable)
								(require-any
									(global-name "com.apple.SharedWebCredentials")
									(global-name "com.apple.datamigrator")
									(global-name "com.apple.Honeybee.event-notify")
									(global-name "com.apple.mobile.usermanagerd.xpc")))))
					(require-all
						(global-name "com.apple.system.notification_center")
						(entitlement-is-bool-true "b'com.apple.security.on-demand-install-capable'"))
					(require-all
						(global-name "com.apple.osanalytics.osanalyticshelper")
						(process-attribute is-apple-signed-executable)))))))
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow necp-client-open)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow process-codesigning)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow socket-ioctl)
(allow socket-option-get)
(allow socket-option-set)
(allow syscall-unix)
(allow syscall-mach)
(allow syscall-mig)
(allow system-fcntl)
(allow system-fsctl
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 32))
	(fsctl-command-regex [UNSUPPORTED](_IO "J" 3)))
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-necp-client-action)
(allow system-privilege)
(allow user-preference-read
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.WebFoundation")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.nsurlsessiond")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.Duet")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.ids")
	(preference-domain "com.apple.mt")
	(preference-domain "com.apple.conference")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.corevideo")
	(extension "b'com.apple.security.exception.shared-preference.read-write'")
	(extension "b'com.apple.security.exception.shared-preference.read-only'")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.da")
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(preference-domain "com.apple.demo-settings")
			(preference-domain "com.apple.security")
			(require-all
				(preference-domain "com.apple.itunesstored")
				(entitlement-is-bool-true "b'com.apple.itunesstored.private'")))))
(allow managed-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension "b'com.apple.security.exception.managed-preference.read-only'"))
(allow user-preference-write
	(preference-domain "com.apple.nsurlsessiond"))
(allow default-message-filter)
