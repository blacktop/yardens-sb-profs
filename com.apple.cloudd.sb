(version 1)
(deny default)
(allow darwin-notification-post)
(allow dynamic-code-generation)
(allow file-clone)
(allow file-issue-extension
	(require-all
		(extension-class "com.apple.app-sandbox.read-write")
		(require-any
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))))
	(require-all
		(extension-class "com.apple.app-sandbox.read")
		(require-any
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read-write")
		(require-any
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))))
	(require-all
		(extension-class "com.apple.aned.read-only")
		(require-any
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))))
	(require-all
		(extension-class "com.apple.mediaserverd.read")
		(require-any
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-only)))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.security.exception.files.home-relative-path.read-write)))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.quicklook.readonly)
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.app-sandbox.read)
					(extension com.apple.app-sandbox.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)
					(extension com.apple.sharing.airdrop.readonly)))))
	(require-all
		(extension-class "com.apple.quicklook.readonly")
		(require-any
			(extension com.apple.quicklook.readonly)
			(extension com.apple.security.exception.files.home-relative-path.read-only)
			(extension com.apple.app-sandbox.read)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-only)
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(extension com.apple.sharing.airdrop.readonly)))
	(require-all
		(extension-class "com.apple.sharing.airdrop.readonly")
		(require-any
			(extension com.apple.quicklook.readonly)
			(extension com.apple.security.exception.files.home-relative-path.read-only)
			(extension com.apple.app-sandbox.read)
			(extension com.apple.app-sandbox.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-only)
			(extension com.apple.security.exception.files.home-relative-path.read-write)
			(extension com.apple.security.exception.files.absolute-path.read-write)
			(extension com.apple.sharing.airdrop.readonly)))
	(require-all
		(extension com.apple.sandbox.executable)
		(require-not (literal))
		(require-any
			(extension-class "com.apple.app-sandbox.read")
			(extension-class "com.apple.aned.read-only")
			(extension-class "com.apple.mediaserverd.read")))
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/CloudKit")
			(literal)
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-any
							(regex #"^/private/var/mobile/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/euser[0-9]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/[-0-9A-F]+/Library/Caches/CloudKit/[^/]+/[^/]+" #"^/private/var/Users/[^/]+/Library/Caches/CloudKit/[^/]+/[^/]+")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
							(regex #"^/private/var/mobile/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Library/Containers/[^/]+/Data/Library/Caches/CloudKit")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.security.exception.files.home-relative-path.read-only)
					(extension com.apple.security.exception.files.absolute-path.read-only)
					(extension com.apple.security.exception.files.home-relative-path.read-write)
					(extension com.apple.security.exception.files.absolute-path.read-write)))
			(require-all
				(extension-class "com.apple.nsurlsessiond.readonly")
				(extension com.apple.sandbox.executable))
			(require-all
				(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.cloudd")
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")
					(extension-class "com.apple.mediaserverd.read-write")
					(extension-class "com.apple.aned.read-only")
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
				(require-any
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
					(require-all
						(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
						(require-any
							(extension-class "com.apple.quicklook.readonly")
							(extension-class "com.apple.app-sandbox.read-write")
							(extension-class "com.apple.app-sandbox.read")
							(extension-class "com.apple.sharing.airdrop.readonly")
							(extension-class "com.apple.mediaserverd.read-write")
							(extension-class "com.apple.nsurlsessiond.readonly")
							(extension-class "com.apple.wcd.readonly")
							(extension-class "com.apple.aned.read-only")
							(extension-class "com.apple.mediaserverd.read")
							(extension-class "com.apple.spotlight-indexable")))
					(require-all
						(literal "/private/var/")
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(literal "/private/var/")
						(require-any
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-all
										(subpath-prefix "${FRONT_USER_HOME}")
										(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$"))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))))
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension-class "com.apple.app-sandbox.read-write")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")
						(require-not (extension-class "com.apple.app-sandbox.read-write")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(require-not (extension-class "com.apple.app-sandbox.read-write")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
						(require-not (extension-class "com.apple.app-sandbox.read-write")))
					(require-all
						(extension-class "com.apple.quicklook.readonly")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-any
									(extension-class "com.apple.quicklook.readonly")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.wcd.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.spotlight-indexable")))
							(require-all
								(extension-class "com.apple.corespotlightservice.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.foundation.upload-prep.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-any
									(extension-class "com.apple.quicklook.readonly")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.wcd.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.spotlight-indexable")))
							(require-all
								(extension-class "com.apple.corespotlightservice.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.foundation.upload-prep.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
					(require-all
						(extension-class "com.apple.sharing.airdrop.readonly")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-any
									(extension-class "com.apple.quicklook.readonly")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.wcd.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.spotlight-indexable")))
							(require-all
								(extension-class "com.apple.corespotlightservice.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.foundation.upload-prep.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(extension com.apple.sandbox.container)
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
								(literal "/private/var/")
								(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
								(require-any
									(extension-class "com.apple.quicklook.readonly")
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.wcd.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")
									(extension-class "com.apple.spotlight-indexable")))
							(require-all
								(extension-class "com.apple.corespotlightservice.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.foundation.upload-prep.read-write")
								(require-any
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
										(literal "/private/var/")
										(require-any
											(subpath-prefix "${FRONT_USER_HOME}")
											(subpath-prefix "${HOME}")))))
							(require-all
								(extension-class "com.apple.app-sandbox.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.aned.read-only")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(require-any
									(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
									(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
									(require-all
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
										(require-any
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
											(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
					(require-all
						(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
						(require-any
							(require-all
								(extension com.apple.sandbox.container)
								(require-any
									(require-all
										(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
										(literal "/private/var/")
										(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
									(require-all
										(literal "/private/var/PersonaVolumes/")
										(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$")
										(require-any
											(extension-class "com.apple.quicklook.readonly")
											(extension-class "com.apple.app-sandbox.read-write")
											(extension-class "com.apple.app-sandbox.read")
											(extension-class "com.apple.sharing.airdrop.readonly")
											(extension-class "com.apple.mediaserverd.read-write")
											(extension-class "com.apple.nsurlsessiond.readonly")
											(extension-class "com.apple.wcd.readonly")
											(extension-class "com.apple.aned.read-only")
											(extension-class "com.apple.mediaserverd.read")
											(extension-class "com.apple.spotlight-indexable")))
									(require-all
										(extension-class "com.apple.corespotlightservice.read-write")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/com.apple.corespotlightservice/?")
											(require-all
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/com[.]apple[.]corespotlightservice$")
												(literal "/private/var/")
												(require-any
													(subpath-prefix "${FRONT_USER_HOME}")
													(subpath-prefix "${HOME}")))))
									(require-all
										(extension-class "com.apple.foundation.upload-prep.read-write")
										(require-any
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/tmp/?")
											(require-all
												(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$")
												(literal "/private/var/")
												(require-any
													(subpath-prefix "${FRONT_USER_HOME}")
													(subpath-prefix "${HOME}")))))
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(require-any
											(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
											(require-all
												(literal "/private/var/")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(require-any
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(require-any
											(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
											(require-all
												(literal "/private/var/")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(require-any
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(require-any
											(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
											(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
											(require-all
												(literal "/private/var/")
												(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
												(require-any
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
													(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))))))
							(require-all
								(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
								(literal "/private/var/")
								(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))))))
			(require-all
				(process-attribute is-apple-signed-executable)
				(extension-class "com.apple.webkit.map-executable")
				(extension com.apple.sandbox.executable))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(extension com.apple.sandbox.executable)
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension-class "com.apple.quicklook.readonly")
				(require-any
					(extension com.apple.sandbox.executable)
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.sharing.airdrop.readonly")
				(require-any
					(extension com.apple.sandbox.executable)
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(entitlement-is-bool-true com.apple.security.system-container)
				(require-any
					(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
					(require-all
						(extension com.apple.sandbox.system-container)
						(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(literal "/private/var/containers/Data/System/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
									(require-all
										(extension-class "com.apple.mediaserverd.read")
										(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.wcd.readonly")
				(require-any
					(extension com.apple.sandbox.executable)
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.app-sandbox.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension com.apple.fileprovider.read-write)
				(require-any
					(extension-class "com.apple.app-sandbox.read-write")
					(extension-class "com.apple.app-sandbox.read")))
			(require-all
				(extension com.apple.sandbox.system-group)
				(require-any
					(require-all
						(entitlement-is-present com.apple.security.system-groups)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
					(require-all
						(entitlement-is-present com.apple.security.system-group-containers)
						(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
						(require-any
							(require-all
								(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
								(require-any
									(extension-class "com.apple.app-sandbox.read-write")
									(extension-class "com.apple.app-sandbox.read")
									(extension-class "com.apple.sharing.airdrop.readonly")
									(extension-class "com.apple.mediaserverd.read-write")
									(extension-class "com.apple.nsurlsessiond.readonly")
									(extension-class "com.apple.aned.read-only")
									(extension-class "com.apple.mediaserverd.read")))
							(require-all
								(extension-class "com.apple.mediaserverd.read")
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(require-any
									(require-all
										(extension-class "com.apple.app-sandbox.read")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
									(require-all
										(extension-class "com.apple.aned.read-only")
										(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(extension com.apple.sandbox.executable)
					(extension-class "com.apple.mediaserverd.read")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount"))
			(require-all
				(debug-mode)
				(subpath-prefix "${FRONT_USER_HOME}/XcodeBuiltProducts"))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")))
			(require-all
				(extension-class "com.apple.mediaserverd.read-write")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension-class "com.apple.app-sandbox.read")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures")))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension-class "com.apple.mediaserverd.read")
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.aned.read-only")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.app-sandbox.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read-write")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))
					(require-all
						(extension-class "com.apple.mediaserverd.read")
						(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd"))))
			(require-all
				(extension-class "com.apple.aned.read-only")
				(require-any
					(subpath "/System/Library")
					(subpath "/Library/RegionFeatures"))))))
(allow file-lock)
(allow file-read*
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/")
(subpath-prefix "${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-only}")
(literal-prefix "NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-only}"))
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(literal "/private/var/Managed Preferences/mobile/.GlobalPreferences.plist")
	(extension com.apple.sharing.airdrop.readonly)
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Preferences/.GlobalPreferences.plist")
	(extension com.apple.quicklook.readonly)
	(extension com.apple.security.exception.files.home-relative-path.read-only)
	(extension com.apple.app-sandbox.read)
	(extension com.apple.app-sandbox.read-write)
	(extension com.apple.sandbox.executable)
	(extension com.apple.security.exception.files.absolute-path.read-only)
	(extension com.apple.security.exception.files.home-relative-path.read-write)
	(extension com.apple.security.exception.files.absolute-path.read-write)
	(require-all
		(require-all (require-not (literal "/System/Library/Caches/apticket.der"))
(require-not (subpath "/System/Library/Caches/com.apple.factorydata"))
(require-not (subpath "/System/Library/Caches/com.apple.kernelcaches")))
		(require-not (subpath "/private/var/hardware/FactoryData"))
		(require-not (literal "/usr/standalone/firmware/apticket.der"))
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd")
			(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
			(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.cloudd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.cloudd"))
			(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
			(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
			(literal "/dev/null")
			(literal "/dev/aes_0")
			(subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.icloud.findmydevice.managed/Library")
			(literal "/dev/urandom")
			(require-any (subpath "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.configurationprofiles/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/ConfigurationProfiles/PublicInfo")
(subpath-prefix "${FRONT_USER_HOME}/Library/UserConfigurationProfiles/PublicInfo"))
			(subpath "/private/var/db/datadetectors/sys")
			(literal "/dev/dtracehelper")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.mobilegestaltcache/Library/Caches/com.apple.MobileGestalt.plist")
			(literal "/dev/zero")
			(literal "/dev/random")
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(subpath-prefix "${HOME}/Library/Fonts")
			(literal "/private/var/preferences/com.apple.networkd.plist")
			(require-any (subpath-prefix "${HOME}/Library/Caches/CloudKit")
(subpath-prefix "${HOME}/Library/Logs/awd")
(subpath-prefix "${HOME}/Library/Logs/Ubiquity")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
(literal-prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
(literal-prefix "${HOME}")
(literal "/private/var/logs/Ubiquity")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/CloudKit"))
			(subpath "/.TemporaryItems")
			(literal "/private/var/Managed Preferences/mobile/com.apple.SystemConfiguration.plist")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd")
			(literal "/private/var/preferences/com.apple.security.plist")
			(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.cloudd")
			(subpath-prefix "${PROCESS_TEMP_DIR}")
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/CloudKit")
			(literal "/private/var/containers/Shared/SystemGroup/systemgroup.com.apple.nsurlstoragedresources/Library/dafsaData.bin")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
			(literal "/private/var/db/com.apple.networkextension.tracker-info")
			(subpath "/private/var/tmp")
			(literal "/private/var/preferences/com.apple.NetworkStatistics.plist")
			(literal-prefix "${HOME}/Library/Caches")
			(require-all
				(literal "/private/var/")
				(require-any
					(require-all
						(subpath-prefix "${HOME}")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
							(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-any
							(regex #"^/private/var/mobile/[.]DocumentRevisions-V100/" #"^/private/var/mobile/[.]DocumentRevisions-V100$" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+$" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")))
					(require-all
						(literal "/private/var/.DocumentRevisions-V100")
						(regex #"^/private/var/[.]DocumentRevisions-V100/" #"^/private/var/[.]DocumentRevisions-V100$" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+$"))
					(require-all
						(literal "/private/var/preferences/com.apple.networkextension.uuidcache.plist")
						(process-attribute is-apple-signed-executable))
					(require-all
						(entitlement-is-present com.apple.private.networkextension.configuration)
						(literal "/private/var/preferences/com.apple.networkextension.plist"))))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")
						(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(require-any (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/System/?")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesArtwork"))
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/StoreKit/?")
					(literal)
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(literal "/private/var/")
						(require-any
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/StoreKit$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/StoreKit$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesArtwork$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
							(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/System$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/System$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
			(require-all
				(vnode-type REGULAR-FILE)
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleAccount")
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd"))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleAccount")
					(require-all
						(vnode-type REGULAR-FILE)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd"))
					(require-all
						(vnode-type DIRECTORY)
						(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd"))))
			(require-all
				(extension com.apple.sandbox.application-group)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/")
						(require-any
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+$")
								(subpath-prefix "${FRONT_USER_HOME}"))
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+$"))))))
			(require-all
				(entitlement-is-bool-true com.apple.Contacts.database-allow)
				(extension com.apple.tcc.kTCCServiceAddressBook)
				(require-any
					(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
					(subpath-prefix "${HOME}/Library/AddressBook")
					(literal-prefix "${HOME}/Library/Preferences/com.apple.mobilephone.speeddial.plist")))
			(require-all
				(uid 0)
				(literal "/private/etc/master.passwd"))
			(require-all
				(entitlement-is-bool-true com.apple.coreduetd.people)
				(require-any
					(require-any (literal-prefix "${HOME}/Library/CoreDuet/People")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-wal")
(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-journal"))
					(literal-prefix "${HOME}/Library/CoreDuet/People/interactionC.db-shm")))
			(require-all
				(entitlement-is-bool-true com.apple.security.system-container)
				(extension com.apple.sandbox.system-container)
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(require-any
					(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/")
					(require-all
						(literal "/private/var/containers/Data/System/")
						(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))))
			(require-all
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(extension com.apple.sandbox.system-group)
				(entitlement-is-present com.apple.security.system-groups)
				(entitlement-is-present com.apple.security.system-group-containers))
			(require-all
				(extension com.apple.sandbox.system-group)
				(require-any
					(require-all
						(entitlement-is-present com.apple.security.system-groups)
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))
					(require-all
						(entitlement-is-present com.apple.security.system-group-containers)
						(require-any
							(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")
							(require-all
								(literal "/private/var/containers/Shared/SystemGroup/")
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))
			(require-all
				(entitlement-is-bool-true com.apple.private.logging.diagnostic)
				(extension com.apple.logd.read-only)
				(require-any
					(require-any (subpath "/private/var/userdata/diagnostics")
(subpath "/private/var/db/timesync"))
					(require-any (subpath "/private/var/db/diagnostics")
(subpath "/private/var/db/uuidtext"))))
			(require-all
				(vnode-type BLOCK-DEVICE)
				(vnode-type CHARACTER-DEVICE)))))
(allow file-read-data
	(require-all
		(extension com.apple.sandbox.executable)
		(require-not (literal)))
	(require-all
		(extension com.apple.sandbox.container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
		(literal "/private/var/")
		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}")))))
(allow file-read-metadata
	(vnode-type SYMLINK)
	(literal-prefix "${HOME}/Library/HTTPStorages")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd")
	(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.cloudd")
	(literal-prefix "${HOME}/Library/PPTDevice")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
	(literal-prefix "${HOME}")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
	(literal-prefix "${HOME}/Library/Caches")
	(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
	(literal-prefix "${HOME}/Library/Preferences")
	(extension com.apple.quicklook.readonly)
	(extension com.apple.security.exception.files.home-relative-path.read-only)
	(extension com.apple.app-sandbox.read)
	(extension com.apple.app-sandbox.read-write)
	(extension com.apple.security.exception.files.absolute-path.read-only)
	(extension com.apple.security.exception.files.home-relative-path.read-write)
	(extension com.apple.security.exception.files.absolute-path.read-write)
	(extension com.apple.sharing.airdrop.readonly)
	(literal-prefix "${HOME}")
	(literal-prefix "${HOME}/Library/Preferences")
	(literal-prefix "${HOME}/Library/Caches/powerlog.launchd")
	(literal "/private/var/run/syslog")
	(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/iTunesMetadata.plist")
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-all
						(literal "/private/var/")
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$"))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/iTunesMetadata[.]plist$")
						(literal "/private/var/"))))
			(require-all
				(debug-mode)
				(require-any
					(literal-prefix "${HOME}")
					(literal-prefix "${HOME}/Library/Preferences")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
			(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension com.apple.sandbox.system-container)
		(entitlement-is-bool-true com.apple.security.system-container)
		(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))
	(require-all
		(extension com.apple.sandbox.system-group)
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.system-groups)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present com.apple.security.system-group-containers)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type DIRECTORY)
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(require-any
			(literal-prefix "${HOME}/Library/Preferences")
			(literal-prefix "${HOME}"))))
(allow file-test-existence)
(allow file-write*
	(require-any (subpath-prefix "${HOME}/Library/Caches/CloudKit")
(subpath-prefix "${HOME}/Library/Logs/awd")
(subpath-prefix "${HOME}/Library/Logs/Ubiquity")
(subpath-prefix "${HOME}/Library/Logs/CrashReporter/DiagnosticLogs")
(literal-prefix "${HOME}/Library/Logs/ProtectedCloudStorage.log")
(literal-prefix "${HOME}")
(literal "/private/var/logs/Ubiquity")
(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/CloudKit"))
	(extension com.apple.security.exception.files.absolute-path.read-write)
	(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd")
	(subpath-prefix "${HOME}/Library/HTTPStorages/com.apple.cloudd")
	(extension com.apple.security.exception.files.home-relative-path.read-write)
	(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/CloudKit")
	(extension com.apple.app-sandbox.read-write)
	(subpath-prefix "${PROCESS_TEMP_DIR}")
	(subpath-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/${ENTITLEMENT:com.apple.security.exception.nano-paired-storage.subpath.read-write}")
	(subpath "/private/var/tmp")
	(subpath "/.TemporaryItems")
	(literal-prefix "${HOME}/Library/Caches")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond")
	(literal-prefix "${FRONT_USER_HOME}/Library/DeviceRegistry/${ANY_UUID}/NanoPreferencesSync/NanoDomains/${ENTITLEMENT:com.apple.security.exception.nano-preference.read-write}")
	(subpath-prefix "${HOME}/Library/Caches/com.apple.cloudd")
	(literal-prefix "${HOME}/Library/Caches/.com.apple.persistentconnection.settings.lock.lock")
	(require-any (literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection/com.apple.cloudd")
(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection/com.apple.cloudd"))
	(subpath-prefix "${HOME}/Library/Caches/com.apple.AppleAccount")
	(require-any (literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist")
(literal-prefix "${HOME}/Library/Caches/com.apple.persistentconnection.intervalcache.plist.lock"))
	(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(subpath-prefix "${HOME}")
				(require-any
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
					(regex #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_log" #"^/private/var/mobile/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.+log" #"^/private/var/euser[0-9]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/[-0-9A-F]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log" #"^/private/var/Users/[^/]+/Library/Logs/CrashReporter/CFNetwork_com[.]apple[.]cloudd_.*log")
					(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")))
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/CloudKit")
				(subpath-prefix "${FRONT_USER_HOME}"))
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/CloudKit" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/CloudKit")
				(subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(extension com.apple.sandbox.application-group)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/.com.apple."))
		(require-any
			(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Shared/AppGroup/[UNSUPPORTED]+/")
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/[.]com[.]apple[.]")))
			(require-all
				(literal "/private/var/")
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/"))))
	(require-all
		(extension com.apple.sandbox.container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?"))
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/SyncedPreferences/?"))
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(literal "/private/var/")
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/([.]GlobalPreferences|com[.]apple[.]PeoplePicker)[.]plist$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
				(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/[.]GlobalPreferences[.]plist$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences/com[.]apple[.]PeoplePicker[.]plist$")))))
	(require-all
		(vnode-type REGULAR-FILE)
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleAccount")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd")))
	(require-all
		(vnode-type DIRECTORY)
		(require-any
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.AppleAccount")
			(subpath-prefix "${HOME}/Library/Caches/com.apple.nsurlsessiond/Downloads/com.apple.cloudd")))
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/((tmp|Library)|Documents)$")
				(literal "/private/var/")
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/tmp$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$"))))
	(require-all
		(vnode-type REGULAR-FILE)
		(literal-prefix "${HOME}/Library/AddressBook/")
		(entitlement-is-bool-true com.apple.Contacts.database-allow)
		(extension com.apple.tcc.kTCCServiceAddressBook))
	(require-all
		(entitlement-is-bool-true com.apple.Contacts.database-allow)
		(subpath-prefix "${HOME}/Library/AddressBook/Delegates")
		(extension com.apple.tcc.kTCCServiceAddressBook))
	(require-all
		(entitlement-is-bool-true com.apple.security.system-container)
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(extension com.apple.sandbox.system-container)
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Data/System/[UNSUPPORTED]+/"))))
	(require-all
		(vnode-type BLOCK-DEVICE)
		(vnode-type CHARACTER-DEVICE))
	(require-all
		(extension com.apple.sandbox.system-group)
		(require-any
			(require-all
				(entitlement-is-present com.apple.security.system-groups)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/"))
			(require-all
				(entitlement-is-present com.apple.security.system-group-containers)
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/.com.apple.")
				(regex #"/private/var/containers/Shared/SystemGroup/[UNSUPPORTED]+/")))))
(allow file-write-create
	(literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_com.apple.cloudd")
	(require-all
		(require-not (literal-prefix "${HOME}/Library/Logs/CrashReporter/CFNetwork_"))
		(require-any
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
					(literal-prefix "${HOME}/Library/HTTPStorages")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${HOME}/Library/Caches")))
			(require-all
				(extension com.apple.sandbox.container)
				(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
				(require-any
					(require-all
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
						(literal "/private/var/")
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$"))
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")))
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$"))
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$"))
						(extension com.apple.sandbox.application-group)
						(require-any
							(require-all
								(literal "/private/var/PersonaVolumes/")
								(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")))
							(require-all
								(subpath-prefix "${FRONT_USER_HOME}")
								(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))))
			(require-all
				(literal "/private/var/")
				(extension com.apple.sandbox.application-group)
				(require-any
					(require-all
						(literal "/private/var/PersonaVolumes/")
						(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Shared/AppGroup/[^/]+/Library/Preferences$")))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(require-not (regex #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library$" #"^/private/var/mobile/Containers/Shared/AppGroup/[^/]+/Library/Preferences$" #"^/private/var/euser[0-9]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/[-0-9A-F]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$" #"^/private/var/Users/[^/]+/Containers/Shared/AppGroup/[^/]+/Library(/Preferences)?$")))))
			(require-all
				(vnode-type DIRECTORY)
				(require-any
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/PersistentConnection")
					(literal-prefix "${FRONT_USER_HOME}/Library/Logs/CrashReporter/PersistentConnection")
					(literal-prefix "${HOME}/Library/Caches"))))))
(allow file-write-data
	(literal "/dev/aes_0")
	(require-all
		(extension com.apple.sandbox.container)
		(require-not (regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Library/Caches/Snapshots/?"))
		(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$")
		(literal "/private/var/")
		(require-all (require-not (subpath-prefix "${HOME}"))
(require-not (subpath-prefix "${FRONT_USER_HOME}"))))
	(require-all
		(require-not (literal "/dev/urandom"))
		(require-not (literal "/dev/random"))
		(require-any
			(literal "/dev/null")
			(literal "/dev/dtracehelper")
			(literal "/dev/zero"))))
(allow file-write-unlink
	(entitlement-is-present com.apple.private.oop-jit.loader)
	(require-all
		(extension com.apple.sandbox.container)
		(require-any
			(require-all
				(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}"))
				(require-any
					(require-all
						(literal "/private/var/")
						(require-not (regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Library((((/Caches)?|/Caches/Snapshots)|/Preferences)|/SyncedPreferences)$")))
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents(/Inbox)?$")
						(require-not (literal "/private/var/")))))
			(require-all
				(literal "/private/var/PersonaVolumes/")
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Caches/Snapshots$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/Preferences$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Library/SyncedPreferences$"))
				(require-not (regex #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents$" #"^/private/var/PersonaVolumes/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")))
			(require-all
				(extension com.apple.sandbox.container)
				(require-any
					(regex #"/private/var/PersonaVolumes/[UNSUPPORTED]+/Containers/Data/[UNSUPPORTED]+/[UNSUPPORTED]+/Documents/Inbox/?")
					(require-all
						(regex #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/mobile/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/euser[0-9]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/[-0-9A-F]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox/" #"^/private/var/Users/[^/]+/Containers/Data/[^/]+/[^/]+/Documents/Inbox$")
						(literal "/private/var/")
						(require-any (subpath-prefix "${HOME}")
(subpath-prefix "${FRONT_USER_HOME}")))))))
	(require-all
		(subpath "/private/var/OOPJit")
		(extension com.apple.sandbox.oopjit)))
(allow file-write-xattr
	(require-all
		(xattr "com.apple.metadata:com_apple_backup_excludeItem")
		(require-any
			(entitlement-is-bool-true com.apple.private.amfi.can-execute-cdhash)
			(require-all
				(entitlement-is-bool-true com.apple.security.system-container)
				(literal "/private/var/containers/Data/System/")
				(extension com.apple.sandbox.system-container)
				(regex #"^/private/var/containers/Data/System/[^/]+/" #"^/private/var/containers/Data/System/[^/]+$"))
			(require-all
				(literal "/private/var/containers/Shared/SystemGroup/")
				(require-any
					(require-all
						(literal "/private/var/.DocumentRevisions-V100")
						(regex #"^/private/var/[.]DocumentRevisions-V100/" #"^/private/var/[.]DocumentRevisions-V100$" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+$"))
					(require-all
						(subpath-prefix "${FRONT_USER_HOME}")
						(regex #"^/private/var/mobile/[.]DocumentRevisions-V100/" #"^/private/var/mobile/[.]DocumentRevisions-V100$" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+$" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*$"))
					(require-all
						(extension com.apple.sandbox.system-group)
						(require-any
							(require-all
								(entitlement-is-present com.apple.security.system-groups)
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))
							(require-all
								(entitlement-is-present com.apple.security.system-group-containers)
								(regex #"^/private/var/containers/Shared/SystemGroup/[^/]+/" #"^/private/var/containers/Shared/SystemGroup/[^/]+$"))))))))
	(require-all
		(literal "/private/var/")
		(require-any
			(require-all
				(literal "/private/var/.DocumentRevisions-V100")
				(regex #"^/private/var/[.]DocumentRevisions-V100/" #"^/private/var/[.]DocumentRevisions-V100$" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/[.]DocumentRevisions-V100-bad-[0-9]+$"))
			(require-all
				(subpath-prefix "${FRONT_USER_HOME}")
				(regex #"^/private/var/mobile/[.]DocumentRevisions-V100/" #"^/private/var/mobile/[.]DocumentRevisions-V100$" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+/" #"^/private/var/mobile/[.]DocumentRevisions-V100-bad-[0-9]+$" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/euser[0-9]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/[-0-9A-F]+/[.]DocumentRevisions-V100-bad-[0-9]*$" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*/" #"^/private/var/Users/[^/]+/[.]DocumentRevisions-V100-bad-[0-9]*$")))))
(allow fs-quota*)
(allow fs-quota-get)
(allow fs-quota-on)
(allow fs-quota-off)
(allow fs-quota-set*)
(allow fs-quota-set-limits)
(allow fs-quota-set-usage)
(allow fs-quota-stat)
(allow fs-quota-sync)
(allow fs-snapshot-mount)
(allow iokit-get-properties
	(iokit-property "soc-generation")
	(iokit-user-client-class "AppleJPEGDriver")
	(iokit-property "AppleJPEGNumCores")
	(iokit-property "AppleJPEGSupportsAppleInterchangeFormats")
	(require-all
		(iokit-property "IOSurfaceAcceleratorCapabilitiesDict")
		(iokit-user-client-class "IOService")))
(allow ipc-posix-shm-read-data
	(require-any (ipc-posix-name "FNetwork.defaultStorageSession")
(ipc-posix-name "com.apple.AppleDatabaseChanged")))
(allow ipc-posix-shm-write-data
	(ipc-posix-name "com.apple.AppleDatabaseChanged"))
(allow lsopen)
(allow mach-bootstrap)
(allow mach-cross-domain-lookup)
(allow mach-derive-port)
(allow mach-kernel-endpoint)
(allow mach-lookup
	(require-any (global-name "com.apple.coremedia.samplebufferaudiorenderer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeyboss.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.figcontentkeysession.xpc"))
	(global-name "com.apple.securityd")
	(global-name "com.apple.SystemConfiguration.DNSConfiguration")
	(global-name "com.apple.fairplayd.versioned")
	(global-name "com.apple.mediaserverd")
	(global-name "com.apple.SystemConfiguration.NetworkInformation")
	(require-any (global-name "com.apple.timesync.manager")
(global-name "com.apple.timesync.expositor"))
	(global-name "com.apple.coremedia.mediaplaybackd.assetimagegenerator.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.cpeprotector.xpc")
	(require-any (global-name "com.apple.coremedia.figcpecryptor")
(global-name "com.apple.coremedia.mediaplaybackd.figcpecryptor.xpc"))
	(global-name "com.apple.powerlog.plxpclogger.xpc")
	(require-any (global-name "com.apple.coremedia.samplegenerator.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplegenerator.xpc"))
	(global-name "com.apple.fairplayd")
	(global-name "com.apple.coremedia.sandboxserver.xpc")
	(global-name "com.apple.SystemConfiguration.helper")
	(global-name "com.apple.commcenter.xpc")
	(global-name "com.apple.cdp.daemon")
	(global-name "com.apple.pluginkit.pkd")
	(global-name "com.apple.spaceattributiond")
	(global-name "com.apple.SystemConfiguration.configd")
	(extension com.apple.sandbox.application-group)
	(extension com.apple.pluginkit.plugin-service)
	(global-name "com.apple.accountsd.accountmanager")
	(global-name "com.apple.mobile.keybagd.UserManager.xpc")
	(require-any (global-name "com.apple.psid")
(global-name "com.apple.windowserver.active"))
	(global-name "com.apple.coremedia.mediaplaybackd.player.xpc")
	(global-name "com.apple.CARenderServer")
	(global-name "com.apple.audio.AudioSession")
	(require-any (global-name "com.apple.coremedia.videotarget.xpc")
(global-name "com.apple.coremedia.assetcacheinspector")
(global-name "com.apple.coremedia.mediaplaybackd.videotarget.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.assetcacheinspector.xpc"))
	(global-name "com.apple.coreduetd")
	(global-name "com.apple.GSSCred")
	(global-name "com.apple.mobile.keybagd.xpc")
	(global-name "com.apple.coremedia.routingcontext.xpc")
	(global-name "com.apple.coremedia.figcontentkeysession.xpc")
	(require-any (global-name "com.apple.coremedia.audioprocessingtap.xpc")
(global-name "com.apple.coremedia.samplebufferrendersynchronizer.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.samplebufferaudiorenderer.xpc"))
	(global-name "com.apple.cfnetwork.cfnetworkagent")
	(global-name "com.apple.apsd")
	(global-name "com.apple.coremedia.endpointremotecontrolsession.xpc")
	(global-name "com.apple.coremedia.mediaparserd.formatreader.xpc")
	(global-name "com.apple.SBUserNotification")
	(global-name "com.apple.nehelper")
	(global-name "com.apple.nesessionmanager")
	(require-any (global-name "com.apple.coremedia.capturesource")
(global-name "com.apple.coremedia.capturesession"))
	(global-name "com.apple.networkserviceproxy.fetch-token")
	(global-name "com.apple.itunescloudd.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.bytestream.xpc")
	(global-name "com.apple.coremedia.figcontentkeyboss.xpc")
	(global-name "com.apple.springboard.backgroundappservices")
	(global-name "com.apple.dnssd.service")
	(global-name "com.apple.coreservices.quarantine-resolver")
	(global-name "com.apple.mobile.usermanagerd.xpc")
	(global-name "com.apple.ocspd")
	(global-name "com.apple.protectedcloudstorage.protectedcloudkeysyncing")
	(global-name "com.apple.coremedia.formatreader.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.sandboxserver.xpc")
	(global-name "com.apple.marco")
	(global-name "com.apple.coremedia.endpoint.xpc")
	(global-name "com.apple.coremedia.sts")
	(global-name "com.apple.usymptomsd")
	(global-name "com.apple.trustd")
	(require-any (global-name "com.apple.coremedia.remaker")
(global-name "com.apple.coremedia.mediaplaybackd.remaker.xpc"))
	(global-name "com.apple.SystemConfiguration.PPPController")
	(global-name "com.apple.nano.nanoregistry.paireddeviceregistry")
	(global-name "com.apple.airplay.apsynccontroller.xpc")
	(global-name "com.apple.securityd.general")
	(global-name "com.apple.commcenter.cupolicy.xpc")
	(global-name "com.apple.itunesstored.xpc")
	(require-any (global-name "com.apple.coremedia.remotequeue")
(global-name "com.apple.coremedia.audiodeviceclock.xpc")
(global-name "com.apple.coremedia.mediaplaybackd.audiodeviceclock.xpc"))
	(global-name "com.apple.nsurlsessiond")
	(global-name "com.apple.coremedia.videocompositor")
	(global-name "com.apple.awdd")
	(global-name "com.apple.coremedia.mediaplaybackd.videocompositor.xpc")
	(global-name "com.apple.symptomsd")
	(global-name "com.apple.AppSSO.service-xpc")
	(xpc-service-name "com.apple.extensionkitservice")
	(require-any (global-name "com.apple.coremedia.cpeprotector.xpc")
(global-name "com.apple.coremedia.routingsessionmanager.xpc"))
	(global-name "com.apple.symptoms.symptomsd.managed_events")
	(global-name "com.apple.identityservicesd.pds")
	(global-name "com.apple.coremedia.bytestream.xpc")
	(global-name "com.apple.coremedia.systemcontroller.xpc")
	(global-name "com.apple.SecurityServer")
	(global-name "com.apple.coremedia.admin")
	(global-name "com.apple.coremedia.asset.xpc")
	(global-name "com.apple.CoreServices.coreservicesd")
	(global-name "com.apple.iokit.powerdxpc")
	(global-name "com.apple.pairedsyncd.syncstate")
	(global-name "com.apple.PowerManagement.control")
	(global-name "com.apple.pegasus")
	(global-name "com.apple.coremedia.mediaplaybackd.customurlloader.xpc")
	(global-name "com.apple.coremedia.visualcontext.xpc")
	(global-name "com.apple.privacyaccountingd")
	(global-name "com.apple.coremedia.mediaplaybackd.visualcontext.xpc")
	(global-name "com.apple.coremedia.mediaplaybackd.formatreader.xpc")
	(require-any (global-name "com.apple.coremedia.routediscoverer.xpc")
(global-name "com.apple.coremedia.volumecontroller.xpc"))
	(global-name "com.apple.security.octagon")
	(global-name "com.apple.cache_delete.public")
	(global-name "com.apple.imagent.embedded.auth")
	(global-name "com.apple.coremedia.mediaplaybackd.asset.xpc")
	(global-name "com.apple.networkd")
	(global-name "com.apple.SecureBackupDaemon")
	(global-name "com.apple.coremedia.sandboxserver")
	(global-name "com.apple.duetactivityscheduler")
	(global-name "com.apple.timesync.ptp.manager")
	(global-name "com.apple.coremedia.assetimagegenerator.xpc")
	(global-name "com.apple.datamigrator")
	(global-name "com.apple.cfnetwork.AuthBrokerAgent")
	(global-name "com.apple.coremedia.player.xpc")
	(global-name "com.apple.AssetCacheLocatorService")
	(global-name "com.apple.coremedia.customurlloader.xpc")
	(global-name "com.apple.coremedia.externalstoragedevicemanager.xpc")
	(global-name "com.apple.SystemConfiguration.SCNetworkReachability")
	(global-name "com.apple.audioanalyticsd")
	(extension com.apple.security.exception.mach-lookup.global-name)
	(extension com.apple.security.exception.mach-lookup.local-name)
	(global-name "com.apple.identityservicesd.idquery.embedded.auth")
	(global-name "com.apple.contactsd")
	(global-name "com.apple.spotlight.IndexDelegateAgent")
	(global-name "com.apple.spotlight.IndexAgent")
	(global-name "com.apple.ABDatabaseDoctor")
	(global-name "com.apple.telephonyutilities.callservicesdaemon.callcapabilities")
	(global-name "com.apple.cmfsyncagent.embedded.auth")
	(xpc-service-name "com.apple.ImageIOXPCService")
	(global-name "com.apple.managedconfiguration.profiled.public")
	(global-name "com.apple.system.logger")
	(global-name "com.apple.mobilegestalt.xpc")
	(require-any (global-name "com.apple.cfprefsd.daemon")
(global-name "com.apple.cfprefsd.daemon.system"))
	(global-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.containermanagerd")
	(global-name "com.apple.containermanagerd.system")
	(local-name "com.apple.cfprefsd.agent")
	(global-name "com.apple.diagnosticd")
	(require-any (global-name "com.apple.appsupport.cplogd")
(global-name "com.apple.lsd")
(global-name "com.apple.lsd.icons")
(global-name "com.apple.coreservices.lsuseractivitymanager.xpc"))
	(global-name "com.apple.logd")
	(global-name "com.apple.logd.events")
	(require-any (global-name "com.apple.gputools.service")
(global-name "com.apple.hangtracerd")
(global-name "com.apple.hangtracermonitor"))
	(global-name "com.apple.lsd.mapdb")
	(global-name "com.apple.lsd.open")
	(global-name "com.apple.CoreAuthentication.daemon")
	(global-name "com.apple.analyticsd")
	(global-name "com.apple.ctkd.token-client")
	(global-name "com.apple.distributed_notifications@1v3")
	(global-name "com.apple.aggregated")
	(global-name "com.apple.duetknowledged.activity")
	(global-name "com.apple.runningboard")
	(global-name "com.apple.system.libinfo.muser")
	(global-name "com.apple.lsd.openurl")
	(global-name "com.apple.tccd")
	(global-name "com.apple.lsd.advertisingidentifiers")
	(require-all
		(global-name "com.apple.ak.auth.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true com.apple.authkit.client)
			(entitlement-is-bool-true com.apple.authkit.client.internal)
			(entitlement-is-bool-true com.apple.authkit.client.private)))
	(require-all
		(global-name "com.apple.ak.anisette.xpc")
		(require-any
			(process-attribute is-apple-signed-executable)
			(entitlement-is-bool-true com.apple.authkit.client)
			(entitlement-is-bool-true com.apple.authkit.client.internal)
			(entitlement-is-bool-true com.apple.authkit.client.private)))
	(require-all
		(global-name "com.apple.networkd_privileged")
		(require-any
			(entitlement-is-bool-true com.apple.networkd.advisory_socket)
			(entitlement-is-bool-true com.apple.networkd.disable_opportunistic)
			(entitlement-is-bool-true com.apple.networkd.modify_settings)
			(entitlement-is-bool-true com.apple.networkd.persistent_interface)
			(entitlement-is-bool-true com.apple.networkd_privileged)))
	(require-all
		(global-name "com.apple.coreduetd.people")
		(entitlement-is-bool-true com.apple.coreduetd.people))
	(require-all
		(xpc-service-name "com.apple.WebKit.")
		(xpc-service-name "com.apple.CoreGraphics.CGPDFService")
		(require-any
			(xpc-service-name-regex #".+")
			(require-all
				(process-attribute is-apple-signed-executable)
				(require-any
					(global-name "com.apple.datamigrator")
					(global-name "com.apple.Honeybee.event-notify")
					(global-name "com.apple.mobile.usermanagerd.xpc")
					(global-name "com.apple.SharedWebCredentials")))))
	(require-all
		(global-name "com.apple.system.notification_center")
		(entitlement-is-bool-true com.apple.security.on-demand-install-capable))
	(require-all
		(global-name "com.apple.osanalytics.osanalyticshelper")
		(process-attribute is-apple-signed-executable)))
(allow mach-task-special-port*)
(allow mach-task-special-port-get)
(allow mach-task-special-port-set)
(allow necp-client-open)
(allow network-inbound)
(allow network-bind)
(allow network-outbound)
(allow nvram*)
(allow nvram-delete)
(allow nvram-get)
(allow nvram-set)
(allow process-codesigning)
(allow process-info*)
(allow process-info-codesignature)
(allow process-info-dirtycontrol)
(allow process-info-ledger)
(allow process-info-listpids)
(allow process-info-rusage)
(allow process-info-pidinfo)
(allow process-info-pidfdinfo)
(allow process-info-pidfileportinfo)
(allow process-info-setcontrol)
(allow socket-ioctl)
(allow socket-option-get)
(allow socket-option-set)
(allow syscall-unix)
(allow syscall-mach)
(allow syscall-mig)
(allow system-fcntl)
(allow system-mac-syscall)
(allow system-memorystatus-control)
(allow system-necp-client-action)
(allow system-privilege)
(allow user-preference-read
	(preference-domain "com.apple.UIKit")
	(preference-domain "com.apple.cloudkit.partlycloudd")
	(preference-domain "com.apple.protectedcloudstorage.protectedcloudkeysyncing")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.springboard")
	(preference-domain "kCFPreferencesAnyApplication")
	(preference-domain "com.apple.keyboard")
	(preference-domain "com.apple.iclouddrive.features")
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.purplebuddy")
	(extension com.apple.security.exception.shared-preference.read-write)
	(extension com.apple.security.exception.shared-preference.read-only)
	(preference-domain "com.apple.CoreDuet")
	(preference-domain "com.apple.migration")
	(preference-domain "com.apple.AppSupport")
	(preference-domain "com.apple.iokit.IOMobileGraphicsFamily")
	(preference-domain "com.apple.DataMigration")
	(preference-domain "com.apple.logging")
	(preference-domain "com.apple.coremedia")
	(preference-domain "com.apple.coreaudio")
	(preference-domain "com.apple.CFNetwork")
	(preference-domain "com.apple.mobileipod")
	(preference-domain "com.apple.icloud.findmydeviced.postwipe")
	(preference-domain "com.apple.demo-settings")
	(preference-domain "com.apple.avfoundation")
	(preference-domain "com.apple.NanoRegistry")
	(preference-domain "com.apple.icloud.findmydeviced.public.notbackedup")
	(preference-domain "com.apple.persistentconnection")
	(preference-domain "com.apple.pairedsync")
	(preference-domain "com.apple.marco")
	(preference-domain "com.apple.corevideo")
	(preference-domain "com.apple.AOSNotification.public.notbackedup")
	(preference-domain "com.apple.PeoplePicker")
	(preference-domain "com.apple.hangtracer")
	(preference-domain "com.apple.Accessibility")
	(preference-domain "com.apple.da")
	(require-all
		(debug-mode)
		(require-any (preference-domain "com.apple.cloudd.debug")
(preference-domain "com.apple.cloudkit.partlycloudd.debug")))
	(require-all
		(preference-domain "com.apple.itunesstored")
		(require-not (entitlement-is-bool-true com.apple.itunesstored.private))
		(process-attribute is-apple-signed-executable))
	(require-all
		(process-attribute is-apple-signed-executable)
		(preference-domain "com.apple.security")))
(allow managed-preference-read
	(preference-domain "kCFPreferencesAnyApplication")
	(extension com.apple.security.exception.managed-preference.read-only))
(allow user-preference-write
	(preference-domain "com.apple.cloudkit.partlycloudd")
	(preference-domain "com.apple.mmcs")
	(preference-domain "com.apple.CloudKit")
	(preference-domain "com.apple.cloudd")
	(preference-domain "com.apple.purplebuddy")
	(require-all
		(debug-mode)
		(require-any (preference-domain "com.apple.cloudd.debug")
(preference-domain "com.apple.cloudkit.partlycloudd.debug"))))
(allow process-exec-update-label)
